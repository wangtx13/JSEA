2010 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e classify tui list logging io nio charset charset pipe pipe iterator types command line tool loading a sequence instances from an s v m light feature value pair one instance per line input <p> expected format target feature value feature value targets and features can be indices in s v m light or strings note that targets and features are indices their indices in data and target alphabets may be different though data will be equivalent note that input and output can take multiple files author gregory druck svm light2 vectors logger logger = logger get logger svm light2 vectors get name command option spaced strings input files = command option spaced strings svm light2 vectors input f i l e files containing data to be classified one instance per line command option spaced strings output files = command option spaced strings svm light2 vectors output f i l e write instance list to using indicates stdout command option use pipe from vectors = command option svm light2 vectors use pipe from f i l e text vectors use pipe and alphabets from a previously created vectors + allows creation example a test set vectors that are + compatible a previously created set training vectors command option print output = command option svm light2 vectors print output t r u e| f a l s e print a representation processed data + to standard output option intended debugging command option encoding = command option svm light2 vectors encoding s t r i n g charset charset display name character encoding input not found i o process command line options command option set summary svm light2 vectors a tool creating instance lists feature vectors from comma separated values command option process svm light2 vectors print some helpful messages cases length == 0 command option get list svm light2 vectors print usage exit 1 input files == illegal argument you must include ` input f i l e f i l e in order to specify + files containing instances one per line pipe instance pipe instance list previous instance list = use pipe from vectors was invoked ignore all options use a previously created pipe previous instance list = instance list load use pipe from vectors value instance pipe = previous instance list get pipe build a pipe list< pipe> pipe list = list< pipe> pipe list add svm light2 feature vector and label print output value pipe list add print input and target instance pipe = serial pipes pipe list input files value length != output files value length runtime number input and output files must be same instance list instances = instance list input files value length index = 0 index < input files value length index++ create instance list and open input instances index = instance list instance pipe reader reader input files value index equals reader = input stream reader in reader = input stream reader input stream input files value index encoding value read instances from instances index add thru pipe selective line iterator reader ^\\s # + gdruck we have multiple files data or target alphabet may have elements added to it each we save each instance list immediately after processing each then alphabets won t be same instead process all files before writing instance lists index = 0 index < input files value length index++ save instances to output instances index save output files value index we are reusing a pipe from an instance list created earlier we may have extended label or feature alphabets to maintain compatibility we now save that original instance list back to disk alphabet use pipe from vectors was invoked logger info rewriting extended pipe from + use pipe from vectors value logger info instance = + previous instance list get pipe get instance output stream oos = output stream output stream use pipe from vectors value oos write previous instance list oos close 