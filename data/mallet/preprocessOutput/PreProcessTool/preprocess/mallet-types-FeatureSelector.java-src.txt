2002 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e given an arbitrary scheme ranking features set feature selection an instance list author andrew mc callum <a href= mailto >mccallum edu< a> types logging logger feature selector logger logger = logger get logger feature selector get name only one following two will be non ranked feature vector factory ranker ranked feature vector per label factory per label ranker only one following two will be changed num features = 1 min threshold = p o s i t i v e i n f i n i t y feature selector ranked feature vector factory ranker num features ranker = ranker num features = num features feature selector ranked feature vector factory ranker min threshold ranker = ranker min threshold = min threshold feature selector ranked feature vector per label factory per label ranker num features per label ranker = per label ranker num features = num features feature selector ranked feature vector per label factory per label ranker min threshold per label ranker = per label ranker min threshold = min threshold select features instance list ilist per label ranker != select features per label ilist select features all labels ilist select features all labels instance list ilist ranked feature vector ranking = ranker ranked feature vector ilist feature selection fs = feature selection ilist get data alphabet num features != 1 select number features nf = math min num features ranking single size i = 0 i < nf i++ logger info adding feature +i+ word= +ilist get data alphabet lookup ranking get index at rank i fs add ranking get index at rank i select threshold i = 0 i < ranking single size i++ ranking get value at rank i > min threshold fs add ranking get index at rank i logger info selected + fs cardinality + features from + ilist get data alphabet size + features ilist set per label feature selection ilist set feature selection fs select features per label instance list ilist ranked feature vector rankings = per label ranker ranked feature vectors ilist num classes = rankings length feature selection fs = feature selection num classes i = 0 i < num classes i++ fs i = feature selection ilist get data alphabet ranked feature vector ranking = rankings i nf = math min num features ranking single size nf >= 0 j = 0 j < nf j++ fs i add ranking get index at rank j j = 0 j < ranking single size j++ ranking get value at rank j > min threshold fs i add ranking get index at rank j ilist set feature selection ilist set per label feature selection fs 