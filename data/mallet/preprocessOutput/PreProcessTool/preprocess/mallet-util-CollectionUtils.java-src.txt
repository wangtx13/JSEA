2003 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e gnu trove t hash set gnu trove t hash map gnu trove t procedure created sun jan 25 01 04 29 2004 author <a href= mailto casutton > charles sutton< a> $ collection utils v 1 1 2007 10 22 21 37 40 exp $ collection utils collection utils no instances dump to collection separator retval = iterator it = iterator it has next retval += value it next retval += separator retval dump to collection dump to print collection out dump to print collection separator out dump to separator collection subset collection size random rand list list = list real size = size < size ? size size collections shuffle list rand list sub list 0 real size list sorted union list args1 list args2 sorted set set = tree set set add all args1 set add all args2 list lst = list set size iterator it = set iterator it has next o = it next lst add o lst computes a nondestructive intersection two collections collection intersection collection c1 collection c2 set set = t hash set c1 set retain all c2 set collection union collection c1 collection c2 set set = t hash set c1 set add all c2 set key in map that has greatest score argmax t hash map map a local class! yes virginia legal accumulator t procedure best val = n e g a t i v e i n f i n i t y best obj = execute a b b > best val best val = b best obj = a accumulator procedure = accumulator map each entry procedure procedure best obj fn f input a collection whose elements consist function fn f applied to all elements given collection collection will have same input collection collection map collection fn fn collection = get collection copy copy = collection collection instance instantiation e runtime e should never happen collections always have ctor illegal access e runtime e should never happen collections always have ctor iterator it = iterator it has next copy add fn f it next copy collections 