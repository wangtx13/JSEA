2010 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e semi supervised constraints sum lattice semi supervised state label map types feature vector types instance list list bit set g e constraint that considers either one or two states author gregory druck g e constraint computes composite constraint feature value over all constraint features feature vector fv and a transition from state li1 to li2 input feature vector on transition input position position input in sequence src index source state index transition dest index destination state index transition constraint feature value get composite constraint feature value feature vector input input position src index dest index total constraint value constraint value get value compute expectations using cached lattices lattices cached sum lattices data unlabeled data compute expectations list< sum lattice> lattices zero expectation values called before re computing gradient zero expectations sets that map between state indices and label indices map state label map set state label map state label map map used in multi threading a copy g e constraint g e constraint copy constraint feature only considers one state one state constraint data unlabeled data a bitset size data bit set a constraint feature fires in that instance bit set pre process instance list data gives constraint option to some caching using only feature vector example constrained input features could be cached input feature vector input pre process feature vector input 