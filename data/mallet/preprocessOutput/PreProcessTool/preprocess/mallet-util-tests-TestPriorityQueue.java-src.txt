tests search junit framework created intelli j e a user pereira date jun 18 2005 time 11 19 36 p m test priority queues and their test priority queue test n = 100 item queue element position priority item p priority = p get priority priority set priority p priority = p get position position set position p position = p test priority queue name name test ascending priority queue q = min heap n p = n i = 0 i < n i++ p i = i item e = item i q insert e j = 0 pr = n e g a t i v e i n f i n i t y ascending size q size == n q size > 0 ascending extract j < n queue element e = q extract min ascending order e get priority > pr equals ascending priority e get priority p j++ 1e 5 pr = e get priority test descending priority queue q = min heap n p = n i = 0 i < n i++ p i = i item e = item n i 1 q insert e j = 0 pr = n e g a t i v e i n f i n i t y descending size q size == n q size > 0 descending extract j < n queue element e = q extract min descending order e get priority > pr equals descending priority e get priority p j++ 1e 5 pr = e get priority test change priority priority queue q = min heap n item items = item n i = 0 i < n i++ item e = item n i 1 q insert e items i = e q change priority items n 1 2 q change priority items n 2 1 q change priority items n 2 + 1 n 2 j = 0 pr last = n e g a t i v e i n f i n i t y descending size q size == n q size > 0 descending extract j < n queue element e = q extract min descending order e get priority > pr last pr last = e get priority j == 0 lowest elt e get priority == 2 j == 1 second lowest elt e get priority == 1 q size == 1 penultimate elt e get priority == n 1 q size == 0 elt e get priority == n 2 j++ test reverse priority queue q = min heap n item items = item n i = 0 i < n i++ item e = item n i 1 q insert e items i = e i = 0 i < n i++ q change priority items i i j = 0 pr last = n e g a t i v e i n f i n i t y ascending size q size == n q size > 0 ascending extract j < n queue element e = q extract min ascending order e get priority > pr last pr last = e get priority equals ascending priority items j get priority e get priority equals ascending identity items j e j++ test equal keys priority queue q = min heap n item items = item 20 j = 0 i = 0 i < 5 i++ items j = item 5 q insert items j j++ i = 0 i < 5 i++ items j = item 3 q insert items j j++ i = 0 i < 5 i++ items j = item 4 q insert items j j++ i = 0 i < 5 i++ items j = item 7 q insert items j j++ equals 20 q size i = 0 i < items length i++ q contains items i i = 0 i < 5 i++ queue element e = q extract min q contains q min equals 3 0 e get priority i = 0 i < 5 i++ queue element e = q extract min q contains q min equals 4 0 e get priority i = 0 i < 5 i++ queue element e = q extract min q contains q min equals 5 0 e get priority i = 0 i < 5 i++ queue element e = q extract min q size > 0 q contains q min equals 7 0 e get priority test suite test suite test priority queue junit textui test runner run suite 