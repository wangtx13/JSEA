2002 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e author wei <a href= mailto weili >weili edu< a> share weili ner enron regex io pipe share weili ner types enron message2 token sequence pipe serializable save source = skip = = sent skip to blank line = subject original message content type content transfer encoding forwarded from sent to bcc labels = d a t e t i m e l o a t i o n p e r s o n o r g a n i z a t i o n a r o n y m p h o n e m o n e y p e r e n t hash set header person names enron message2 token sequence label alphabet header person names = hash set instance pipe instance carrier token sequence data = token sequence label sequence target = label sequence label alphabet get target alphabet buffer source = save source ? buffer word transformation wt = word transformation f = carrier get data buffer message = buffer buffered reader = buffered reader reader f skip header before first blank line line = read line line != line equals i line = line to lower i = 5 i <= 9 i++ line starts skip to blank line i i <= 9 header = line substring skip to blank line i length line = read line != line equals line starts || line starts header += line tokenizer st = tokenizer header st has more tokens token = st next token !token ends enron com token = token substring 0 token length 10 dot = token index dot == 1 dot != token last index dot == token last index 1 dot++ dot+1 < token length 1 header person names add token substring dot+1 dot > 1 header person names add token substring 0 dot dot+1 < token length 1 header person names add token substring dot+1 line = read line line = read line != header = i = 0 i < skip length i++ index = line to lower index skip i index != 1 prefix = line substring 0 index trim header = j = 0 j < prefix length j++ prefix at j != prefix at j != > prefix at j != header = header header i = 0 i < skip to blank line length i++ index = line to lower index skip to blank line i index != 1 prefix = line substring 0 index trim header = j = 0 j < prefix length j++ prefix at j != prefix at j != > prefix at j != header = header header line = read line != line equals message append line message append i o e err e current label = o tokenizer st = tokenizer message to <> read text = text = st has more tokens read text text = st next token read text = text equals < tag = st next token tag equals e n a m e x || tag equals t i m e x || tag equals n u m e x next token = st next token next token equals > current label = o tag starts e n a m e x || tag starts t i m e x || tag starts n u m e x type = tag substring tag index +1 type starts t y p e= type = type substring type index \ +1 type last index \ nested entities should something !current label equals o i = 0 i < labels length i++ labels i equals type current label = b + type next token = st next token next token equals > alarm data add token < target add current label save source source append < source append text = tag read text = there no tag in text tokenizer wordst = tokenizer text ~`! #$%^ += |\\ \ < >? \r wordst has more tokens word = wordst next token word equals || word equals || word equals || word equals \r original word = word token token = wt transformed token word check token in header person names header person names contains word to lower token set feature value h e a d e r p e r s o n 1 0 append data add token target add current label save source source append original word source append current label starts b current label = i + current label substring 2 carrier set data data carrier set target target save source carrier set source source carrier write f output stream oos = output stream output stream f oos write header person names oos close i o e err writing + f + + e serialization serial u = 1 u r r e n t s e r i a l v e r s i o n = 0 write output stream out i o out write u r r e n t s e r i a l v e r s i o n out write save source out write header person names read input stream in i o not found = in read save source = in read header person names = hash set in read 