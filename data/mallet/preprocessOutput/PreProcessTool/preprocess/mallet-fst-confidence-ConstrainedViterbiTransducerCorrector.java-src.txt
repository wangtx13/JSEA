2002 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e author aron culotta <a href= mailto culotta >culotta edu< a> confidence logging list types logger corrects a subset link segment s produced a link transducer it s most useful to find link segment s that link transducer least confident in and correct those using link labeling <code>correct least confidence segments< code> corrected segment then propagates to other labelings in sequence using constrained viterbi a viterbi calculation that requires path to pass through corrected segment states constrained viterbi transducer corrector transducer corrector logger logger = logger get logger constrained viterbi transducer corrector get name transducer confidence estimator confidence estimator transducer model list least confident segments constrained viterbi transducer corrector transducer confidence estimator confidence estimator transducer model confidence estimator = confidence estimator model = model constrained viterbi transducer corrector transducer model constrained forward backward confidence estimator model model vector get segment confidences confidence estimator get segment confidences least confident segments from each sequence in previous call to <code>correct least confident segments< code> list get least confident segments least confident segments least confident segments in <code>ilist< code> ilist test instances start tags indicate beginning segments tages indicate inside segments list link segment s one each instance that least confident list get least confident segments instance list ilist start tags tags list ret = list i=0 i < ilist size i++ segment ordered segments = confidence estimator rank segments confidence ilist get i start tags tags ret add ordered segments 0 ret list correct least confident segments instance list ilist start tags tags correct least confident segments ilist start tags tags an list corrected sequences also stores least confident segments an list segments to correct where entries mean no segment was corrected that sequence ilist test instances start tags indicate beginning segments tages indicate inside segments find incorrect we should cycle through least confident segments until find an incorrect one list link sequence s corresponding to corrected tagging each instance in <code>ilist< code> list correct least confident segments instance list ilist start tags tags find incorrect list corrected prediction list = list least confident segments = list logger info get get name + ranking confidence using + confidence estimator get get name i=0 i < ilist size i++ logger fine correcting instance# + i + + ilist size instance instance = ilist get i segment ordered segments = segment 1 sequence input = sequence instance get data sequence truth = sequence instance get target sequence predicted = max lattice model input best output sequence num incorrect = 0 j=0 j < predicted size j++ num incorrect += !predicted get j equals truth get j ? 1 0 num incorrect == 0 nothing to correct least confident segments add corrected prediction list add predicted rank segments confidence ordered segments = confidence estimator rank segments confidence instance start tags tags logger fine ordered segments j=0 j < ordered segments length j++ logger fine ordered segments j to logger fine correcting segment sequence j=0 j < truth size j++ logger fine truth get j + logger fine logger fine ordered segments j=0 j < ordered segments length j++ logger fine ordered segments j to <code>find incorrect< code> find least confident segment that incorrectly labeled use least confident segment segment least confident segment = ordered segments 0 find incorrect j=0 j < ordered segments length j++ !ordered segments j correct least confident segment = ordered segments j find incorrect least confident segment correct logger warning cannot find incorrect segment probably because in background state least confident segments add corrected prediction list add predicted least confident segments add least confident segment least confident segment == nothing extracted corrected prediction list add predicted create segment corrected output which has labels least confident segment and other positions sequence = truth size num corrected tokens = 0 j=0 j < sequence length j++ sequence j = j=0 j < truth size j++ in segment least confident segment index in segment j sequence j = truth get j num corrected tokens++ least confident segment ends prematurely sequence least confident segment get end +1 = truth get least confident segment get end +1 num corrected tokens++ logger fine constrained segment sequence j=0 j < sequence length j++ logger fine sequence j sequence segment corrected output = sequence sequence run constrained viterbi on sequence constraint that segment tagged correctly sequence corrected prediction = max lattice model ordered segments 0 get input segment corrected output best output sequence num incorrect after correction = 0 j=0 j < truth size j++ num incorrect after correction += !corrected prediction get j equals truth get j ? 1 0 logger fine num incorrect tokens in original prediction + num incorrect logger fine num corrected tokens + num corrected tokens logger fine num incorrect tokens after correction propagation + num incorrect after correction print sequence info logger fine correcting segment sequence j=0 j < truth size j++ logger fine truth get j + logger fine original prediction j=0 j < predicted size j++ logger fine predicted get j + logger fine corrected prediction j=0 j < corrected prediction size j++ logger fine corrected prediction get j + logger fine corrected prediction list add corrected prediction corrected prediction list 