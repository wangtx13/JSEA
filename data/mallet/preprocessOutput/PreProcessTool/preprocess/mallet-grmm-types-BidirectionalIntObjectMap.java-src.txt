2006 m a l l e t m achine languag e 1 0 further ` l i e n s e types io list iterator a mapping between integers and where mapping in each direction efficient integers are assigned consecutively starting at zero are added to map can not be deleted from map and thus integers are never reused <p > exactly like alphabet in m a l l e t except that it does not serialization magic to ensure that two alphabets that are desrialized from same are == avoids memory leaks because m a l l e t alphabets are retained in memory forever bidirectional map serializable gnu trove t hash map map list entries growth stopped = bidirectional map capacity map = gnu trove t hash map capacity entries = list capacity bidirectional map 8 bidirectional map bidirectional map other map = gnu trove t hash map other map clone entries = list other entries clone growth stopped = other growth stopped 1 entry isn t present lookup index entry add not present entry == illegal argument can t lookup \ null\ in an alphabet ret index = 1 map contains key entry ret index = map get entry !growth stopped add not present ret index = entries size map put entry ret index entries add entry ret index lookup index entry lookup index entry lookup index entries get index to entries to an containing all entries in alphabet runtime type runtime type in in large enough to hold everything in alphabet then it it used such that all entries <tt>obj< tt> <tt>ret lookup index obj = obj< tt> to in entries to in xxx should disable iterator s remove iterator iterator entries iterator lookup indices ret = indices length i = 0 i < indices length i++ ret i = entries get indices i ret an corresponding to indices an indices to look up buf an to store in an values from alphabet runtime type same buf lookup indices buf i = 0 i < indices length i++ buf i = entries get indices i buf lookup indices add not present ret = length i = 0 i < length i++ ret i = lookup index i add not present ret contains entry map contains entry size entries size stop growth growth stopped = start growth growth stopped = growth stopped growth stopped representation all alphabet entries each separated a newline to buffer sb = buffer i = 0 i < entries size i++ sb append entries get i to sb append sb to dump dump out dump print stream out dump print writer output stream writer out dump print writer out i = 0 i < entries size i++ out i + => + entries get i serialization serial u = 1 u r r e n t s e r i a l v e r s i o n = 1 write output stream out i o out write bidirectional map u r r e n t s e r i a l v e r s i o n out write entries size i = 0 i < entries size i++ out write entries get i out write growth stopped read input stream in i o not found in read size = in read entries = list size map = gnu trove t hash map size i = 0 i < size i++ o = in read map put o i entries add o growth stopped = in read 