2006 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e types matrices types matrix types sparse matrixn randoms a factor over a continuous variable alpha and discrete variables <tt>x< tt> such that <tt>phi x|alpha <tt> potts that fixed alpha <tt>phi x < tt> = 1 all x are equal and <tt>exp^ alpha < tt> otherwise $ potts table factor v 1 1 2007 10 22 21 37 44 exp $ potts table factor factor parameterized factor variable alpha var set xs potts table factor var set xs variable alpha combine variables alpha xs alpha = alpha xs = xs !alpha continuous illegal argument alpha must be continuous potts table factor variable x1 variable x2 variable alpha hash var set variable x1 x2 alpha alpha = alpha xs = hash var set variable x1 x2 !alpha continuous illegal argument alpha must be continuous var set combine variables variable alpha var set xs var set ret = hash var set xs ret add alpha ret factor extract max internal var set var set unsupported operation lookup value internal i unsupported operation factor marginalize internal var set vars to keep unsupported operation inefficient but will seldom be called value assignment iterator it assignment assn = it assignment factor tbl = slice alpha assn tbl value assn factor slice alpha assignment assn alph = assn get alpha sizes = sizes from var set xs matrix diag = matrices diag sizes alph matrix matrix = matrices constant sizes alph matrix plus equals diag log table factor make from log matrix xs to variable sparse matrixn matrix sizes from var set var set xs szs = xs size i = 0 i < xs size i++ szs i = xs get i get num outcomes szs factor normalize unsupported operation assignment sample randoms r unsupported operation log value assignment iterator it math log value it factor slice assignment assn factor alph slice = slice alpha assn recursively slice in assn includes some xs alph slice slice assn dump to buffer buf = buffer buf append potts alpha buf append alpha buf append xs buf append xs buf append buf to sum grad log factor q variable assignment theta != alpha illegal argument factor q xs = q marginalize xs q diff = 0 0 assignment iterator it = xs assignment iterator it has next it advance assignment assn = it assignment !is all equal assn q diff += q xs value it q diff second derivative factor q variable assignment theta e x = sum grad log q theta factor q xs = q marginalize xs e x2 = 0 0 assignment iterator it = xs assignment iterator it has next it advance assignment assn = it assignment !is all equal assn e x2 += q xs value it e x2 e x e x all equal assignment assn val1 = assn get xs get 0 i = 1 i < xs size i++ val2 = assn get xs get i !val1 equals val2 factor duplicate potts table factor xs alpha na n almost equals factor p epsilon equals p equals o == o o == || get != o get potts table factor that = potts table factor o alpha != ? !alpha equals that alpha that alpha != xs != ? !xs equals that xs that xs != hash result result = alpha != ? alpha hash 0 result = 29 result + xs != ? xs hash 0 result 