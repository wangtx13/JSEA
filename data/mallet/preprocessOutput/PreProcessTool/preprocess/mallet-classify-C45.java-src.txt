2002 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e classify io i o io input stream io output stream io serializable logging logger classify boostable classify classification classify classifier pipe pipe types alphabet types feature vector types gain ratio types instance types instance list logger maths a c4 5 decision tree classifier c45 trainer author gary huang <a href= mailto ghuang >ghuang edu< a> c45 classifier boostable serializable logger logger = logger get logger c45 get name node m root c45 pipe instance pipe c45 node root instance pipe m root = root node get root m root node get leaf node node feature vector fv node get left child == node get right child == node fv value node get gain ratio get max valued index <= node get gain ratio get max valued threshold get leaf node get left child fv get leaf node get right child fv classification classify instance instance feature vector fv = feature vector instance get data instance pipe == || fv get alphabet == instance pipe get data alphabet node leaf = get leaf m root fv classification instance leaf get gain ratio get base label prune tree using minimum description length prune get root compute cost and prune total number nodes in tree get size node root = get root root == 0 1+root get num descendants prints tree print get root != get root print node serializable serial u = 1 l gain ratio m gain ratio entire set instances given to root node instance list m ilist indices instances at node m inst indices data vocabulary alphabet m data dict mininum number instances allowed in node m min num insts node m parent m left child m right child node instance list ilist node parent min num insts ilist parent min num insts node instance list ilist node parent min num insts inst indices inst indices == inst indices = ilist size ii = 0 ii < inst indices length ii++ inst indices ii = ii m gain ratio = gain ratio create gain ratio ilist inst indices min num insts m ilist = ilist m inst indices = inst indices m data dict = m ilist get data alphabet m min num insts = min num insts m parent = parent m left child = m right child = root has depth zero depth depth = 0 node p = m parent p != p = p m parent depth++ depth get size m inst indices length leaf m left child == m right child == root m parent == node get parent m parent node get left child m left child node get right child m right child gain ratio get gain ratio m gain ratio get split feature m data dict lookup m gain ratio get max valued index instance list get instances instance list ret = instance list m ilist get pipe ii = 0 ii < m inst indices length ii++ ret add m ilist get m inst indices ii ret count number non leaf descendant nodes get num descendants leaf 0 count = 0 ! get left child leaf count += 1 + get left child get num descendants ! get right child leaf count += 1 + get right child get num descendants count split m ilist == illegal state frozen cannot split num left children = 0 to left child = m inst indices length i = 0 i < m inst indices length i++ instance instance = m ilist get m inst indices i feature vector fv = feature vector instance get data fv value m gain ratio get max valued index <= m gain ratio get max valued threshold to left child i = num left children++ to left child i = logger info left child size= + num left children + right child size= + m inst indices length num left children left indices = num left children right indices = m inst indices length num left children = 0 ri = 0 i = 0 i < m inst indices length i++ to left child i left indices li++ = m inst indices i right indices ri++ = m inst indices i m left child = node m ilist m min num insts left indices m right child = node m ilist m min num insts right indices compute cost and prune cost s = get m d l leaf cost s + 1 min cost1 = get left child compute cost and prune min cost2 = get right child compute cost and prune cost split = math log m gain ratio get num split points best feature gain ratio log2 min cost n = math min cost s+1 cost split+1+min cost1+min cost2 maths almost equals min cost n cost s+1 m left child = m right child = min cost n calculates minimum description length node i e length binary encoding that describes feature and split value used at node get m d l num classes = m ilist get target alphabet size mdl = get size get gain ratio get base entropy mdl += num classes 1 math log get size 2 0 2 gain ratio log2 pi pow = math pow math p i num classes 2 0 gamma val = maths gamma num classes 2 0 mdl += math log pi pow gamma val gain ratio log2 mdl saves memory allowing ilist to be garbage collected deletes node s associated instance list stop growth m left child != m left child stop growth m right child != m right child stop growth m ilist = get name get buffer name to buffer get buffer name buffer sb = buffer m parent == sb append root m parent get parent == sb append \ sb append m data dict lookup m parent get gain ratio get max valued index to sb append \ m parent get left child == sb append <= sb append > sb append m parent get gain ratio get max valued threshold sb append sb append m parent get buffer name sb append \ sb append m data dict lookup m parent get gain ratio get max valued index to sb append \ m parent get left child == sb append <= sb append > sb append m parent get gain ratio get max valued threshold sb append prints tree rooted at node print print print prefix leaf best label index = get gain ratio get base label get best index num majority label = get gain ratio get base label value best label index get size out root + get gain ratio get base label get best label + + num majority label + + get size feat name = m data dict lookup get gain ratio get max valued index to threshold = get gain ratio get max valued threshold out print prefix + \ + feat name + \ <= + threshold + m left child leaf best label index = m left child get gain ratio get base label get best index num majority label = m left child get gain ratio get base label value best label index m left child get size out m left child get gain ratio get base label get best label + + num majority label + + m left child get size out m left child print prefix + | out print prefix + \ + feat name + \ > + threshold + m right child leaf best label index = m right child get gain ratio get base label get best index num majority label = m right child get gain ratio get base label value best label index m right child get size out m right child get gain ratio get base label get best label + + num majority label + + m right child get size out m right child print prefix + | serialization serial u overriden to prevent innocuous changes in from making serialization mechanism think external format has changed serial u = 1 u r r e n t s e r i a l v e r s i o n = 1 write output stream out i o out write u r r e n t s e r i a l v e r s i o n out write get instance pipe out write m root read input stream in i o not found = in read != u r r e n t s e r i a l v e r s i o n not found mismatched c45 versions wanted + u r r e n t s e r i a l v e r s i o n + got + instance pipe = pipe in read m root = node in read 