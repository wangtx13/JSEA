search iterator logging logger logger created intelli j e a user pereira date jun 19 2005 time 1 38 28 p m a search iterator over an underlying graph iterator search nodes states in order increasing cost to reach them from initial states assuming that heuristic cost to completion function admissible very simple assumes that we may revisit already visited states because we want to generate all paths to states in order increasing cost a star iterator< a star node> logger logger = logger get logger a star get name priority queue q a star node answer need next create an a search iterator starting from given initial states expected size parameter gives size search queue too small growing queue costs more time too big space wasted initial set initial states expected size expected size search queue a star a star state initial expected size q = min heap expected size i = 0 i < initial length i++ a star state s = initial i a star node n = a star node s 0 n set priority s completion cost q insert n need next = look ahead need next answer = search need next = has next look ahead answer != a star node next next answer get next search node a state a search node a star node next answer look ahead need next = answer remove unsupported operation a star node search q size > 0 a star node u = a star node q extract min logger info u + + u get priority u logger info + u u search node next node iterator i = u get next nodes i has next a star node v = a star node i next node priority = v get cost + v completion cost logger info insert + v + at + priority v set priority priority q insert v 