2003 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e test junit framework test junit framework test junit framework test suite io io writer io i o io print writer 3pq jgrapht undirected graph 3pq jgrapht graph helper inference random graphs types graphs utils created mar 17 2005 author < a h r e f= mailto casutton edu>casutton edu< a> $ test undirected model v 1 1 2007 10 22 21 37 41 exp $ test undirected model test test undirected model name name test output to dot i o factor graph mdl = test inference create random grid 3 4 2 random 4234 print writer out = print writer writer model dot mdl print dot out out close out now you can open up model dot in graphviz tests that models can be created that have multiple factors over same variable and that potential vertex product in that test multiple node potentials variable var = variable 2 factor graph mdl = factor graph variable var factor ptl1 = table factor var 0 5 0 5 mdl add factor ptl1 factor ptl2 = table factor var 0 25 0 25 mdl add factor ptl2 verify that factor var doesn t work mdl factor var fail runtime e expected list factors = mdl all factors var factor total = table factor multiply all factors expected = 0 125 0 125 arrays not equal expected + utils to expected + actual + utils to table factor total to value arrays equals expected table factor total to value tests that models can be created that have multiple factors over same edge and that potential edge product in that test multiple edge potentials variable v1 = variable 2 variable v2 = variable 2 variable vars = variable v1 v2 factor graph mdl = factor graph vars factor ptl1 = table factor vars 0 5 0 5 0 5 0 5 mdl add factor ptl1 factor ptl2 = table factor vars 0 25 0 25 0 5 0 5 mdl add factor ptl2 mdl factor v1 v2 fail runtime e collection factors = mdl all factors containing hash var set vars equals 2 factors size factors contains ptl1 factors contains ptl2 vals = 0 125 0 125 0 25 0 25 factor total = table factor multiply all factors factor expected = table factor vars vals arrays not equal expected + utils to vals + actual + utils to table factor total to value expected almost equals total 1e 10 test potential connections variable v1 = variable 2 variable v2 = variable 2 variable v3 = variable 2 variable vars = variable v1 v2 v3 factor graph mdl = factor graph table factor ptl = table factor vars 8 mdl add factor ptl mdl adjacent v1 v2 mdl adjacent v2 v3 mdl adjacent v1 v3 test three node model random r = random 23534709 factor graph mdl = factor graph variable root = variable 2 variable child l = variable 2 variable child r = variable 2 mdl add factor root child l random graphs generate mixed potential values r 1 5 mdl add factor root child r random graphs generate mixed potential values r 1 5 mdl connected root child l mdl connected root child r mdl connected child l child r mdl adjacent root child r mdl adjacent root child l !mdl adjacent child l child r mdl factor root child l != mdl factor root child r != verify that potential vertex and potential edge which use caches are consistent potentials set test undirected caches list models = test inference create test models iterator it = models iterator it has next factor graph mdl = factor graph it next verify caches consistent mdl verify caches consistent factor graph mdl factor pot pot2 pot3 iterator it = mdl factors iterator it has next pot = factor it next out testing model +i+ potential +pot vars = pot var set to vars length 1 pot2 = mdl factor variable vars 0 pot == pot2 2 variable var1 = variable vars 0 variable var2 = variable vars 1 pot2 = mdl factor var1 var2 pot3 = mdl factor var2 var1 pot == pot2 pot2 == pot3 factors size > 2 aren t now cached verify that potential vertex and potential edge which use caches are consistent potentials set even a vertex removed test undirected caches after remove list models = test inference create test models iterator mdl it = models iterator mdl it has next factor graph mdl = factor graph mdl it next mdl = factor graph mdl duplicate mdl remove mdl get 0 verify that indexing correct iterator it = mdl variables iterator it has next variable var = variable it next idx = mdl get index var idx >= 0 idx < mdl num variables verify that caches consistent verify caches consistent mdl test mdl to graph list models = test inference create test models iterator mdl it = models iterator mdl it has next undirected model mdl = undirected model mdl it next undirected graph g = graphs mdl to graph mdl set vertices = g vertex set check number vertices equals mdl num variables vertices size check number edges num edge ptls = 0 iterator factor it = mdl factors iterator factor it has next factor factor = factor factor it next factor var set size == 2 num edge ptls++ equals num edge ptls g edge set size check that neighbors each vertex contain at least some what they re supposed to iterator it = vertices iterator it has next variable var = variable it next vertices contains var set neighbors in g = hash set graph helper neighbor list g var neighbors in g add var iterator factor it = mdl all factors containing var iterator factor it has next factor factor = factor factor it next neighbors in g contains all factor var set test factor set variable vars = variable 3 i = 0 i < vars length i++ vars i = variable 2 factor factor = table factor vars 0 1 2 3 4 5 6 7 factor graph fg = factor graph vars fg add factor factor factor == fg factor factor var set hash set set = hash set factor var set factor == fg factor set set remove vars 0 == fg factor set test suite test suite test undirected model throwable test suite suite length > 0 suite = test suite i = 0 i < length i++ suite add test test undirected model i suite = test suite suite junit textui test runner run suite 