pipe types gnu trove io pruning low count features can be a good way to save memory and computation however in order to use vectors2 vectors you need to write out unpruned instance list read it back into memory collect statistics create instances and then write everything back out <p> supports a simpler that makes two passes over data one to collect statistics and create an augmented stop list and a second to actually create instances feature doc freq pipe pipe feature counter counter num instances feature doc freq pipe alphabet counter = feature counter get data alphabet num instances = 0 feature doc freq pipe alphabet data alphabet alphabet target alphabet data alphabet target alphabet counter = feature counter data alphabet num instances = 0 instance pipe instance instance t hash map local counter = t hash map instance get data feature sequence feature sequence features = feature sequence instance get data position = 0 position < features size position++ local counter adjust or put value features get index at position position 1 1 illegal argument looking a feature sequence found a + instance get data get feature local counter keys counter increment feature num instances++ instance add all pruned words to internal stoplist a simple tokenizer doc frequency cutoff remove words that occur in greater than proportion documents 0 05 corresponds to f >= 3 add pruned words to stoplist simple tokenizer tokenizer doc frequency cutoff alphabet current alphabet = get data alphabet feature = 0 feature < current alphabet size feature++ counter get feature num instances > doc frequency cutoff tokenizer stop current alphabet lookup feature serial u = 1 