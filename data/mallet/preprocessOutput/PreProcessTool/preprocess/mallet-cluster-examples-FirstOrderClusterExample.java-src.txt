cluster examples classify classifier classify max ent trainer classify trial classify evaluate confusion matrix cluster clusterer cluster clustering cluster greedy agglomerative density cluster evaluate accuracy evaluator cluster evaluate b cubed evaluator cluster evaluate clustering evaluator cluster evaluate clustering evaluators cluster evaluate m u evaluator cluster evaluate pair f1 evaluator cluster iterator cluster sample iterator cluster neighbor evaluator agglomerative neighbor cluster neighbor evaluator classifying neighbor evaluator cluster cluster utils pipe pipe types alphabet types feature vector types info gain types instance types instance list types label alphabet property list randoms illustrates use a supervised clustering that uses features over clusters synthetic data created where instances belong in same cluster iff they each have a feature called feature0 author aron culotta <culotta degas edu> 1 0 since 1 0 first order cluster example randoms random noise first order cluster example random = randoms 123456789 noise = 0 01 run alphabet alphabet = dict size 20 t r a i n clustering training = sample clustering alphabet pipe cluster pipe = overlapping feature pipe err training + training instance list train list = instance list cluster pipe train list add thru pipe cluster sample iterator training random 0 5 100 err created + train list size + instances classifier me = max ent trainer train train list classifying neighbor evaluator eval = classifying neighbor evaluator me y e s trial trial = trial me train list err confusion matrix trial info gain ig = info gain train list ig print clusterer clusterer = greedy agglomerative training get instances get pipe eval 0 5 clusterer clusterer = greedy agglomerative density training get instances get pipe eval 0 5 random 1 t e s t clustering testing = sample clustering alphabet instance list test list = testing get instances clustering predicted clusters = clusterer cluster test list e v a l u a t e err evaluating + clusterer clustering evaluators evaluators = clustering evaluators clustering evaluator b cubed evaluator pair f1 evaluator m u evaluator accuracy evaluator err truth + testing err pred + predicted clusters err evaluators evaluate testing predicted clusters sample a instance list and its clustering alph clustering sample clustering alphabet alph instance list instances = instance list random alph foo bar 30 sub list 0 20 clustering singletons = cluster utils create singleton clustering instances merge instances that both have feature0 i = 0 i < instances size i++ feature vector fvi = feature vector instances get i get data j = i + 1 j < instances size j++ feature vector fvj = feature vector instances get j get data fvi contains feature0 fvj contains feature0 singletons = cluster utils merge clusters singletons singletons get label i singletons get label j ! fvi contains feature0 || fvj contains feature0 random next uniform < noise random noise singletons = cluster utils merge clusters singletons singletons get label i singletons get label j singletons alphabet dict size size alphabet ret = alphabet i = 0 i < size i++ ret lookup index feature +i ret computes a feature that indicates whether or not all members a cluster have a feature named feature0 author aron culotta <culotta degas edu> 1 0 since 1 0 pipe overlapping feature pipe pipe serial u = 1 l overlapping feature pipe alphabet label alphabet instance pipe instance carrier merge first = agglomerative neighbor neighbor = agglomerative neighbor carrier get data clustering original = neighbor get original instance list list = original get instances merged indices = neighbor get cluster match = i = 0 i < merged indices length i++ j = i + 1 j < merged indices length j++ original get label merged indices i != original get label merged indices j || merge first feature vector fvi = feature vector list get merged indices i get data feature vector fvj = feature vector list get merged indices j get data ! fvi contains feature0 fvj contains feature0 match = property list pl = match pl = property list add match 1 0 pl pl = property list add no match 1 0 pl feature vector fv = feature vector alphabet get data alphabet pl carrier set data fv positive = i = 0 i < merged indices length i++ j = i + 1 j < merged indices length j++ original get label merged indices i != original get label merged indices j positive = label alphabet ldict = label alphabet get target alphabet label = positive ? y e s n o carrier set target ldict lookup label label carrier first order cluster example ex = first order cluster example ex run 