2003 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e test junit framework test junit framework test junit framework test suite io i o set types types sparse matrixn types tests test serializable utils maths randoms created aug 17 2004 author < a h r e f= mailto casutton edu>casutton edu< a> $ test log table factor v 1 1 2007 10 22 21 37 41 exp $ test log table factor test test log table factor name name test times table factor variable var = variable 4 vals = 2 0 4 0 6 0 8 0 vals2 = 0 5 0 5 0 5 0 5 vals3 = 1 2 3 4 table factor ans = table factor var vals3 table factor ptl1 = table factor var vals log table factor lptl2 = log table factor make from values var vals2 ptl1 multiply lptl2 ans almost equals ptl1 test tbl tbl plus equals variable var = variable 4 vals = 2 0 4 0 6 0 8 0 vals2 = 0 25 0 5 0 75 1 0 vals3 = 2 25 4 5 6 75 9 0 log table factor ans = log table factor make from values var vals3 log table factor ptl1 = log table factor make from values var vals log table factor ptl2 = log table factor make from values var vals2 ptl1 plus equals ptl2 ans almost equals ptl1 test multiply log space variable var = variable 4 vals = 2 0 4 0 6 0 8 0 vals2 = 0 5 0 5 0 5 0 5 vals3 = 1 2 3 4 table factor ans = table factor var vals3 table factor ptl1 = table factor var vals table factor ptl2 = table factor var vals2 ptl1 multiply ptl2 ans almost equals ptl1 table factor ptl3 = table factor var vals log table factor ptl4 = log table factor make from values var vals2 ptl3 multiply ptl4 ptl3 almost equals ptl1 table factor ptl5 = table factor var vals log table factor ptl6 = log table factor make from values var vals2 ptl6 multiply ptl5 ptl6 almost equals ans log table factor ptl7 = log table factor make from values var vals log table factor ptl8 = log table factor make from values var vals2 ptl8 multiply ptl7 ptl8 almost equals ans test divide log space variable var = variable 4 vals = 2 0 4 0 6 0 8 0 vals2 = 0 5 0 5 0 5 0 5 vals3 = 4 8 12 16 table factor ans = table factor var vals3 table factor ptl1 = table factor var vals table factor ptl2 = table factor var vals2 ptl1 divide ptl2 ans almost equals ptl1 table factor ptl3 = table factor var vals log table factor ptl4 = log table factor make from values var vals2 ptl3 divide ptl4 ptl3 almost equals ans log table factor ptl5 = log table factor make from values var vals table factor ptl6 = table factor var vals2 ptl5 divide ptl6 ptl5 almost equals ans log table factor ptl7 = log table factor make from values var vals log table factor ptl8 = log table factor make from values var vals2 ptl7 divide ptl8 ptl7 almost equals ans test entropy log space variable v1 = variable 2 table factor ptl = table factor v1 0 3 0 7 entropy = ptl entropy equals 0 61086 entropy 1e 3 log table factor ptl2 = log table factor make from values v1 0 3 0 7 entropy2 = ptl2 entropy equals 0 61086 entropy2 1e 3 fails ignore test serialization i o not found variable v1 = variable 2 variable v2 = variable 3 variable vars = v1 v2 vals = 2 0 4 0 6 0 3 5 7 log table factor ptl = log table factor make from log values vars vals log table factor ptl2 = log table factor test serializable clone via serialization ptl set varset1 = ptl var set set varset2 = ptl2 var set !varset1 contains varset2 variables deep cloned there s not way to get directly at matrices ! compare potential values ptl ptl2 log table factor marg1 = log table factor ptl marginalize v1 log table factor marg2 = log table factor ptl2 marginalize ptl2 find variable v1 get label compare potential values marg1 marg2 compare potential values log table factor ptl log table factor ptl2 assignment iterator it1 = ptl assignment iterator assignment iterator it2 = ptl2 assignment iterator it1 has next ptl value it1 == ptl value it2 it1 advance it2 advance test extract max log space variable vars = variable variable 2 variable 2 log table factor ptl = log table factor make from values vars 1 2 3 4 log table factor ptl2 = log table factor ptl extract max vars 1 equals f a i l u r e potential has too many vars +ptl2 1 ptl2 var set size f a i l u r e potential does not contain +vars 1 + +ptl2 ptl2 var set contains vars 1 expected = 3 4 f a i l u r e potential has incorrect values expected + utils to expected + was +ptl2 maths almost equals ptl2 to value expected 1e 5 test log value variable vars = variable variable 2 variable 2 log table factor ptl = log table factor make from values vars 1 2 3 4 assignment assn = assignment vars vars length equals 0 ptl log value assn 1e 5 equals 0 ptl log value ptl assignment iterator 1e 5 equals 0 ptl log value 0 1e 5 equals 1 ptl value assn 1e 5 equals 1 ptl value ptl assignment iterator 1e 5 equals 1 ptl value 0 1e 5 log table factor ptl2 = log table factor make from log values vars 0 math log 2 math log 3 math log 4 assignment assn2 = assignment vars vars length equals 0 ptl2 log value assn2 1e 5 equals 0 ptl2 log value ptl2 assignment iterator 1e 5 equals 0 ptl2 log value 0 1e 5 equals 1 ptl2 value assn2 1e 5 equals 1 ptl2 value ptl2 assignment iterator 1e 5 equals 1 ptl2 value 0 1e 5 test one var slice vals = 0 0 1 3862943611198906 0 6931471805599453 1 791759469228055 variable v1 = variable 2 variable v2 = variable 2 variable vars = variable v1 v2 factor ptl = log table factor make from log values vars vals assignment assn = assignment v1 0 log table factor sliced = log table factor ptl slice assn log table factor expected = log table factor make from values v2 1 0 4 0 compare potential values sliced expected equals 1 assn var set size test two var slice vals = 0 0 1 2 3 4 5 6 7 variable v1 = variable 2 variable v2 = variable 2 variable v3 = variable 2 variable vars = variable v1 v2 v3 factor ptl = log table factor make from values vars vals assignment assn = assignment v3 0 log table factor sliced = log table factor ptl slice assn log table factor expected = log table factor make from values variable v1 v2 0 2 4 6 compare potential values sliced expected test multi var slice vals = 0 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 variable v1 = variable 2 variable v2 = variable 2 variable v3 = variable 2 variable v4 = variable 2 variable vars = variable v1 v2 v3 v4 factor ptl = log table factor make from values vars vals out ptl assignment assn = assignment v4 0 log table factor sliced = log table factor ptl slice assn log table factor expected = log table factor make from values variable v1 v2 v3 0 2 4 6 8 10 12 14 compare potential values sliced expected test sparse value and log value variable vars = variable variable 2 variable 2 szs = 2 2 idxs1 = 1 3 vals1 = 4 0 8 0 log table factor ptl1 = log table factor make from matrix vars sparse matrixn szs idxs1 vals1 assignment iterator it = ptl1 assignment iterator equals 1 it index current assn equals math log 4 ptl1 log value it 1e 5 equals math log 4 ptl1 log value it assignment 1e 5 equals 4 ptl1 value it 1e 5 equals 4 ptl1 value it assignment 1e 5 it = ptl1 var set assignment iterator equals 0 it index current assn equals n e g a t i v e i n f i n i t y ptl1 log value it 1e 5 equals n e g a t i v e i n f i n i t y ptl1 log value it assignment 1e 5 equals 0 ptl1 value it 1e 5 equals 0 ptl1 value it assignment 1e 5 test sparse multiply log space variable vars = variable variable 2 variable 2 szs = 2 2 idxs1 = 0 1 3 vals1 = 2 0 4 0 8 0 idxs2 = 0 3 vals2 = 0 5 0 5 vals3 = 1 0 0 4 0 log table factor ptl1 = log table factor make from matrix vars sparse matrixn szs idxs1 vals1 log table factor ptl2 = log table factor make from matrix vars sparse matrixn szs idxs2 vals2 log table factor ans = log table factor make from matrix vars sparse matrixn szs idxs1 vals3 factor ptl3 = ptl1 multiply ptl2 tast failed! expected +ans+ actual +ptl3 ans almost equals ptl3 test sparse divide log space variable vars = variable variable 2 variable 2 szs = 2 2 idxs1 = 0 1 3 vals1 = 2 0 4 0 8 0 idxs2 = 0 3 vals2 = 0 5 0 5 vals3 = 4 0 0 16 0 log table factor ptl1 = log table factor make from matrix vars sparse matrixn szs idxs1 vals1 log table factor ptl2 = log table factor make from matrix vars sparse matrixn szs idxs2 vals2 log table factor ans = log table factor make from matrix vars sparse matrixn szs idxs1 vals3 ptl1 divide ptl2 tast failed! expected +ans+ actual +ptl1 ans almost equals ptl1 test sparse marginalize log space variable vars = variable variable 2 variable 2 szs = 2 2 idxs1 = 0 1 3 vals1 = 2 0 4 0 8 0 log table factor ptl1 = log table factor make from matrix vars sparse matrixn szs idxs1 vals1 log table factor ans = log table factor make from values vars 0 6 8 factor ptl2 = ptl1 marginalize vars 0 tast failed! expected +ans+ actual +ptl2+ orig +ptl1 ans almost equals ptl2 test log sample variable v = variable 2 vals = 30 0 log table factor ptl = log table factor make from log values v vals idx = ptl sample location randoms 43 equals 1 idx test plus equals variable var = variable 4 log 0 log 1 log 2 log 3 vals = n e g a t i v e i n f i n i t y 0 0 6931471805599453 1 0986122886681098 log table factor factor = log table factor make from log values var vals factor plus equals 0 1 log 0 1 log 1 1 log 2 1 log 3 1 expected = 2 3025850929940455 0 09531017980432493 0 7419373447293773 1 1314021114911006 log table factor ans = log table factor make from log values var expected expected +ans dump to + but was +factor dump to factor almost equals ans test recenter variable var = variable 4 vals = 2 0 4 0 6 0 8 0 log table factor ltbl1 = log table factor make from values var vals ltbl1 recenter expected = math log 0 25 math log 0 5 math log 0 75 0 log table factor ans = log table factor make from log values var expected expected +ans dump to + but was +ltbl1 dump to ans almost equals ltbl1 test recenter2 variable var = variable 4 vals = 0 1 4 1 4 0 log table factor ltbl1 = log table factor make from log values var vals ltbl1 recenter expected = 1 4 0 0 1 4 log table factor ans = log table factor make from log values var expected !ltbl1 na n expected +ans dump to + but was +ltbl1 dump to ans almost equals ltbl1 test suite test suite test log table factor throwable test suite suite length > 0 suite = test suite i = 0 i < length i++ suite add test test log table factor i suite = test suite suite junit textui test runner run suite 