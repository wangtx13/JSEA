2010 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e pipe list pipe pipe types alphabet types feature vector types instance types label types label alphabet pipe converts a line in s v m light format to a instance feature vector data and label target expected format target feature value feature value targets and features can be indices in s v m light or strings note that targets and features are indices their indices in data and target alphabets may be different though data will be equivalent author gregory druck svm light2 feature vector and label pipe serial u = 1 l svm light2 feature vector and label alphabet label alphabet there no guarantee that feature indices in text will be same in pipe data should be exactly same however just permuted override instance pipe instance carrier we expect data each instance to be a line from s v m light format text data str = carrier get data ignore comments at end data str contains # data str = data str substring 0 data str index # = data str split \\s+ str = 0 in s v m light +1 and 1 are same label adding a special to normalize str equals +1 str = 1 label label = label alphabet get target alphabet lookup label str carrier set target label rest are feature value pairs list< integer> indices = list< integer> list< double> values = list< double> term index = 1 term index < length term index++ !terms term index equals s = term index split s length != 2 runtime invalid format + term index + should be feature value feature = s 0 index = get data alphabet lookup index feature index may be 1 growth data alphabet stopped index >= 0 indices add index values add parse s 1 indices size == values size indices arr = indices size values arr = values size i = 0 i < indices arr length i++ indices arr i = indices get i values arr i = values get i feature vector fv = feature vector get data alphabet indices arr values arr carrier set data fv carrier 