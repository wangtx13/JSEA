2002 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e types generated nameimport io i o io input stream io output stream iterator map 3pq jgrapht directed graph 3pq jgrapht graph directed graph 3pq jgrapht alg connectivity inspector gnu trove t hash map directed graphical models just a souped up graph created mon sep 15 14 50 19 2003 author <a href= mailto casutton > charles sutton< a> $ directed model v 1 1 2007 10 22 21 37 44 exp $ directed model factor graph map all cpts = t hash map graph used to prevent directed cycles directed graph graph = directed graph directed model directed model variable vars vars directed model capacity capacity before factor add factor factor before factor add factor ! factor p t illegal argument factors a directed model must be an instance p t was +factor p t cpt = p t factor variable child = cpt get child var set parents = cpt get parents graph contains vertex child check no cycle parents child cpt check no cycle var set parents variable child p t cpt connectivity inspector inspector = connectivity inspector graph iterator it = parents iterator it has next variable rent = variable it next inspector path child rent illegal argument adding p t would create directed cycle + from +rent+ to +child+ p t +cpt after factor add factor factor after factor add factor p t cpt = p t factor variable child = cpt get child var set parents = cpt get parents all cpts put child cpt graph add vertex child graph add all vertices parents iterator it = parents iterator it has next variable rent = variable it next graph add edge rent child conditional <tt> p node | parents node < tt> p t get cptof var variable node p t all cpts get node serialization garbage serial u = 1 u r r e n t s e r i a l v e r s i o n = 1 write output stream out i o out write out write u r r e n t s e r i a l v e r s i o n read input stream in i o not found in read = in read directed model 