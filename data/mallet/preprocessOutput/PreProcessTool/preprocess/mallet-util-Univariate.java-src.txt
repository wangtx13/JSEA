2002 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e author andrew mc callum <a href= mailto >mccallum edu< a> logging logger obtained from stat vt ~sundar univariate html august 2002 # univariate d a m a g e 2000 sundar dorai raj author sundar dorai raj email sdoraira vt program free you can redistribute it and or modify it g n u general free foundation either 2 or at your option any later that any use properly credits author program distributed in hope that it will be useful but w i t h o u t a n y w a r r a n t y without even implied warranty m e r h a n t a b i l i t y or f i t n e s s f o r a p a r t i u l a r p u r p o s e g n u general more details at gnu univariate logger logger = logger get logger univariate get name x sortx summary=new 6 sorted=false five=new 5 n mean variance stdev median min q1 q3 max univariate data x= data clone n=x length create summary stats create summary stats i mean=0 i=0 i<n i++ mean+=x i mean =n variance=variance stdev=stdev sumxx=0 variance=0 i=0 i<n i++ sumxx+=x i x i n>1 variance= sumxx n mean mean n 1 stdev= math sqrt variance summary summary 0 =n summary 1 =mean summary 2 =variance summary 3 =stdev summary 4 = math sqrt variance n summary 5 =mean summary 4 summary mean mean variance variance stdev stdev s e math sqrt variance n max !is sorted sortx=sort sortx n 1 min !is sorted sortx=sort sortx 0 median quant 0 50 quant q !is sorted sortx=sort q > 1 || q < 0 0 index= n+1 q index index == 0 sortx index 1 q sortx math floor index 1 + 1 q sortx math ceil index 1 sort sortx= x clone incr= n 5 incr >= 1 i=incr i<n i++ temp=sortx i j=i j>=incr temp<sortx j incr sortx j =sortx j incr j =incr sortx j =temp incr =2 sorted=true sortx get data x size n element at index element=0 element=x index index out bounds e logger info index + index + does not in data element subset indices k=indices length i=0 elements =new k i=0 i<k i++ elements i =x k index out bounds e logger info index + i + does not in data elements compare t index=n 1 i found=false i=0 i<n !found i++ sortx i >t index=i found=true index between t1 t2 indices=new 2 indices 0 =compare t1 indices 1 =compare t2 indices index element index= 1 i=0 i<n i++ math abs x i element <1e 6 index=i index 