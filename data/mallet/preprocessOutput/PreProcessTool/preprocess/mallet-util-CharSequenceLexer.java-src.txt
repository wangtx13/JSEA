2002 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e author andrew mc callum <a href= mailto >mccallum edu< a> io sequence iterator regex pattern regex matcher io lexer sequence lexer lexer serializable some predefined lexing rules pattern l e x a l p h a = pattern compile \\p alpha + pattern l e x w o r d s = pattern compile \\w+ pattern l e x n o n w h i t e s p a e t o g e t h e r = pattern compile \\ s+ pattern l e x w o r d l a s s e s = pattern compile \\p alpha +|\\p digit + pattern l e x n o n w h i t e s p a e l a s s e s = pattern compile \\p alpha +|\\p digit +|\\p punct lowercase letters and uppercase letters pattern u n i o d e l e t t e r s = pattern compile \\p ll \\p lu + pattern regex matcher matcher = sequence input match text match text fresh sequence lexer l e x a l p h a sequence lexer pattern regex regex = regex set sequence sequence lexer regex pattern compile regex sequence lexer sequence input pattern regex regex set sequence input sequence lexer sequence input regex input pattern compile regex set sequence sequence input input = input match text = match text fresh = input != matcher = regex matcher input sequence get sequence input get pattern regex pattern set pattern reg added fuchun !regex equals get pattern regex = pattern compile reg matcher = regex matcher input get start offset match text == 1 matcher start get end offset match text == 1 matcher end get token match text iterator update match text matcher != matcher find match text = matcher group match text length == 0 xxx why would happen? it happening to me when i use regex in an attempt to make token s out entire lines text akm update match text err match text empty! match text = input sub sequence matcher start matcher end to match text = match text fresh = has next ! match text fresh update match text match text != next ! match text fresh update match text match text fresh = match text remove unsupported operation serialization serial u = 1 u r r e n t s e r i a l v e r s i o n = 1 write output stream out i o out write u r r e n t s e r i a l v e r s i o n xxx hmph pattern seems to have serialization problems work around serialize and flags representing regex and recompile pattern u r r e n t s e r i a l v e r s i o n == 0 out write regex u r r e n t s e r i a l v e r s i o n == 1 out write regex pattern out write regex flags out write match text fresh out write match text fresh read input stream in i o not found = in read == 0 regex = pattern in read == 1 p = in read flags = in read regex = pattern compile p flags match text fresh = in read buffered reader in = buffered reader reader 0 line = in read line line != line = in read line sequence lexer csl = sequence lexer line l e x n o n w h i t e s p a e l a s s e s csl has next out csl next e out e to 