2006 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e utilities flop floating point operation counting a much better way to measure computation than p u time because it avoids measuring non essential properties implementations $ flops v 1 1 2007 10 22 21 37 58 exp $ flops flops = 0 figures taken from tom minka s lightspeed e x p f l o p s = 40 l o g f l o p s = 20 d i v f l o p s = 8 s q r t f l o p s = 8 get flops flops exp flops += e x p f l o p s log flops += l o g f l o p s div flops += d i v f l o p s sqrt flops += s q r t f l o p s sum log prob n flops += n l o g f l o p s + e x p f l o p s increment n flops += n log n flops += n l o g f l o p s exp n flops += n e x p f l o p s pow n get an upper bound using a^b = exp b log a flops increment n e x p f l o p s + l o g f l o p s + 1 watch starting current watch starting = flops current = starting tick tick tick message elapsed = flops current current = flops message != err message+ flops = +elapsed elapsed total flops elapsed flops starting 