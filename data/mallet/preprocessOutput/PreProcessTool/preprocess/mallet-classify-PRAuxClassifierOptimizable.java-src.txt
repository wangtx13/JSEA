2011 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e classify list arrays logging logger classify constraints pr max ent p r constraint optimize optimizable types feature vector types instance types instance list types matrix ops logger maths optimizable training auxiliary model q e step i projection in p r training author gregory druck <a href= mailto gdruck >gdruck edu< a> p r aux classifier optimizable optimizable gradient value logger logger = logger get logger p r aux classifier optimizable get name cache stale num cached value cached gradient base dist p r aux classifier classifier list< max ent p r constraint> constraints instance list training data p r aux classifier optimizable instance list training data base p r aux classifier classifier training data = training data base dist = base classifier = classifier = classifier get constraints = classifier get constraint features num = 0 i = 0 i < length i++ num += i length cached value = n e g a t i v e i n f i n i t y cached gradient = num cache stale = get num num get buffer start = 0 i = 0 i < length i++ arraycopy i 0 buffer start i length start += i length get parameter index start = 0 i = 0 i < length i++ start < i length i start start = i length runtime index + out bounds set params start = 0 i = 0 i < length i++ arraycopy params start i 0 i length start += i length cache stale = set parameter index value start = 0 i = 0 i < length i++ start < i length i start = value start = i length cache stale = get value and gradient gradient arrays fill gradient 0 classifier zero expectations num labels = training data get target alphabet size value = 0 sum log p = 0 ii = 0 ii < training data size ii++ scores = num labels instance instance = training data get ii feature vector input = feature vector instance get data instance weight = training data get instance weight ii classifier get classification scores instance scores log z = n e g a t i v e i n f i n i t y = 0 < num labels li++ base dist != base dist ii == 0 scores = n e g a t i v e i n f i n i t y base dist != log p = math log base dist ii scores += log p log z = maths sum log prob log z scores ! na n log z value = instance weight log z na n value logger warning instance + instance get name + has na n value infinite value logger warning instance + instance get name + has infinite value skipping value and gradient exp normalize matrix ops exp normalize scores increment expectations max ent p r constraint constraint constraints constraint increment expectations input scores 1 ci = 0 start = 0 max ent p r constraint constraint constraints temp = ci length value += constraint get auxiliary value contribution ci constraint get gradient ci temp arraycopy temp 0 gradient start temp length start += temp length ci++ logger info p r auxiliary value = + value value get value cache stale cached value = get value and gradient cached gradient cache stale = cached value get value gradient gradient cache stale cached value = get value and gradient cached gradient cache stale = arraycopy cached gradient 0 gradient 0 gradient length 