2006 m a l l e t m achine languag e 1 0 further ` l i e n s e inference gnu trove t iterator io print writer io output stream writer types factor types factor graph types log table factor types variable m int2 map efficiently manages a messages in a factor graph from variables to factors and vice versa created feb 1 2006 author < a h r e f= mailto casutton edu>casutton edu< a> $ message v 1 1 2007 10 22 21 37 49 exp $ message factor graph fg m int2 map messages messages from factor > variable num v num f in log space message factor graph fg fg = fg num v = fg num variables num f = fg factors size messages = m int2 map num v + num v in log space = fg get factor 0 log table factor in log space in log space factor get from to from factor to variable get factor from variable to from variable to factor get variable from factor to illegal argument factor get variable from factor to from idx = get index from to idx = get index to get to idx from idx factor get factor from variable to from idx = get index from to idx = get index to get to idx from idx factor get to idx from idx factor messages get to idx from idx put factor from variable to factor msg from idx = get index from to idx = get index to messages put to idx from idx msg put variable from factor to factor msg from idx = get index from to idx = get index to messages put to idx from idx msg more dangerous but efficiency put from idx to idx factor msg messages put to idx from idx msg iterator iterator iterator to msgs iterator to messages iterator to idx to msgs iterator messages to idx message duplicate message dup = message fg dup messages = deep copy messages dup m int2 map deep copy m int2 map msgs m int2 map copy = m int2 map num v + num f keys1 = msgs keys1 i = 0 i < keys1 length i++ k1 = keys1 i to msgs iterator msg it = to msgs iterator msgs k1 msg it has next factor msg = msg it next from = msg it current from idx copy put k1 from msg duplicate copy get index factor from fg get index from + 1 get index variable to fg get index to idx2obj idx idx >= 0 fg get idx fg get factor idx 1 dump dump print writer output stream writer out dump print writer out message iterator it = iterator it has next factor msg = factor it next from = it from to = it to out message from + from + to + to out msg dump to iterator iterator idx1 = 0 idx2 = 1 keys1 keys2 iterator keys1 = messages keys1 keys1 length > 0 keys2 = messages keys2 keys1 idx1 keys2 = 0 increment idx2++ idx2 >= keys2 length idx2 = 0 idx1++ keys2 = messages keys2 keys1 idx1 has next idx1+1 < keys1 length || idx2+1 < keys2 length next increment messages get keys1 idx1 keys2 idx2 remove unsupported operation from idx2obj keys2 idx2 to idx2obj keys1 idx1 to msgs iterator t iterator sub it to idx = 1 to msgs iterator m int2 map msgs to idx to idx = to idx sub it = msgs curry to idx has next sub it has next factor next sub it advance current message current from idx sub it key factor current message factor sub it value current to idx to idx 