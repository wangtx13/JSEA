2002 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e types io serializable io output stream io i o io input stream types alphabet types feature sequence types feature vector randoms a probability over a set features represented a link types feature vector values associated each element in multinomial featur vector are probabilities and should sum to 1 features are indexed using feature indices index into underlying alphabet rather than using locations way feature vectors <p> link types multinomial estimator provides a subhierachy ways to generate an estimate probability from counts associated features author andrew mc callum <a href= mailto >mccallum edu< a> multinomial feature vector multinomial size number entries in probabilities that have valid values in them note that dictionary and thus resulting multinomial may be bigger than size dictionary shared multiple estimators and dictionary grew due to another estimator get values probabilities alphabet dictionary size copy check sum values dictionary == || dictionary size >= size no not necessarily comment above dictionary == || dictionary size == size probabilities length == size xxx consider always copying so that we are assured that we always have a real probability copy values = dictionary==null ? size dictionary size arraycopy probabilities 0 values 0 size dictionary == || dictionary size == probabilities length values = probabilities check sum check that we have a probability sum = 0 i = 0 i < values length i++ sum += values i math abs sum 1 0 > 0 9999 illegal argument probabilities sum to + sum + not to one values multinomial probabilities alphabet dictionary size copy check sum dictionary get values probabilities dictionary size copy check sum multinomial probabilities alphabet dictionary probabilities dictionary dictionary size multinomial probabilities size probabilities size multinomial probabilities probabilities probabilities length size values length probability feature index values feature index probability key dictionary == illegal state multinomial has no dictionary probability dictionary lookup index key log probability feature index math log values feature index log probability key dictionary == illegal state multinomial has no dictionary log probability dictionary lookup index key alphabet get alphabet dictionary add probabilities to vector i = 0 i < values length i++ vector i += values i random index randoms r f = r next uniform sum = 0 i i = 0 i < values length i++ sum += values i out print sum= +sum sum >= f sum < f illegal state out i = +i+ f = +f+ sum = +sum sum >= f i random randoms r dictionary == illegal state multinomial has no dictionary dictionary lookup random index r feature sequence random feature sequence randoms r length ! dictionary alphabet unsupported operation multinomial s dictionary must be a alphabet feature sequence fs = feature sequence alphabet dictionary length length > 0 fs add random index r fs size number 1 0 weight features in feature vector feature vector random feature vector randoms r size feature vector random feature sequence r size a multinomial in which values associated each feature index fi math log probability fi instead probability fi logs are used numerical stability logged multinomial serial u = 1 l logged probabilities alphabet dictionary size are logged already probabilities dictionary size !are logged already dictionary == || dictionary size == size !are logged already i = 0 i < size i++ values i = math log values i logged probabilities alphabet dictionary are logged already probabilities dictionary dictionary == ? probabilities length dictionary size are logged already logged probabilities alphabet dictionary size probabilities dictionary size logged probabilities alphabet dictionary probabilities dictionary dictionary size logged multinomial m m values m dictionary logged probabilities probabilities probability feature index math exp values feature index log probability feature index values feature index add probabilities vector vector length == values length fi = 0 fi < vector length fi++ vector fi += math exp values fi add log probabilities vector i = 0 i < values length i++ vector i += values i vector longer than values act values were extended values minus infinity i=values length i<vector length i++ vector i = n e g a t i v e i n f i n i t y serialization serial u = 1 l xxx make inherit from something like augmentable dense feature vector a hierarchy classes used to produce estimates probabilities in form a multinomial from counts associated elements an alphabet estimator itself contains machinery associating and manipulating counts elements an alphabet including behaving sanely alphabet changes size between calls it does not contain any means generating probability estimates various means estimating are subclasses estimator cloneable serializable alphabet dictionary counts size number valid entries in counts min capacity = 16 estimator counts size alphabet dictionary counts = counts size = size dictionary = dictionary estimator counts alphabet dictionary counts dictionary size dictionary estimator min capacity 0 estimator size size > min capacity ? size min capacity size estimator alphabet dictionary dictionary size dictionary size dictionary set alphabet alphabet d size = d size counts = size dictionary = d size dictionary == ? size dictionary size ensure capacity index dictionary == size fixed dictionary present? index > size size = index counts length <= index length = counts length < min capacity ? min capacity counts length length <= index length = 2 counts = length arraycopy counts 0 counts 0 counts length counts = counts xxx note that does not reset size ! reset i = 0 i < counts length i++ counts i = 0 xxx remove method? set counts counts dictionary == || counts length <= size xxx copy instead? xxx set size to match counts length? counts = counts increment index count ensure capacity index counts index += count size < index + 1 size = index + 1 increment key count increment dictionary lookup index key count xxx add increment key count or it too dangerous? increment feature sequence fs scale fs get alphabet != dictionary illegal argument vocabularies t match fsi = 0 fsi < fs size fsi++ increment fs get index at position fsi scale increment feature sequence fs increment fs 1 0 increment feature vector fv scale fv get alphabet != dictionary illegal argument vocabularies t match fvi = 0 fvi < fv num locations fvi++ originally value feature was not being taken into account here so words were only counted once per document! gdruck increment fv index at location fvi scale increment fv index at location fvi scale fv value at location fvi increment feature vector fv increment fv 1 0 get count index counts index clone clone clone not supported e print counts != illegal state foo out multinomial estimator i = 0 i < size i++ out counts +i+ = + counts i multinomial estimate serialization serial u overriden to prevent innocuous changes in from making serialization mechanism think external format has changed serial u = 1 u r r e n t s e r i a l v e r s i o n = 1 write output stream out i o out write u r r e n t s e r i a l v e r s i o n out write dictionary out write counts out write size read input stream in i o not found = in read != u r r e n t s e r i a l v e r s i o n not found mismatched multionmial estimator versions wanted + u r r e n t s e r i a l v e r s i o n + got + dictionary = alphabet in read counts = in read size = in read estimator an estimator in which probability estimates in a multinomial are generated adding a constant m specified at construction time to each count before dividing total m biased counts m estimator estimator m m estimator alphabet dictionary m dictionary m = m m estimator size m size m = m m estimator m m = m multinomial estimate pr = dictionary==null ? size dictionary size dictionary != ensure capacity dictionary size 1 side effect updates size member sum = 0 i = 0 i < pr length i++ dictionary != out dictionary lookup i to + +counts i pr i = counts i + m sum += pr i i = 0 i < pr length i++ pr i = sum multinomial pr dictionary size serial u = 1 u r r e n t s e r i a l v e r s i o n = 1 write output stream out i o out write u r r e n t s e r i a l v e r s i o n out write m read input stream in i o not found = in read != u r r e n t s e r i a l v e r s i o n not found mismatched multinomial m estimator versions wanted + u r r e n t s e r i a l v e r s i o n + got + m = in read end m estimator an m estimator m set to 0 probability estimates in multinomial are generated dividing each count sum all counts m l estimator m estimator m l estimator 0 m l estimator size size 0 m l estimator alphabet dictionary dictionary 0 serial u = 1 u r r e n t s e r i a l v e r s i o n = 1 write output stream out i o out write u r r e n t s e r i a l v e r s i o n read input stream in i o not found = in read != u r r e n t s e r i a l v e r s i o n not found mismatched multinomial m l estimator versions wanted + u r r e n t s e r i a l v e r s i o n + got + m l estimator an m estimator m set to 1 probability estimates in multinomial are generated adding 1 to each count and then dividing each 1 biased count sum all 1 biased counts laplace estimator m estimator laplace estimator 1 laplace estimator size size 1 laplace estimator alphabet dictionary dictionary 1 serial u = 1 u r r e n t s e r i a l v e r s i o n = 1 write output stream out i o out write u r r e n t s e r i a l v e r s i o n read input stream in i o not found = in read != u r r e n t s e r i a l v e r s i o n not found mismatched multinomial laplace estimator versions wanted + u r r e n t s e r i a l v e r s i o n + got + multinomial laplace estimator todo lazy lazy lazy make serializable too unimplemented but m estimators are m a p estimator estimator dirichlet prior m a p estimator dirichlet d d size prior = d multinomial estimate xxx unfinished serial u = 1 u r r e n t s e r i a l v e r s i o n = 1 write output stream out i o out write u r r e n t s e r i a l v e r s i o n read input stream in i o not found = in read != u r r e n t s e r i a l v e r s i o n not found mismatched multinomial m a p estimator versions wanted + u r r e n t s e r i a l v e r s i o n + got + 