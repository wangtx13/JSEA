2003 university pennsylvania m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e author fernando pereira <a href= mailto pereira cis upenn >pereira cis upenn edu< a> share upenn regex io iterator list logging classify pipe pipe iterator types simple wrapper training a m a l l e t maxent classifier author <a href= mailto pereira cis upenn > fernando pereira< a> 1 0 max ent shell logger logger = logger get logger max ent shell get name max ent shell command option gaussian variance option = command option max ent shell gaussian variance decimal 1 0 gaussian prior variance used training command option train option = command option max ent shell train f i l e n a m e training datafile command option test option = command option max ent shell test filename test datafile command option classify option = command option max ent shell classify filename datafile to classify command option model option = command option max ent shell model filename model command option encoding option = command option max ent shell encoding character encoding name input character encoding command option internal test option = command option max ent shell internal test true|false run internal tests command option list command options = command option list training testing and running a generic tagger command option gaussian variance option train option test option model option classify option encoding option internal test option train a maxent classifier each row <code>features< code> represents features a training instance label that instance in corresponding position <code>labels< code> features each row gives on features an instance labels each position gives label an instance var gaussian prior variance training save non save trained model to maxent classifier i o trained model cannot be saved classifier train features labels var save i o train pipe extended iterator data and target iterator features labels sequence array2 token sequence var save train a maxent classifier iterator <code>data< code> training instances a link token sequence data and a target tokens in instance data will be converted to features data iterator over training instances var gaussian prior variance training save non save trained model to maxent classifier i o trained model cannot be saved classifier train iterator< instance> data var save i o alphabet features = alphabet label alphabet labels = label alphabet pipe instance pipe = serial pipes pipe target2 label labels token sequence2 feature sequence features feature sequence2 feature vector instance list training list = instance list instance pipe training list add thru pipe data logger info # features = + features size logger info # labels = + labels size logger info # training instances = + training list size classifier trainer trainer = max ent trainer var classifier classifier = trainer train training list logger info training accuracy + classifier get accuracy training list features stop growth save != output stream s = output stream output stream save s write classifier s close classifier test a maxent classifier data representation same training classifier classifier to test features an instances represented arrays features labels corresponding labels accuracy on data test classifier classifier features labels test classifier pipe extended iterator data and target iterator features labels sequence array2 token sequence test a maxent classifier data representation same training classifier classifier to test data an iterator over labeled instances accuracy on data test classifier classifier iterator< instance> data instance list test list = instance list classifier get instance pipe test list add thru pipe data logger info # test instances = + test list size accuracy = classifier get accuracy test list accuracy compute maxent classification an instance classifier classifier features features that are on instance classification classification classify classifier classifier features classifier classify instance token sequence features compute maxent classifications an instances classifier classifier features each row represents on features an instance classifications given instances classification classify classifier classifier features classify classifier pipe extended iterator iterator features sequence array2 token sequence compute maxent classifications unlabeled instances given an iterator classifier classifier data iterator over unlabeled instances classifications given instances classification classify classifier classifier iterator< instance> data instance list unlabeled list = instance list classifier get instance pipe unlabeled list add thru pipe data logger info # unlabeled instances = + unlabeled list size list classifications = classifier classify unlabeled list classification classifications to classification load a classifier from a model classifier serialized in i o cannot be opened or read not found does not deserialize classifier load model i o not found input stream s = input stream input stream model classifier = classifier s read s close internal data = a b b a internal targets = yes no no internal instance = a b internal test i o classifier classifier = train internal data internal targets 1 0 out training accuracy = + test classifier internal data internal targets classification cl = classify classifier internal instance labeling lab = cl get labeling label alphabet labels = lab get label alphabet = 0 < labels size c++ out print labels lookup + + lab value + out input stream reader get reader encoding i o encoding != ? input stream reader input stream encoding reader command line wrapper to train test or run a maxent classifier instances are represented follows <dl> <dt> labeled < dt><dd><em>label< em> <em>feature 1< em> <em>feature n< em>< dd> <dt> unlabeled < dt><dd><em>feature 1< em> <em>feature n< em>< dd> < dl> command line arguments options shell and quoting should be added needed <dl> <dt><code> help< code> <em>boolean< em>< dt> <dd> print command line option usage give <code>true< code> longer documentation <code>false< code> < dd> <dt><code> prefix code< code> <em> code< em>< dt> <dd> you want run before any other interpreted note that text interpreted without modification so unlike some other options you need to include any necessary s < dd> <dt><code> gaussian variance< code> <em>positive number< em>< dt> <dd> gaussian prior variance used training 1 0 < dd> <dt><code> train< code> <em>filenane< em>< dt> <dd> train on labeled instances stored in <em>filename< em> no training < dd> <dt><code> test< code> <em>filename< em>< dt> <dd> test on labeled instances stored in <em>filename< em> no testing < dd> <dt><code> classify< code> <em>filename< em>< dt> <dd> classify unlabeled instances stored in <em>filename< em> no classification < dd> <dt><code> model< code> <em>filename< em>< dt> <dd> filename reading test classify or saving train model no model < dd> < dl> an occurs classifier classifier = pipe preprocess = sequence2 token sequence sequence lexer sequence lexer l e x n o n w h i t e s p a e t o g e t h e r input stream reader training data = test data = pattern instance format = pattern compile ^\\s \\ s+ \\s \\s $ pattern unlabeled instance format = pattern compile ^\\s \\s $ command options process internal test option value internal test train option value != training data = get reader train option value encoding option value classifier = train pipe extended iterator line iterator training data instance format 2 1 1 preprocess gaussian variance option value model option value model option value != classifier = load model option value classifier != test option value != test data = get reader test option value encoding option value out testing accuracy + test classifier pipe extended iterator line iterator test data instance format 2 1 1 preprocess classify option value != classifier get instance pipe set target processing input stream reader unlabeled data = get reader classify option value encoding option value classification cl = classify classifier pipe extended iterator line iterator unlabeled data unlabeled instance format 1 1 1 preprocess i = 0 i < cl length i++ labeling lab = cl i get labeling label alphabet labels = lab get label alphabet = 0 < labels size c++ out print labels lookup + + lab value + out 