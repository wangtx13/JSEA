2002 m a l l e t m achine languag e ~mccallum 1 0 furtherinformation ` l i e n s e author gary huang <a href= mailto ghuang >ghuang edu< a> pipe iterator list iterator list net u r i regex io pipe pipe types alphabet types instance types label strings an iterator that generates instances a pipe from a list filenames each treated a text whose target determined a user specified regular expression pattern applied to filename author gary huang <a href= mailto ghuang >ghuang edu< a> list iterator iterator< instance> filter filter list iterator sub iterator pattern target pattern set target slot to coming from 1st group pattern prefix index special value that means to use directories i get path target name xxx note that these are specific to u n i x directory delimiter characters! fix use label names directories given files optionally removing prefix all starting directories pattern s t a r t i n g d i r e t o r i e s = pattern compile s t a r t i n g d i r e t o r i e s use label names first directory in filename pattern f i r s t d i r e t o r y = pattern compile ? ^ + use label name last directory in filename pattern l a s t d i r e t o r y = pattern compile ^ + ^ + was ^ ^ + use label names all directory names in filename pattern a l l d i r e t o r i e s = pattern compile ^ ^ + pass target pattern to get targets construct an iterator over given arry files instances constructed from files are in same order they appear in given files files from which to construct instances filter implementing filter that will decide which names to accept may be target pattern regex pattern applied to filename whose first parenthesized group on matching taken to be target value generated instance pattern applied to filename matcher find remove prefix that modifies behavior s t a r t i n g d i r e t o r i e s pattern removing prefix all initially specified directories leaving remainder each filename target value list iterator files filter filter pattern target pattern remove prefix filter = filter = list target pattern = target pattern fill assign prefix index and sub iterator files remove prefix list iterator filenames filter filter pattern target pattern remove prefix iterator array2 filenames filter target pattern remove prefix construct a list iterator containing list files which contains one filename per line instances constructed from filelist are in same order listed list iterator filelist filter filter pattern target pattern remove prefix not found i o filter = filter = list target pattern = target pattern list filenames = read names filelist fa = list2 filenames fill assign prefix index and sub iterator fa remove prefix construct a list iterator containing list files r e l a t i v e pathnames one filename per line <p> instances constructed from filelist are in same order listed filelist list relative names base directory base directory relative names list iterator filelist base directory filter filter pattern target pattern remove prefix not found i o filter = filter = list target pattern = target pattern list filenames = read names filelist fa = list2 filenames base directory fill assign prefix index and sub iterator fa remove prefix list2 list filenames base dir fa = filenames size i = 0 i < filenames size i++ base dir != fa i = base dir filenames get i fa i = filenames get i fa list read names filelist i o list filenames = list buffered reader reader = buffered reader reader filelist filename = reader read line filename != filename trim length > 0 filenames add filename trim filename = reader read line reader close filenames list iterator filelist name filter filter pattern target pattern remove prefix not found i o filelist name filter target pattern remove prefix list iterator filelist name pattern target pattern not found i o filelist name target pattern pipe input iterator instance next next = sub iterator next path = next get parent target name = target pattern == s t a r t i n g d i r e t o r i e s target name = path substring prefix index target pattern != matcher m = target pattern matcher path m find target name = m group 1 instance next target name next to u r i next sub iterator next has next sub iterator has next remove illegal state iterator< instance> does not support remove list get fill assign prefix index and sub iterator files remove prefix list filenames = list i = 0 i < files length i++ files i directory illegal argument files i + not a ! files i illegal argument files i + does not filter == || filter accept files i add files i remove prefix filenames add files i get path sub iterator = iterator remove prefix find prefix index all filenames fn = filenames size i = 0 i < fn length i++ fn i = filenames get i prefix index = strings prefix index fn prefix index = 0 