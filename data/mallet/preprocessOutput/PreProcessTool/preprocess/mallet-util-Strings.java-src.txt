2003 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e arrays utility strings strings prefix index strings prefix len = strings 0 length i = 1 i < strings length i++ strings i length < prefix len prefix len = strings i length j = 0 prefix len == 0 0 j < prefix len strings i 1 at j != strings i at j prefix len = j j++ prefix len prefix strings strings 0 substring 0 prefix index strings count ch idx = 1 count = 0 idx = index ch idx+1 >= 0 count++ count levenshtein distance s t n = s length m = t length d matrix i iterates through s j iterates through t s i ith character s t j jth character t cost cost n == 0 1 0 m == 0 1 0 d = n+1 m+1 i = 0 i <= n i++ d i 0 = i j = 0 j <= m j++ d 0 j = j i = 1 i <= n i++ s i = s at i 1 j = 1 j <= m j++ t j = t at j 1 cost = s i == t j ? 0 1 d i j = minimum d i 1 j +1 d i j 1 +1 d i 1 j 1 + cost longer = n > m ? n m d n m longer normalize to 0 1 minimum a b mi = a b < mi mi = b < mi mi = mi 