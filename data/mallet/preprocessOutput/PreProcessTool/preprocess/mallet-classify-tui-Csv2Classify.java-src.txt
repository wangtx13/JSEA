2002 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e classify tui iterator logging regex io nio charset charset classify pipe iterator types command line tool classifying a sequence instances directly from text input without creating an instance list <p> author david mimno author gregory druck csv2 classify logger logger = logger get logger csv2 classify get name command option input = command option csv2 classify input f i l e containing data to be classified one instance per line command option output = command option csv2 classify output f i l e output write predictions to using indicates stdout command option line regex = command option csv2 classify line regex r e g e x ^ \\ s \\s $ regular expression containing regex groups label name and data command option name option = command option csv2 classify name i n t e g e r 1 index group containing instance name + use 0 to indicate that name field not used command option data option = command option csv2 classify data i n t e g e r 2 index group containing data command option classifier = command option csv2 classify classifier f i l e classifier use pipe and alphabets from a previously created vectors + allows creation example a test set vectors that are + compatible a previously created set training vectors command option encoding = command option csv2 classify encoding s t r i n g charset charset display name character encoding input not found i o process command line options command option set summary csv2 classify a tool classifying a stream unlabeled instances command option process csv2 classify print some helpful messages cases length == 0 command option get list csv2 classify print usage exit 1 input == illegal argument you must include ` input f i l e in order to specify a + containing instances one per line read classifier from classifier classifier = input stream ois = input stream buffered input stream input stream classifier value classifier = classifier ois read ois close e illegal argument problem loading classifier from + classifier value + + e get message read instances from reader reader input value to equals reader = input stream reader in reader = input stream reader input stream input value encoding value iterator< instance> csv iterator = csv iterator reader pattern compile line regex value data option value 0 name option value iterator< instance> iterator = classifier get instance pipe iterator from csv iterator write classifications to output print stream out = output value to equals out = out out = print stream output value encoding value gdruck stop growth on alphabets not done and features are added feature and classifier parameter indices will not match classifier get instance pipe get data alphabet stop growth classifier get instance pipe get target alphabet stop growth iterator has next instance instance = iterator next labeling labeling = classifier classify instance get labeling builder output = builder output append instance get name location = 0 location < labeling num locations location++ output append + labeling label at location location output append + labeling value at location location out output ! output value to equals out close 