2002 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e pipe regex list io types instance types token types token sequence remove tokens from token sequence in data field whose text matches any a set regular expressions author david mimno token sequence remove stop patterns pipe serializable list< pattern> stop patterns = token sequence remove stop patterns stop patterns = list< pattern> load a stop patterns from a stoplist to load token sequence remove stop patterns pattern stop patterns = list< pattern> add patterns pattern patterns an strings representing patterns token sequence remove stop patterns patterns stop patterns = list< pattern> add patterns patterns token sequence remove stop patterns add patterns patterns pattern patterns stop patterns add pattern compile pattern token sequence remove stop patterns add patterns pattern buffered reader in = buffered reader reader pattern line = line = in read line != stop patterns add pattern compile line i o e err problem reading stop pattern + e get message pattern syntax e err problem compiling regular expression + e get message instance pipe instance carrier token sequence original sequence = token sequence carrier get data token sequence sequence = token sequence i = 0 i < original sequence size i++ token t = original sequence get i passed = text = t get text pattern pattern stop patterns matcher matcher = pattern matcher text matcher matches passed = passed sequence add t carrier set data sequence carrier serialization serial u = 1 u r r e n t s e r i a l v e r s i o n = 1 write output stream out i o out write u r r e n t s e r i a l v e r s i o n out write stop patterns read input stream in i o not found = in read stop patterns = list< pattern> in read 