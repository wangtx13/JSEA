list collection list concurrent callable concurrent execution concurrent executors concurrent future concurrent thread pool executor concurrent time unit logging logger types instance list types matrix ops optimize optimizable logger an adaptor optimizables based on batch values gradients <p> computes values gradients each batch in multiple threads and combines them in end author gaurav chandalia r f optimizable batch label likelihood threaded optimizable optimizable gradient value logger logger = logger get logger threaded optimizable get name data instance list training set optimizable to be parallelized optimizable combining batch gradient optimizable value obtained from optimizable each batch batch cached value gradient obtained from optimizable each batch list<double > batch cached gradient determine when value gradient become stale cache stale indicator cache indicator tasks to be executed in individual threads each task instantiated only once but executed in every iteration collection< callable< double>> value tasks collection< callable< boolean>> gradient tasks thread pool to compute value gradient one batch data thread pool executor executor milliseconds s l e e p t i m e = 100 initializes optimizable and starts threads optimizable optimizable to be parallelized num factors number factors in model s used to initialize gradient cache indicator determines when value gradient become stale threaded optimizable optimizable combining batch gradient optimizable instance list training set num factors cache stale indicator cache indicator set up training set = training set optimizable = optimizable num batches = optimizable get num batches num batches > 0 invalid number batches + num batches batch cached value = num batches batch cached gradient = list<double > num batches i = 0 i < num batches ++i batch cached gradient add num factors cache indicator = cache indicator logger info creating + num batches + threads updating gradient executor = thread pool executor executors fixed thread pool num batches create tasks optimizable combining batch gradient get optimizable optimizable shuts down executor used to start and run threads to compute values and gradients <p> note a clean exit all threads it recommended to call after training finishes shutdown fix submitted mark dredze mdredze jhu executor shutdown executor await termination 30 time unit s e o n d s interrupted e e print stack trace executor shutdown now size == 0 all tasks didn t finish get value cache indicator value stale compute values again run all threads and wait them to finish list< future< double>> results = executor all value tasks compute log probability batch = 0 future< double> f results batch cached value batch++ = f get execution ee ee print stack trace interrupted ie ie print stack trace cached value = matrix ops sum batch cached value logger info get value loglikelihood optimizable label likelihood = + cached value cached value matrix ops sum batch cached value gradient re computes gradient stale <p> note assumes that <tt>buffer< tt> already initialized get value gradient buffer cache indicator gradient stale compute values again required get value compute gradients again run all threads and wait them to finish executor all gradient tasks interrupted ie ie print stack trace optimizable combine gradients batch cached gradient buffer creates tasks to be executed in parallel each task looks at a batch data create tasks num batches = optimizable get num batches value tasks = list< callable< double>> num batches gradient tasks = list< callable< boolean>> num batches number instances per batch num batch instances = training set size num batches batch assignments start = 1 end = 1 i = 0 i < num batches ++i get indices batch i == 0 start = 0 end = start + num batch instances i == num batches 1 start = end end = training set size start = end end = start + num batch instances value tasks add value handler i start end gradient tasks add gradient handler i start end get num optimizable get num get buffer optimizable get buffer get parameter index optimizable get parameter index set buff optimizable set buff set parameter index value optimizable set parameter index value computes value in a separate thread a batch data value handler callable< double> batch index batch assignments value handler batch index batch assignments batch index = batch index batch assignments = batch assignments value a batch call optimizable get batch value batch index batch assignments computes gradient in a separate thread a batch data gradient handler callable< boolean> batch index batch assignments gradient handler batch index batch assignments batch index = batch index batch assignments = batch assignments computes gradient a batch always call optimizable get batch value gradient batch cached gradient get batch index batch index batch assignments 