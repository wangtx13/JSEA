classify tui io buffered reader io io input stream io reader io writer io input stream list hash map logging logger classify feature constraint topics parallel topic model types alphabet types instance list command option logger create feature constraints from data use in g e training author gregory druck <a href= mailto gdruck >gdruck edu< a> vectors2 feature constraints logger logger = logger get logger vectors2 feature constraints get name command option vectors = command option vectors2 feature constraints input f i l e n a m e data used to generate constraints command option constraints = command option vectors2 feature constraints output f i l e n a m e output constraints command option features = command option vectors2 feature constraints features f i l e n a m e list features used to generate constraints command option lda = command option vectors2 feature constraints lda f i l e n a m e serialized l d a using l d a feature constraint selection command option num constraints = command option vectors2 feature constraints num constraints f i l e n a m e 10 number feature constraints command option feature selection = command option vectors2 feature constraints feature selection s t r i n g infogain | lda used to choose feature constraints command option targets = command option vectors2 feature constraints targets s t r i n g none | oracle | heuristic | voted used to estimate constraint targets command option majority prob = command option vectors2 feature constraints majority prob d o u b l e 0 9 probability majority labels when using heuristic target estimation command option process vectors2 feature constraints instance list list = instance list load vectors value here we will assume that we use all labeled data available list< integer> features = hash map< list< integer>> features and labels = a features was specified then load features from features was invoked contains labels features value better message from dfrankow gmail com targets value equals oracle runtime targets oracle features must be unlabeled features and labels = read features and labels from features value list get data alphabet list get target alphabet features = read features from features value list get data alphabet otherwise select features using specified feature selection value equals infogain features = feature constraint select features info gain list num constraints value feature selection value equals lda input stream ois = input stream input stream lda value parallel topic model lda = parallel topic model ois read features = feature constraint select top l d a features num constraints value lda list get data alphabet e e print stack trace runtime unsupported value feature selection + feature selection value target oracle then we not need feature labels hash map< > constraints = targets value equals none constraints = hash map< > fi features constraints put fi targets value equals oracle constraints = feature constraint set targets using data list features other we need to get feature labels they haven t been already loaded from disk features and labels == features and labels = feature constraint label features list features fi features and labels key set logger info list get data alphabet lookup fi + features and labels get fi logger info list get target alphabet lookup + targets value equals heuristic constraints = feature constraint set targets using heuristic features and labels list get target alphabet size majority prob value targets value equals voted constraints = feature constraint set targets using feature voting features and labels list runtime unsupported value targets + targets value write constraints constraints constraints value list get data alphabet list get target alphabet contains labels line = buffered reader reader = buffered reader reader line = reader read line trim e e print stack trace exit 1 split = line split \\s+ split length == 1 list< integer> read features from alphabet data alphabet list< integer> features = list< integer> buffered reader reader = buffered reader reader line = reader read line line != line = line trim feature index = data alphabet lookup index line features add feature index line = reader read line e e print stack trace exit 1 features hash map< list< integer>> read features and labels from alphabet data alphabet alphabet target alphabet hash map< list< integer>> features and labels = hash map< list< integer>> buffered reader reader = buffered reader reader line = reader read line line != line = line trim split = line split \\s+ feature index = data alphabet lookup index split 0 better message from dfrankow gmail com feature index == 1 runtime couldn t find feature + split 0 + in data alphabet list< integer> labels = list< integer> i = 1 i < split length i++ t o d o should these be label names? = target alphabet lookup index split i labels add logger info found label + features and labels put feature index labels line = reader read line e e print stack trace exit 1 features and labels write constraints hash map< > constraints constraints alphabet data alphabet alphabet target alphabet constraints size == 0 logger warning no constraints written! writer writer = writer constraints fi constraints key set writer write data alphabet lookup fi + p = constraints get fi p != = 0 < p length li++ writer write target alphabet lookup + + p + writer write writer close e e print stack trace exit 1 