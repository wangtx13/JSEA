2003 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e types generated nameimport io serializable collection randoms multivariate discrete probability distributions all distributions are assumed to be over 0 k you want a over some other discrete set use get alphabet and set alphabet members i thought about having a single potential both continuous and discrete but then all were and lack type safety was both inefficient and disturbing created mon sep 15 14 04 58 2003 author <a href= mailto casutton > charles sutton< a> $ factor v 1 1 2007 10 22 21 37 44 exp $ factor cloneable serializable value local function a given assignment all variables in potential must be but it s okay assignment uses variables not in potential value assignment assn probability an assignment to these variables assignment used curret assignment from given assignment iterator <p> can be used to things like <pre> discrete potential phi = create my ptl assignment iterator it = phi assignment iterator it has next it advance val = ptl phi it something val < pre> <p> equivalent to creating an assignment explicitly using <tt> assignment it next < tt> but can be much faster value assignment iterator it multiplies potential a constant such that it sums to 1 destructive factor factor normalize marginal over given variables factor marginalize variable vars marginal over given variables factor marginalize collection vars marginal over one variable factor marginalize variable var marginal attained summing out given variable factor marginalize out variable var marginal attained summing out given set variables factor marginalize out var set varset a potential phi over given variables obtained taking phi x = max all v that contain x prob x factor extract max collection vars a potential phi over given variables obtained taking phi x = max all v that contain x prob x factor extract max variable var a potential phi over given variables obtained taking phi x = max all v that contain x prob x factor extract max variable vars assignment that maximizes potential todo should an assignment argmax an assignment sampled from factor interpreting it an unnormalized probability assignment sample randoms r sum potential over all cases sum expected log factor value i e <tt>sum x factor value x math log factor value x < tt> where summation taken over all passible assignments entropy elementwise product factor another factor multiply factor dist does = pot < p> both potentials are currently in log space then does addition instead unsupported operation one potential in log space and other isn t multiply factor pot exponentiate power computes = pot < p> both potentials are currently in log space then does subtraction instead unsupported operation one potential in log space and other isn t divide factor pot whether potential over given variable contains var variable var set variables in potential var set var set an iterator over all assignmentss to potential assignment iterator assignment iterator whether almost equal to another potential almost equals factor p almost equals factor p epsilon factor duplicate na n log value assignment iterator it log value assignment assn log value loc variable get variable i dump to pretty output factor slice assignment assn table factor table 