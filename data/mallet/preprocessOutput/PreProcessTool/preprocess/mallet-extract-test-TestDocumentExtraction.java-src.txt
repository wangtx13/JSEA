2003 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e extract test junit framework regex pattern extract types label types label alphabet types label sequence sequence lexer created oct 12 2004 author < a h r e f= mailto casutton edu>casutton edu< a> $ test document extraction v 1 1 2007 10 22 21 38 02 exp $ test document extraction test test document extraction name name test suite test suite test document extraction test to xml label alphabet dict = label alphabet document = quick brown fox leapt over lazy dog tokenization toks = tokenization document sequence lexer label o = dict lookup label o label a n m l = dict lookup label a n i m a l label v b = dict lookup label v e r b label sequence tags = label sequence label o a n m l a n m l a n m l v b o o a n m l a n m l document extraction extr = document extraction test dict toks tags o actual xml = extr to xml expected xml = <?xml version=\ 1 0\ encoding=\ u t f 8\ ?> + <doc>the < a n i m a l>quick brown fox < a n i m a l>< v e r b>leapt < v e r b>over < a n i m a l>lazy dog< a n i m a l>< doc> equals expected xml actual xml test to xml b i o label alphabet dict = label alphabet document = quick brown fox leapt over lazy dog tokenization toks = tokenization document sequence lexer label o = dict lookup label o label b a n m l = dict lookup label b a n i m a l label a n m l = dict lookup label a n i m a l label b v b = dict lookup label b v e r b label v b = dict lookup label i v e r b label sequence tags = label sequence label o b a n m l a n m l b a n m l b v b v b o a n m l a n m l document extraction extr = document extraction test dict toks tags o b i o tokenization filter actual xml = extr to xml expected xml = <?xml version=\ 1 0\ encoding=\ u t f 8\ ?> + <doc>the < a n i m a l>quick brown < a n i m a l>< a n i m a l>fox < a n i m a l>< v e r b>leapt over < v e r b>the < a n i m a l>lazy dog< a n i m a l>< doc> equals expected xml actual xml test nested to xml label alphabet dict = label alphabet document = quick brown fox leapt over lazy dog tokenization toks = tokenization document sequence lexer label o = dict lookup label o label a n m l = dict lookup label a n i m a l label v b = dict lookup label v e r b label j j = dict lookup label a d j label m a m m a l = dict lookup label m a m m a l label sequence tags = label sequence label o a n m l a n m l a n m l v b o a n m l a n m l a n m l labeled spans spans = tokenization filter construct labeled spans dict document o toks tags span fox token = toks subspan 3 4 spans add labeled span fox token m a m m a l span big dog token = toks subspan 7 8 spans add labeled span big dog token j j document extraction extr = document extraction test dict toks spans o actual xml = extr to xml expected xml = <?xml version=\ 1 0\ encoding=\ u t f 8\ ?> + <doc>the < a n i m a l>quick brown < m a m m a l>fox < m a m m a l>< a n i m a l>< v e r b>leapt < v e r b>over < a n i m a l>the < a d j>lazy < a d j>dog< a n i m a l>< doc> equals expected xml actual xml test nested xml tokenization filter label alphabet dict = label alphabet document = quick brown fox leapt over lazy dog tokenization toks = tokenization document sequence lexer label o = dict lookup label o label a n m l = dict lookup label a n i m a l label a n m l m a m m = dict lookup label a n i m a l| m a m m a l label v b = dict lookup label v e r b label a n m l j j = dict lookup label a n i m a l| a d j label a n m l j j m a m m = dict lookup label a n i m a l| a d j| m a m m a l label sequence tags = label sequence label o a n m l a n m l a n m l m a m m v b o a n m l a n m l j j a n m l j j m a m m document extraction extr = document extraction test dict toks tags o hierarchical tokenization filter actual xml = extr to xml expected xml = <?xml version=\ 1 0\ encoding=\ u t f 8\ ?> + <doc>the < a n i m a l>quick brown < m a m m a l>fox < m a m m a l>< a n i m a l>< v e r b>leapt < v e r b>over < a n i m a l>the < a d j>lazy < m a m m a l>dog< m a m m a l>< a d j>< a n i m a l>< doc> equals expected xml actual xml test ignore function extr = document extraction test dict toks tags o hierarchical tokenization filter pattern compile a d actual xml = extr to xml expected xml = <?xml version=\ 1 0\ encoding=\ u t f 8\ ?> + <doc>the < a n i m a l>quick brown < m a m m a l>fox < m a m m a l>< a n i m a l>< v e r b>leapt < v e r b>over < a n i m a l>the lazy < m a m m a l>dog< m a m m a l>< a n i m a l>< doc> equals expected xml actual xml throwable test suite suite length > 0 suite = test suite i = 0 i < length i++ suite add test test document extraction i suite = test suite suite junit textui test runner run suite 