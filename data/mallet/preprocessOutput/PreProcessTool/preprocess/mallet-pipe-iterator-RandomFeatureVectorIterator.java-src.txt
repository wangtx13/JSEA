2002 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e author andrew mc callum <a href= mailto >mccallum edu< a> pipe iterator net u r i iterator logging pipe pipe pipe iterator pipe input iterator types alphabet types dirichlet types feature vector types instance types label types label alphabet types multinomial logger randoms random feature vector iterator iterator< instance> logger logger = logger get logger random feature vector iterator get name randoms r dirichlet centroid centroid averge alpha mean centroid averge alpha variance feature vector size poisson lambda instance count poisson lamba names num instances per indexed over classes dirichlet centroid indexed over classes current index current instance index random feature vector iterator randoms r generator all random ness used here dirichlet centroid includes a alphabet centroid averge alpha mean gaussian mean on sum alphas centroid averge alpha variance gaussian variance on sum alphas feature vector size poisson lambda instance count poisson lamba names r = r centroid = centroid centroid get alphabet alphabet centroid averge alpha mean = centroid averge alpha mean centroid averge alpha variance = centroid averge alpha variance feature vector size poisson lambda = feature vector size poisson lambda instance count poisson lamba = instance count poisson lamba names = names num instances per = names length centroid = dirichlet names length i = 0 i < names length i++ logger fine centroid averge alpha mean = +class centroid averge alpha mean ave alpha = r next gaussian centroid averge alpha mean centroid averge alpha variance logger fine ave alpha = +ave alpha centroid i = centroid random dirichlet r ave alpha logger fine dirichlet +class names i centroid i print reset random feature vector iterator randoms r alphabet vocab classnames r dirichlet vocab 2 0 30 0 10 20 classnames alphabet get alphabet centroid get alphabet alphabet dict size size alphabet ret = alphabet i = 0 i < size i++ ret lookup index feature +i ret names size size ret = size i = 0 i < size i++ ret i = +i ret random feature vector iterator randoms r vocab size num classes r dirichlet dict size vocab size 2 0 30 0 10 20 names size num classes reset i = 0 i < names length i++ num instances per i = r next poisson instance count poisson lamba logger fine +class names i + will have +num instances per i + instances current index = names length 1 current instance index = num instances per current index 1 label alphabet get label alphabet instance next current instance index < 0 current index <= 0 illegal state no next feature vector current index current instance index = num instances per current index 1 u r i uri = uri = u r i random + names current index + + current instance index e e print stack trace illegal state xxx producing small numbers? random size = r next poisson feature vector size poisson lambda random size = feature vector size poisson lambda feature vector fv = centroid current index random feature vector r random size logger fine feature vector +current index+ +current instance index fv print current instance index instance fv names current index uri has next ! current index == 0 current instance index == 0 remove illegal state iterator< instance> does not support remove 