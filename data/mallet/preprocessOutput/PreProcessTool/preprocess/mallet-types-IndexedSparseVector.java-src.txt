2002 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e sparse yet its present values can be changed you can t however add values that were zero and missing author andrew mc callum <a href= mailto >mccallum edu< a> types hash map iterator arrays logging io types alphabet types feature sequence types vector logger property list indexed sparse vector sparse vector serializable logger logger = logger get logger sparse vector get name index2location indexed sparse vector indices values capacity size copy check indices sorted remove duplicates indices values capacity size copy check indices sorted remove duplicates indices != create an empty vector indexed sparse vector 0 0 0 0 create non binary vector possibly dense feature indices or possibly sparse not indexed sparse vector feature indices values feature indices values create binary vector indexed sparse vector feature indices feature indices xxx we need to implement in feature vector subclasses constant matrix clone matrix indexed sparse vector indices values constant matrix clone matrix zeroed values != indices = indices length arraycopy indices 0 indices 0 indices length indexed sparse vector sv = indexed sparse vector indices values length values length values length share index2location will be unsafe indexed sparse vectors are ever allowed to be modifiable but i t think that will be index2location != sv index2location = index2location sv that change values index vector index2location == indices length > 0 set index2 location set index2 location out indexed sparse vector set index2 location indices length= +indices length+ maxindex= +indices indices length 1 indices != index2location == size indices length == 0 size = 0 size = indices indices length 1 +1 size >= indices length index2location = size arrays fill index2location 1 i = 0 i < indices length i++ index2location indices i = i set value index value index2location == set index2 location location = index < index2location length ? index2location index 1 location >= 0 values location = value illegal argument trying to set value that isn t present in indexed sparse vector set value at location location value values location = value i dislike name but it s consistent dense vector cas column plus equals index value index2location == set index2 location location = index < index2location length ? index2location index 1 location >= 0 values location += value illegal argument trying to set value that isn t present in indexed sparse vector dot product dense vector v ret = 0 values == i = 0 i < indices length i++ ret += v value indices i i = 0 i < indices length i++ ret += values i v value indices i ret dot product sparse vector v indices length == 0 0 index2location == set index2 location ret = 0 v num locs = v num locations binary vector binary i = 0 i < v num locs i++ index = v index at location i index >= index2location length index2location index >= 0 ret += v value at location i v binary other vector binary i = 0 i < v num locs i++ index = v index at location i index >= index2location length location = index2location index location >= 0 ret += values location i = 0 i < v num locs i++ index = v index at location i index >= index2location length location = index2location index location >= 0 ret += values location v value at location i ret plus equals sparse sparse vector v factor indices length == 0 index2location == set index2 location i = 0 i < v num locations i++ index = v index at location i index >= index2location length location = index2location index location >= 0 values location += v value at location i factor plus equals sparse sparse vector v indices length == 0 index2location == set index2 location i = 0 i < v num locations i++ index = v index at location i index >= index2location length location = index2location index location >= 0 values location += v value at location i set all v i = 0 i < values length i++ values i = v location index no test indices == not allowed in an indexed sparse vector index2location == set index2 location index >= index2location length 1 index2location index serialization serial u = 1 u r r e n t s e r i a l v e r s i o n = 0 write output stream out i o index2location considered to save disk space out write u r r e n t s e r i a l v e r s i o n read input stream in i o not found = in read 