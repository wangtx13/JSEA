2002 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e pipe io types a pipe that does nothing to instance fields but which has side effects on dictionary author andrew mc callum <a href= mailto >mccallum edu< a> noop pipe serializable noop pass through input without change but force creation alphabet s so it can be shared future dictionaried pipe s you might want to use before parallel pipes where previous pipes not need dictionaries but later steps in each parallel path and they all must share same dictionary noop alphabet data dict alphabet target dict data dict target dict instance pipe instance carrier carrier serialization serial u = 1 u r r e n t s e r i a l v e r s i o n = 0 write output stream out i o out write u r r e n t s e r i a l v e r s i o n read input stream in i o not found = in read 