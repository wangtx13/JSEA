2002 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e author aron culotta <a href= mailto culotta >culotta edu< a> classify classify classifier classify winnow pipe pipe types alphabet types feature selection types feature vector types instance types instance list types label vector types labeling an training a winnow2 on line classifier given an instance xi algorithm computes sum xi wi where wi weight that feature in given sum greater than some threshold link #theta theta then classifier guess that only when classifier makes a mistake are weights updated in one two steps promote guessed 0 and answer was 1 multiply all weights present features link #alpha alpha demote guessed 1 and answer was 0 divide all weights present features link #beta beta limitations winnow2 only considers binary feature vectors i e whether or not feature present not its value winnow trainer classifier trainer< winnow> d e f a u l t a l p h a = 2 0 d e f a u l t b e t a = 2 0 d e f a u l t n f a t o r = 5 constant to multiply to correct weights in promotion step alpha constant to divide incorrect weights in demotion step beta threshold sum wi xi in formulating guess theta factor n to set theta to e g n=1 2 theta = n 2 nfactor weights one each feature initialized to 1 weights winnow classifier constructor sets all features to defaults winnow trainer d e f a u l t a l p h a d e f a u l t b e t a d e f a u l t n f a t o r sets alpha and beta and value theta a alpha value b beta value winnow trainer a b a b d e f a u l t n f a t o r sets alpha beta and nfactor a alpha value b beta value nfact nfactor value winnow trainer a b nfact alpha = a beta = b nfactor = nfact winnow get classifier classifier trains winnow on instance list updating link #weights weights according to errors ilist instance list to be trained on classifier containing learned weights winnow train instance list training list feature selection selected features = training list get feature selection selected features != xxx attend to feature selection!!! unsupported operation feature selection not yet train run more than once we will be reinitializing weights t o d o provide to save weights training list get data alphabet stop growth training list get target alphabet stop growth pipe data pipe = training list get pipe alphabet dict = alphabet training list get data alphabet num labels = training list get target alphabet size num feats = dict size theta = num feats nfactor weights = num labels num feats init weights to 1 i=0 i<num labels i++ j=0 j<num feats j++ weights i j = 1 0 out init weights to 1 theta= +theta loop through all instances ii = 0 ii < training list size ii++ instance inst = instance training list get ii labeling labeling = inst get labeling feature vector fv = feature vector inst get data results = num labels fvisize = fv num locations correct index = labeling get best index rpos=0 rpos < num labels rpos++ results rpos =0 sum up xi wi each fvi=0 fvi < fvisize fvi++ fi = fv index at location fvi out feature index +fi lpos=0 lpos < num labels lpos++ results lpos += weights lpos fi out in instance + ii make guess each label using threshold update weights according to alpha and beta upon incorrect guess ri=0 ri < num labels ri++ results ri > theta guess 1 correct index != ri correct 0 demote ri fv guess 0 correct index == ri correct 1 promote ri fv out results guessed x=0 x<num labels x++ out results x out correct label +correct index out weights are h=0 h<num labels h++ g=0 g<num feats g++ out weights h g out classifier = winnow data pipe weights theta num labels num feats classifier promotes link #alpha alpha weights responsible incorrect guess lpos index incorrectly guessed label fv feature vector promote lpos feature vector fv fvisize = fv num locations learner predicted 0 correct 1 > promotion fvi=0 fvi < fvisize fvi++ fi = fv index at location fvi weights lpos fi = alpha demotes link #beta beta weights responsible incorrect guess lpos index incorrectly guessed label fv feature vector demote lpos feature vector fv fvisize = fv num locations learner predicted 1 correct 0 > demotion fvi=0 fvi < fvisize fvi++ fi = fv index at location fvi weights lpos fi = beta 