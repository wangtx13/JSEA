share upenn ner regex pipe types matches a regular expression which spans several tokens regex matches pipe io serializable name pattern regex min how many tokens to merge a match max regex matches feature name pattern regex min max name = feature name regex = regex min = min max = max instance pipe instance carrier token sequence ts = token sequence carrier get data marked = ts size avoid setting features twice i=0 i < ts size i++ on reaching a token test all strings at least min tokens which end in token buffer sb = buffer start testing rightmost suffix and grow leftward length = 1 length <= max length++ loc = i length + 1 loc < 0 take another token sb insert 0 ts get loc get text prepend token on a match mark all participating tokens length >= min regex matcher sb to matches j=0 j<length j++ marked loc+j = set feature on all tokens participating in any match i=0 i < ts size i++ marked i ts get i set feature value name 1 0 carrier 