2002 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e classify io classify classifier transducer trainer optimize optimizer types feature selection types instance types instance list types labeler bsh interpreter command option parent all classifier trainers <p> all classification techniques in m a l l e t are implement two classes a trainer and a classifier trainer ingests training data and creates a classifier that holds set during training classifier applies those to an instance to produce a classification instance <p> a concrete trainer required only to be able to train from an instance list trainers that can incrementally train are subclasses incremental training classifier <p> command line tools document classification are link classify tui csv2 vectors link classify tui text2 vectors link classify tui vectors2 classify link classify tui vectors2 info and link classify tui vectors2 vectors classifier author andrew mc callum <a href= mailto >mccallum edu< a> each classifier trainer trains one classifier based on various consuming training data you want an that can train be asked to train on multiple different training sets and yield different classifiers you probably want a classifier trainer factory classifier trainer< classifier> instance list validation set finished training = finished training finished training careful to set properly in subclasses! consider removing akm 1 08 get classifier train instance list training set set validation instances instance list validation set validation set = validation set instance list get validation instances validation set no it fine these can be set in constructor only individual classifier trainer subclasses could provide desired set initial classifier initial classifier get initial classifier optimization< classifier> train instance list training set num iterations optimizer get optimizer get iteration active in which trainer will select certain instances and request that labeler instance label them training and unlabeled set instances on which to train some may be labeled unlabeled ones may have their label requested from labeler labeler num label requests number times to call labeler label active learning< classifier> train instance list training and unlabeled set labeler labeler num label requests various kinds online batches where training instances are presented consumed immediately same instances may be presented more than once to example stochastic gradient etc conforms to increments< classifier> train incremental instance list training instances to add online that can operate on one instance at a time example perceptron instance increments< classifier> increments< c> train incremental instance instance to add instances a factory know how to create classifier trainers to apply to classifiers factory< t classifier trainer<? classifier>> recommended but cannot be enforced in that subclasses implement classifier train instance list training set classifier train instance list training set instance list validation set classifier train instance list training set instance list validation set classifier initial classifier which call t classifier trainer classifier initial classifier t classifier trainer classifier trainer to get get name 