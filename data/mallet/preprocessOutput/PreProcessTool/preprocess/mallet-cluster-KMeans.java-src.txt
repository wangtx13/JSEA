2003 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e clusters a set point via k means instances that are clustered are expected to be type feature vector e m p t y s i n g l e and other changes march 2005 heuristic cluster selection may 2005 author jerod weinman < a h r e f= mailto weinman >weinman edu< a> author mike winter <a href = mailto mike winter gmail com >mike winter gmail com< a> cluster list random logging logger pipe pipe types instance types instance list types metric types sparse vector vector stats k means clusterer clusters points into k clusters minimizing total intra cluster variance it uses a given link metric to find distance between link instance s which should have link sparse vector s in data field k means clusterer serial u = 1 l stop after movement means less than m e a n s t o l e r a n e = 1e 2 maximum number iterations m a x i t e r = 100 minimum fraction points that move p o i n t s t o l e r a n e = 005 treat an empty cluster an condition e m p t y e r r o r = 0 drop an empty cluster e m p t y d r o p = 1 place single instance furthest from previous cluster mean e m p t y s i n g l e = 2 random randinator metric metric num clusters empty action list< sparse vector> cluster means logger logger = logger get logger base cluster k means construct a k means instance pipe pipe instances being clustered num clusters number clusters to use metric metric to measure instance distances empty action specify what should happen when an empty cluster occurs k means pipe instance pipe num clusters metric metric empty action instance pipe empty action = empty action metric = metric num clusters = num clusters cluster means = list< sparse vector> num clusters randinator = random construct a k means instance pipe pipe instances being clustered num clusters number clusters to use metric metric to measure instance distances <p > an empty cluster occurs it considered an k means pipe instance pipe num clusters metric metric instance pipe num clusters metric e m p t y e r r o r cluster instances instances list instances to cluster override clustering cluster instance list instances instances get pipe == instance pipe initialize cluster means initialize means sample instances metric cluster labels = instances size list< instance list> instance clusters = list< instance list> num clusters inst clust inst clust dist inst dist delta means = m a x v a l u e delta points = instances size iterations = 0 sparse vector cluster mean = 0 < num clusters c++ instance clusters add instance list instance pipe logger info entering k means iteration delta means > m e a n s t o l e r a n e iterations < m a x i t e r delta points > instances size p o i n t s t o l e r a n e iterations++ delta points = 0 each instance measure its distance to current cluster means and subsequently assign it to closest cluster adding it to an corresponding instance list mean each cluster instance list then updated n = 0 n < instances size n++ inst clust = 0 inst clust dist = m a x v a l u e = 0 < num clusters c++ inst dist = metric distance cluster means get sparse vector instances get n get data inst dist < inst clust dist inst clust = inst clust dist = inst dist add to closest cluster label it such instance clusters get inst clust add instances get n cluster labels n != inst clust cluster labels n = inst clust delta points++ delta means = 0 = 0 < num clusters c++ instance clusters get size > 0 cluster mean = vector stats mean instance clusters get delta means += metric distance cluster means get cluster mean cluster means set cluster mean instance clusters set instance list instance pipe logger info empty cluster found empty action e m p t y e r r o r e m p t y d r o p logger fine removing cluster + cluster means remove instance clusters remove n = 0 n < instances size n++ cluster labels n != cluster size + instance clusters get size + + yet cluster labels n + cluster labels n cluster labels n > cluster labels n num clusters < note trickiness bad style? maybe it just means now that we ve deleted entry we have to repeat index to get next entry e m p t y s i n g l e get instance furthest from any centroid and make it a centroid centroid dist = 0 centroid = 0 instance list cache list = clusters = 0 clusters < cluster means size clusters++ sparse vector centroid = cluster means get clusters instance list cent instances = instance clusters get clusters dont t create empty clusters cent instances size <= 1 n = 0 n < cent instances size n++ current dist = metric distance centroid sparse vector cent instances get n get data current dist > centroid dist centroid = n centroid dist = current dist cache list = cent instances cache list == logger info can t find an instance to move exiting can t find an instance to move cluster means set sparse vector cache list get centroid get data logger info iter + iterations + delta means = + delta means delta means <= m e a n s t o l e r a n e logger info k means converged delta means = + delta means iterations >= m a x i t e r logger info maximum number iterations + m a x i t e r + reached delta points <= instances size p o i n t s t o l e r a n e logger info minimum number points np + p o i n t s t o l e r a n e + = + instances size p o i n t s t o l e r a n e + moved in last iteration saying converged clustering instances num clusters cluster labels uses a m a x m i n heuristic to seed initial cluster means inst list list instances metric distance metric initialize means sample instance list inst list metric metric instance list has no remove and instances aren t parsed out most pipes so we have to pre process here and possibly leave some instances without cluster assignments list< instance> instances = list< instance> inst list size i = 0 i < inst list size i++ instance ins = inst list get i sparse vector sparse = sparse vector ins get data sparse num locations == 0 instances add ins add next center that has m a x m i n distances from each previous j 1 centers idea from andrew moore tutorial not sure who came up it originally i = 0 i < num clusters i++ max = 0 selected = 0 k = 0 k < instances size k++ min = m a x v a l u e instance ins = instances get k sparse vector inst = sparse vector ins get data j = 0 j < cluster means size j++ sparse vector center inst = cluster means get j dist = metric distance center inst inst dist < min min = dist min > max selected = k max = min instance center = instances remove selected cluster means add sparse vector center get data list cluster means after a run algorithm an list instances list< sparse vector> get cluster means cluster means 