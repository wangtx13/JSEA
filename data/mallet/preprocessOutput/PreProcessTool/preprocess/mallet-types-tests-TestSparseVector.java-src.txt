2002 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e author andrew mc callum <a href= mailto >mccallum edu< a> types tests io types dense vector types sparse vector junit framework test sparse vector test test sparse vector name name dbl1 = 1 2 3 4 5 dbl2 = 1 1 5 2 1 1 dbl3 = 2 0 2 5 3 0 4 7 3 5 3 6 0 0 0 0 0 0 0 0 0 0 dbl4 = 1 2 3 4 n e g a t i v e i n f i n i t y idxs = 3 5 7 13 15 sparse vector s1 = sparse vector idxs dbl1 dbl1 length dbl1 length sparse vector s2 = sparse vector idxs dbl2 dbl2 length dbl2 length dense vector d1 = dense vector dbl3 check answer sparse vector actual ans equals wrong number locations ans length actual num locations i = 0 i < actual num locations i++ equals value incorrect at location +i+ ans i actual value at location i 0 0 test plus equals sparse vector s = sparse vector s1 clone matrix s plus equals sparse s2 2 0 check answer s 3 5 7 6 7 sparse vector s2p = sparse vector 13 0 8 s plus equals sparse s2p 1 0 check answer s 3 5 7 6 8 7 sparse vector s3p = sparse vector 14 0 8 s plus equals sparse s3p 1 0 check answer s 3 5 7 6 8 7 verify s unchanged sparse vector s4 = sparse vector 7 14 15 0 2 0 8 1 2 s plus equals sparse s4 1 0 check answer s 3 5 7 2 6 8 8 2 sparse vector s5 = sparse vector 7 0 2 s5 plus equals sparse s1 i = 0 i < s5 num locations i++ equals 7 s5 index at location i equals 3 2 s5 value at location i 0 0 sparse vector s6 = sparse vector 7 0 2 s6 plus equals sparse s1 3 5 i = 0 i < s6 num locations i++ equals 7 s6 index at location i equals 10 7 s6 value at location i 0 0 test dot product sparse vector t1 = sparse vector 7 0 2 equals 0 6 t1 dot product s1 0 00001 equals 0 6 s1 dot product t1 0 00001 equals 19 0 s1 dot product s2 0 00001 equals 19 0 s2 dot product s1 0 00001 equals 11 9 s1 dot product d1 0 00001 equals 10 1 s2 dot product d1 0 00001 test dotproduct when vector more locations has a lower max index than vector sparse vector t2 = sparse vector 3 30 0 2 3 5 sparse vector t3 = sparse vector 1 1 1 1 equals 0 2 t3 dot product t2 0 00001 test increment value sparse vector s = sparse vector s1 clone matrix s increment value 5 0 75 ans = 1 2 75 3 4 5 i = 0 i < s num locations i++ s value at location i == ans i test set value sparse vector s = sparse vector s1 clone matrix s set value 5 0 3 ans = 1 0 3 3 4 5 i = 0 i < s num locations i++ s value at location i == ans i test dense sparse vector sparse vector sv dense = sparse vector dbl3 sdot = sv dense dot product sv dense ddot = d1 dot product d1 equals sdot ddot 0 0001 sv dense plus equals sparse s1 check answer sv dense 2 0 2 5 3 0 5 7 3 5 5 6 0 3 0 0 0 0 0 4 0 5 sv dense plus equals sparse s1 2 0 check answer sv dense 2 0 2 5 3 0 7 7 3 5 9 6 0 9 0 0 0 0 0 12 0 15 dbl4 = dbl3 length + 1 i = 0 i < dbl4 length i++ dbl4 i = 2 0 sparse vector sv4 = sparse vector dbl4 sv dense plus equals sparse sv4 check answer sv dense 4 0 4 5 5 0 9 7 5 5 11 6 2 0 11 0 2 0 2 0 2 2 2 14 2 0 17 idx2 = 3 7 12 15 18 test binary vector sparse vector binary1 = sparse vector idxs idxs length idxs length sparse vector binary2 = sparse vector idx2 idx2 length idx2 length equals 3 binary1 dot product binary2 0 0001 equals 3 binary2 dot product binary1 0 0001 equals 15 0 binary1 dot product s1 0 0001 equals 15 0 s1 dot product binary1 0 0001 equals 9 0 binary2 dot product s1 0 0001 equals 9 0 s1 dot product binary2 0 0001 sparse vector dbl vec = sparse vector s1 clone matrix dbl vec plus equals sparse binary1 check answer dbl vec 2 3 4 5 6 sparse vector dbl vec2 = sparse vector s1 clone matrix dbl vec2 plus equals sparse binary2 check answer dbl vec2 2 2 4 4 6 test clone matrix zeroed sparse vector s = sparse vector s1 clone matrix zeroed i = 0 i < s num locations i++ s value at location i == 0 0 s index at location i == idxs i test print output stream baos = output stream print stream out = print stream baos print stream old out = out set out out sparse vector standard = sparse vector idxs dbl2 standard print equals sparse vector 3 = 1 0 sparse vector 5 = 1 5 sparse vector 7 = 2 0 sparse vector 13 = 1 0 sparse vector 15 = 1 0 baos to baos reset sparse vector dense = sparse vector dbl2 dense print equals sparse vector 0 = 1 0 sparse vector 1 = 1 5 sparse vector 2 = 2 0 sparse vector 3 = 1 0 sparse vector 4 = 1 0 baos to baos reset sparse vector binary = sparse vector idxs idxs length idxs length binary print equals sparse vector 3 = 1 0 sparse vector 5 = 1 0 sparse vector 7 = 1 0 sparse vector 13 = 1 0 sparse vector 15 = 1 0 baos to baos reset test extended dot product sparse vector v1 = sparse vector dbl3 sparse vector v inf = sparse vector dbl4 dp = v1 dot product v inf ! na n dp dp = v inf dot product v1 ! na n dp test suite test suite test sparse vector set up junit textui test runner run suite 