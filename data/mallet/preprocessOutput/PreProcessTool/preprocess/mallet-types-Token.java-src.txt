2002 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e author andrew mc callum <a href= mailto >mccallum edu< a> types iterator list hash map io output stream io i o io input stream io serializable property list a representation a piece text usually a single word to which we can attach properties token serializable property holder text property list properties = arbitrary properties property list features = numeric to turn into a feature vector token s text = s get text text set text t text = t xxx may change in future! you really just want text you should use token get text instead to buffer sb = buffer sb append get text features != property list iterator iter = features iterator iter has next iter next sb append feature + iter get key + = +iter get numeric value properties != property list iterator iter = properties iterator iter has next iter next iter numeric sb append property + iter get key + = +iter get numeric value sb append property + iter get key + = +iter get value sb to to feature names buffer sb = buffer sb append get text features != property list iterator iter = features iterator iter has next iter next sb append + iter get key sb to feature vector to feature vector alphabet dict binary feature vector dict features binary set property key value properties = property list add key value properties set numeric property key value properties = property list add key value properties property list get properties properties set properties property list properties properties = properties get property key properties == ? properties lookup key get numeric property key properties == ? 0 0 properties lookup number key has property key properties != properties has property key set feature value key value features = property list add key value features get feature value key features == ? 0 0 features lookup number key property list get features features set features property list pl features = pl serialization serial u = 1 u r r e n t s e r i a l v e r s i o n = 0 write output stream out i o out write u r r e n t s e r i a l v e r s i o n out write read input stream in i o not found = in read in read 