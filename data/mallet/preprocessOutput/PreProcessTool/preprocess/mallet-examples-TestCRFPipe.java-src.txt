examples io regex zip pipe pipe iterator pipe tsf types test r f pipe test r f pipe training filename i o list< pipe> pipes = list< pipe> print writer out = print writer test out conjunctions = 3 conjunctions 0 = 1 conjunctions 1 = 1 conjunctions 2 = 2 1 pipes add simple tagger sentence2 token sequence pipes add features in window p r e v 1 1 pipes add features in window n e x t 1 2 pipes add offset conjunctions conjunctions pipes add token text suffix c1= 1 pipes add token text suffix c2= 2 pipes add token text suffix c3= 3 pipes add regex matches a p i t a l i z e d pattern compile ^\\p lu pipes add regex matches s t a r t s n u m b e r pattern compile ^ 0 9 pipes add regex matches h y p h e n a t e d pattern compile \\ pipes add regex matches d o l l a r s i g n pattern compile \\$ pipes add token first position f i r s t t o k e n pipes add token sequence2 feature vector sequence pipes add sequence printing pipe out pipe pipe = serial pipes pipes instance list training instances = instance list pipe training instances add thru pipe line group iterator buffered reader input stream reader g z i p input stream input stream training filename pattern compile ^\\s $ out close test r f pipe trainer = test r f pipe 0 