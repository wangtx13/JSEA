types pipe pipe iterator logging io replaces ngrams specified in configuration files input tab delimited text one instance per line output tab delimited text but deletions and text replacements replacer logger logger = logger get logger replacer get name command option spaced strings input files = command option spaced strings replacer input f i l e f i l e s containing data one instance per line command option output = command option replacer output f i l e data write strings replacements applied to command option spaced strings replacement files = command option spaced strings replacer replacement files f i l e f i l e files containing replacements one per line a b tab replaces a b a b replaces a b a b command option spaced strings deletion files = command option spaced strings replacer deletion files f i l e f i l e files containing strings to delete after replacements but before tokenization ie multiword stop command option line regex = command option replacer line regex r e g e x ^ ^\ \ ^\ \ regular expression containing regex groups label name and data command option name group = command option replacer name i n t e g e r 1 index group containing instance name use 0 to indicate that field not used command option label group = command option replacer label i n t e g e r 2 index group containing label use 0 to indicate that field not used command option data group = command option replacer data i n t e g e r 3 index group containing data process command line options command option set summary replacer tool modifying text n gram preprocessing command option process replacer n gram preprocessor preprocessor = n gram preprocessor replacement files value != filename replacement files value out including replacements from + filename preprocessor load replacements filename deletion files value != filename deletion files value out including deletions from + filename preprocessor load deletions filename list< pipe> pipes = list< pipe> print writer out = print writer output value filename input files value logger info loading + filename csv iterator reader = csv iterator reader filename line regex value data group value label group value name group value iterator< instance> iterator = preprocessor iterator from reader count = 0 we re not saving instance list just writing to out iterator has next instance instance = iterator next out instance get name + + instance get target + + instance get data count++ count % 10000 == 0 logger info instance + count iterator next out close 