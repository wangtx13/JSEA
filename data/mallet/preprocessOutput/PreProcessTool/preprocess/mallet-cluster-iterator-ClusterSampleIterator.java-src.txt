cluster iterator list iterator cluster clustering cluster neighbor evaluator agglomerative neighbor cluster cluster utils types instance randoms sample clusters instances author aron culotta <culotta degas edu> 1 0 since 1 0 pair sample iterator neighbor iterator cluster sample iterator pair sample iterator clustering clustering random source randomness positive proportion proportion instances that should be positive examples number samples total number samples to generate cluster sample iterator clustering clustering randoms random positive proportion number samples clustering random positive proportion number samples instance next agglomerative neighbor neighbor = positive count < positive target || clustering get num clusters == 1 nonsingleton clusters length > 0 positive count++ label = nonsingleton clusters random next nonsingleton clusters length instances = clustering get indices label label clusters = sample split from instances random 2 neighbor = agglomerative neighbor clustering clustering clusters labeli = random next clustering get num clusters labelj = random next clustering get num clusters labeli == labelj labelj = random next clustering get num clusters neighbor = agglomerative neighbor clustering cluster utils copy and merge clusters clustering labeli labelj sample from clustering get indices label labeli random 1 sample from clustering get indices label labelj random 1 total count++ instance neighbor samples a subset elements from a random sample from a randoms random min size sample size size = math max random next a length + 1 min size list to include = list i = 0 i < a length i++ to include add i to include size > size size != a length to include remove random next to include size ret = to include size i = 0 iterator iter = to include iterator iter has next ret i++ = a iter next value ret samples a two disjoint subset elements from a random sample split from a randoms random min size sample size size = math max random next a length + 1 min size list to include = list i = 0 i < a length i++ to include add i to include size > size size != a length to include remove random next to include size ret = 2 size1 = math max random next to include size 1 1 ret 0 = size1 ret 1 = to include size size1 i = 0 i < size1 i++ ret 0 i = to include get i value nadded = 0 i = size1 i < to include size i++ ret 1 nadded++ = to include get i value ret 