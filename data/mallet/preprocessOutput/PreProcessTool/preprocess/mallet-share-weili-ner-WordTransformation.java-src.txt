2002 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e author wei <a href= mailto weili >weili edu< a> share weili ner regex io pipe types word transformation endings = ing ed ogy s ly ion tion ity ies pattern ending patterns = pattern endings length ending names = 2 3 endings length i = 0 i < endings length i++ ending patterns i = pattern compile +endings i + $ j = 0 j < 3 j++ k = 0 k < 2 k++ ending names k j i = w + k==1? +j+ =< e n d +endings i + > spelling digit collapses downcasing word transformation word transformation spelling digit collapses downcasing spelling = spelling digit collapses = digit collapses downcasing = downcasing token transformed token original ending = 3 endings length endingp1 = 3 endings length endingp2 = 3 endings length word = original digit collapses word matches 19\\d\\d word = < y e a r> word matches 19\\d\\ds word = < y e a r d e a d e> word matches 19\\d\\d \\d+ word = < y e a r s p a n> word matches \\d+\\\\ \\d word = < f r a t i o n> word matches \\d \\d \\ word = < d i g i t s> word matches 19\\d\\d \\d\\d \\d d word = < d a t e l i n e d a t e> word matches 19\\d\\d \\d\\d \\d\\d word = < d a t e l i n e d a t e> word matches led word = < l e d> word matches sponsored word = < l e d> downcasing word = word to lower token token = token word spelling j = 0 j < endings length j++ ending 2 j = ending 1 j ending 1 j = ending 0 j ending 0 j = ending patterns j matcher word matches ending 0 j token set feature value ending names 0 0 j 1 token 