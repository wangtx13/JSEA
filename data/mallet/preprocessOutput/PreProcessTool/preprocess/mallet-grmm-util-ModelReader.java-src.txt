2006 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e io buffered reader io i o io reader list list iterator regex pattern reflect constructor reflect invocation target types gnu trove t hash map bsh interpreter bsh eval $ model reader v 1 1 2007 10 22 21 37 58 exp $ model reader t hash map all classes all classes = t hash map add classes here all classes put potts potts table factor all classes put unary boltzmann unary factor all classes put binaryunary binary unary factor all classes put binarypair boltzmann pair factor all classes put uniform uniform factor all classes put normal uni normal factor all classes put beta beta factor t hash map name2var = t hash map assignment read from matrix var set vars reader in i o variable varr = vars to variable interpreter interpreter = interpreter buffered reader b in = buffered reader in assignment assn = assignment line line = b in read line != fields = line split \\s+ vals = fields length i = 0 i < fields length i++ vals i = interpreter eval fields i eval e runtime reading line +line e assn add row varr vals assn factor graph read model buffered reader in i o list factors = list line line = in read line != pattern matches ^\\s $ line fields = line split \\s+ fields 0 equals ignore v a r a variable declaration handle variable decl fields a factor line factor factor = factor from line fields factors add factor e runtime reading line +line e factor graph fg = factor graph iterator it = factors iterator it has next factor factor = factor it next fg multiply factor fg handle variable decl fields colon idx = find colon fields fields length != colon idx + 2 illegal argument invalid syntax num outs = fields colon idx+1 num outcomes num outs equals ignore continuous num outcomes = variable o n t i n u o u s num outcomes = parse num outs i = 0 i < colon idx i++ name = fields i variable var = variable num outcomes var set label name name2var put name var find colon fields i = 0 i < fields length i++ fields i equals i illegal argument invalid syntax factor factor from line fields idx = find twiddle fields construct factor fields idx find twiddle fields i = 0 i < fields length i++ fields i equals ~ i 1 factor construct factor fields idx factor = determine factor fields idx = determine factor fields idx constructor factor ctor = find ctor factor factor factor factor = factor factor ctor instance instantiation e runtime e illegal access e runtime e invocation target e runtime e factor constructor find ctor factor = length i = 0 i < length i++ i = i get special i == i = factor get declared constructor no such e buffer buf = buffer invalid argments factor +factor class+ buf append were i = 0 i < length i++ buf append i buf append buf append i = 0 i < length i++ buf append i get buf append buf append runtime buf to determine factor fields twiddle idx factor name = fields twiddle idx + 1 to lower = all classes get factor name != runtime could not determine factor from +factor name determine factor fields twiddle idx list = list fields length i = 0 i < twiddle idx i++ add var from name fields i i = twiddle idx+2 i < fields length i++ add var from name fields i to pattern nbr regex = pattern compile + ?\\d+ ? \\ \\d+ ? e + \\d+ ? var from name name pre twiddle nbr regex matcher name matches parse name name2var contains name name2var get name variable var = pre twiddle ? variable 2 variable variable o n t i n u o u s var set label name name2var put name var var 