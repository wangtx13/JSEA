2002 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e author aron culotta <a href= mailto culotta >culotta edu< a> confidence io types calculates effectiveness constrained viterbi in propagating corrections in one segment a sequence to other segments confidence corrector evaluator start tags to identify segment start end boundaries in tags confidence corrector evaluator start tags in tags start tags = start tags in tags = in tags pred sequence contains errors outside corrected segment contains in uncorrected segments sequence sequence sequence pred sequence sequence corrected sequence segment corrected segment i=0 i < sequence size i++ corrected segment index in segment i !corrected sequence get i equals sequence get i err truth j=0 j < sequence size j++ err print sequence get j + err predicted j=0 j < sequence size j++ err print pred sequence get j + err corrected j=0 j < sequence size j++ err print corrected sequence get j + illegal state corrected sequence does not have correct labels corrected segment + corrected segment !pred sequence get i equals sequence get i only evaluates over sequences which contain errors examine region not directly corrected <code>corrected segments < code> to measure effects propagation model used to segment input sequence predictions list corrected segmentation ilist list testing data corrected segments list link segment s in each sequence that were corrected currently only allows one segment per instance uncorrected we only evaluate sequences where errors remain after correction evaluate transducer model list predictions instance list ilist list corrected segments description print stream output stream errors in uncorrected predictions size != ilist size || corrected segments size != ilist size illegal argument number predicted sequence + predictions size + and number corrected segments + corrected segments size + must be equal to length instancelist + ilist size + num incorrect2 correct = 0 overall correction improvement num correct2 incorrect = 0 overall correction deprovement num propagated incorrect2 correct = 0 count propagated corrections num predicted correct = 0 num tokens predicted correctly num corrected correct = 0 num tokens predicted correctly after correction accuracy outside corrected segment before and after propagation num uncorrected correct before propagation = 0 num uncorrected correct after propagation = 0 total tokens = 0 total tokens in uncorrected region = 0 num corrected sequences = 0 count sequences corrected i=0 i < ilist size i++ instance instance = ilist get i sequence input = sequence instance get data sequence sequence = sequence instance get target sequence pred sequence = sequence max lattice model input best output sequence sequence corrected sequence = sequence predictions get i segment corrected segment = segment corrected segments get i any condition not evaluate sequence corrected segment == || errors in uncorrected !contains in uncorrected segments sequence pred sequence corrected sequence corrected segment num corrected sequences++ total tokens += sequence size predicted matches = get matches sequence pred sequence corrected matches = get matches sequence corrected sequence j=0 j < predicted matches length j++ num predicted correct += predicted matches j ? 1 0 num corrected correct += corrected matches j ? 1 0 predicted matches j !corrected matches j num correct2 incorrect++ !predicted matches j corrected matches j num incorrect2 correct++ outside corrected segment j < corrected segment get start || j > corrected segment get end total tokens in uncorrected region++ !predicted matches j corrected matches j num propagated incorrect2 correct++ num uncorrected correct before propagation += predicted matches j ? 1 0 num uncorrected correct after propagation += corrected matches j ? 1 0 token accuracy before correction = num predicted correct total tokens token accuracy after correction = num corrected correct total tokens uncorrected region accuracy before correction = num uncorrected correct before propagation total tokens in uncorrected region uncorrected region accuracy after correction = num uncorrected correct after propagation total tokens in uncorrected region output stream description + evaluating effect propagation in sequences containing at least one token + total number correctedsequences + num corrected sequences + total number tokens + total tokens + total number tokens in \ uncorrected region\ + total tokens in uncorrected region + total number correct tokens before correction + num predicted correct + total number correct tokens after correction + num corrected correct + token accuracy before correction + token accuracy before correction + token accuracy after correction + token accuracy after correction + number tokens corrected propagation + num propagated incorrect2 correct + number tokens made incorrect propagation + num correct2 incorrect + token accuracy \ uncorrected region\ before propagation + uncorrected region accuracy before correction + token accuracy \ uncorrected region\ after propagataion + uncorrected region accuracy after correction a listing where two sequences have matching values get matches sequence s1 sequence s2 s1 size != s2 size illegal argument s1 size + s1 size + s2 size + s2 size ret = s1 size i=0 i < s1 size i++ ret i = s1 get i equals s2 get i ret 