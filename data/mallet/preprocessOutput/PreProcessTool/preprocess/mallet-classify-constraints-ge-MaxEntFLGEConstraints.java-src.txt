2011 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e classify constraints ge gnu trove t list gnu trove t list gnu trove t hash map bit set types feature vector types instance types instance list expectation constraint use generalized expectation g e author gregory druck max ent f l g e constraints max ent g e constraint use values num labels num features maps between input feature indices and constraints t hash map< max ent f l g e constraint> constraints cache set constrained features that fire at last feature vector in preprocess call t list index cache t list value cache max ent f l g e constraints num features num labels use values num features = num features num labels = num labels use values = use values constraints = t hash map< max ent f l g e constraint> index cache = t list value cache = t list add constraint fi ex weight get composite constraint feature value feature vector input label value = 0 i = 0 i < index cache size i++ use values value += constraints get index cache get quick i get value label value cache get quick i value += constraints get index cache get quick i get value label value compute expectations feature vector input dist weight pre process input = 0 < num labels li++ p = weight dist i = 0 i < index cache size i++ use values constraints get index cache get quick i expectation += p value cache get quick i constraints get index cache get quick i expectation += p zero expectations fi constraints keys constraints get fi expectation = num labels bit set pre process instance list data count ii = 0 fi feature vector fv bit set bit set = bit set data size instance instance data weight = data get instance weight instance fv = feature vector instance get data loc = 0 loc < fv num locations loc++ fi = fv index at location loc constraints contains key fi use values constraints get fi count += weight fv value at location loc constraints get fi count += weight bit set set ii ii++ feature label regularization constraints contains key num features bit set set ii constraints get num features count += weight bit set pre process feature vector input index cache reset quick use values value cache reset quick fi cache constrained input features loc = 0 loc < input num locations loc++ fi = input index at location loc constraints contains key fi index cache add fi use values value cache add input value at location loc feature label regularization constraints contains key num features index cache add num features use values value cache add 1 max ent f l g e constraint target expectation count weight max ent f l g e constraint target weight target = target weight = weight expectation = count = 0 get target target get expectation expectation get count count get weight weight get value 