2003 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e inference hash set set iterator collection io output stream io i o io input stream types factor types factor graph types table factor types variable variable elimination algorithm inference in graphical models created mon sep 22 17 34 00 2003 author <a href= mailto casutton > charles sutton< a> $ variable elimination v 1 1 2007 10 22 21 37 49 exp $ variable elimination inferencer factor eliminate collection all phi variable node hash set phi set = hash set collect potentials that include variable iterator j = all phi iterator j has next factor cpf = factor j next cpf var set empty || cpf contains var node phi set add cpf j remove table factor multiply all phi set bulk variable elimination algorithm marginal density variable q u e r y in undirected model m o d e l except that density un normalized normalization done in a separate function to make compute normalization factor easier factor unnormalized marginal factor graph model variable query here elimination order random note that using buckets would make more efficient well make a copy potentials hash set all phi = hash set iterator i = model factors iterator i has next factor factor = factor i next all phi add factor duplicate set nodes = model variables set eliminate each node in turn iterator i = nodes iterator i has next variable node = variable i next node == query eliminate query variable last! factor p f = eliminate all phi node extract marginalize over variables factor single p f p f var set size == 1 single p f = p f single p f = p f marginalize out node add it back to list potentials all phi add single p f now all potentials that are left should contain only query variable u n l e s s graph disconnected so just eliminate query var factor marginal = eliminate all phi query marginal contains var query marginal var set size == 1 marginal computes normalization constant a model compute normalization factor factor graph m what we ll get unnormalized marginal an arbitrary node then sum marginal to get normalization factor variable var = variable m variables set iterator next factor marginal = unnormalized marginal m var marginal sum factor graph mdl current inert all work done in lookup marginal compute marginals factor graph m mdl current = m factor lookup marginal variable var factor marginal = unnormalized marginal mdl current var marginal normalize marginal serialization serial u = 1 seralization incompatible changes are made to these classes then smarts can be added to these backward compatibility write output stream out i o out write read input stream in i o not found in read 