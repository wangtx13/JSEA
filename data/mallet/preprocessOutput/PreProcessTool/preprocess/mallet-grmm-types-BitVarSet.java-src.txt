2003 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e types io i o io input stream io output stream inference utils a clique that uses very little time and memory based on flyweight pattern owner supplies an alphabet vertices and a bit set and clique contains vertices in alphabet masked bit set author charles sutton $ bit var set v 1 1 2007 10 22 21 37 44 exp $ bit var set set var set universe universe bit set bitset creates a bit set clique given an alphabet variables and a bitset that says which variables in alphabet to include in clique neither copied but neither modified either universe bit mask that indicates which variables to include bit var set universe universe bit set universe = universe bitset = out vertex map + vertex map out bit set + bitset bit var set universe universe collection universe = universe bitset = bit set universe size iterator it = iterator it has next bitset set universe get index variable it next bit var set var set vs old vs old get 0 get universe vs old add o idx = universe get index variable o idx == 1 unsupported operation bitset set idx variable get idx i map idx = 0 i = 0 map idx = bitset next set bit 0 i<idx i++ map idx = bitset next set bit map idx+1 map idx == 1 index out bounds index +idx+ in bit set clique out +idx+ +map idx+ +vertex map lookup map idx universe get map idx variable to variable variable to variable 0 f i x m e cache not updated on changes to clique cached weight = 1 weight cached weight == 1 weight = 1 iterator it = iterator it has next variable var = variable it next weight = var get num outcomes cached weight = weight cached weight assignment iterator assignment iterator dense assignment iterator size bitset cardinality empty bitset empty contains o bitset get universe get index variable o iterator iterator next idx iterator next idx = bitset next set bit 0 has next next idx >= 0 next idx = next idx next idx = bitset next set bit idx + 1 universe get idx remove unsupported operation removal from bit set clique not permitted iterator iterator iterator hash bitset hash contains all collection bit var set contains all bit var set contains all efficient contains all bit set cliques contains all bit var set bsc universe == bsc universe i=bsc bitset next set bit 0 i>=0 i=bsc bitset next set bit i+1 !bitset get i var set intersection var set bit var set efficient bit var set bsc = bit var set bit set bit set = bit set bitset clone bit set and bsc bitset bit var set universe bit set utils intersection number variables in intersection between clique and other equivalent to <tt>intersection bsc size < tt> but more efficient bsc other clique to intersect intersection size bit var set bsc universe == bsc universe size = 0 i=bsc bitset next set bit 0 i>=0 i=bsc bitset next set bit i+1 bitset get i size++ size clear bitset clear has label get label to to foo = iterator it = iterator it has next variable var = variable it next foo = foo + + var foo = foo + foo set label s unsupported operation serialization garbage serial u = 1 u r r e n t s e r i a l v e r s i o n = 1 write output stream out i o out write out write u r r e n t s e r i a l v e r s i o n read input stream in i o not found in read = in read 