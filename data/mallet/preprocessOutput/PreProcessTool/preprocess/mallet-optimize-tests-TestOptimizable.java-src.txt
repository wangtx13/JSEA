2002 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e author andrew mc callum <a href= mailto >mccallum edu< a> optimize tests junit framework logging io random classify optimize line optimizer optimize optimizable pipe pipe iterator types contains testing subclasses maximizable and maximizable gradient especially useful are that verify consistency value and gradient functions an instance maximizable gradient test optimizable test logger logger = logger get logger test optimizable get name test optimizable name name num components = 1 sets number gradient components that will be checked negative all will be checked set num components n num components = n tests that set set can be retrieved get maxable instance a maximizable that should be tested its current will be overwritten test get set optimizable maxable out test maximizable test get set set all to unique values using set = maxable get num maxable get i = 0 i < length i++ i = i maxable set test to make sure those are there matrix ops set all 0 0 maxable get i = 0 i < length i++ i == i test value and gradient in direction optimizable gradient value maxable direction num = maxable get num num == direction length old = num = num normalized direction = direction clone arraycopy direction 0 normalized direction 0 num matrix ops abs normalize normalized direction value = maxable get value gradient from optimizable function analytic gradient = num maxable get maxable get old maxable get value gradient analytic gradient gradient calculate from slope value setting epsilon should make individual elements analytical gradient and empirical gradient equal simplifies comparison individual dimensions gradient and thus makes debugging easier direction gradient = matrix ops dot product analytic gradient normalized direction epsilon = 0 1 matrix ops abs norm analytic gradient tolerance = 0 00001 direction gradient was epsilon 5 out epsilon = +epsilon+ tolerance= +tolerance matrix ops plus equals normalized direction epsilon logger fine print maxable set eps value = maxable get value slope = eps value value epsilon out value= +value+ epsilon= +epsilon+ eps value= + eps value+ slope = +slope+ gradient= +direction gradient ! na n slope slope difference = math abs slope direction gradient logger info test maximizable + slope tolerance = +tolerance+ gradient slope = +direction gradient+ value+epsilon slope = +slope+ slope difference = +slope difference maxable set old math abs slope difference < tolerance slope difference +slope difference+ greater than tolerance +tolerance slope difference tests that value and gradient function are consistent at current computes both analytic gradient one given <tt>maxable get value gradient< tt> and empirical gradient which x are current and f function computed maxable <tt>f x + epsilon f x < tt> verifies that angle between empirical and analytic gradients are close to 0 #test value and gradient test value and gradient #test value and gradient random test value and gradient random illegal state angle above tolerance test value and gradient current optimizable gradient value maxable = maxable get num value = maxable get value gradient from maximizable function analytic gradient = maxable get num empirical gradient = maxable get num maxable get maxable get value gradient analytic gradient gradient calculate from slope value maxable get value gradient empirical gradient setting epsilon should make individual elements analytical gradient and empirical gradient equal simplifies comparison individual dimensions gradient and thus makes debugging easier cas however avoid huge epsilon norm analytic gradient close to 0 next line used to be norm = math max 0 1 matrix ops two norm analytic gradient but all components analytical gradient are very small squaring in two norm causes epsilon to be too large a k m norm = math max 0 1 matrix ops abs norm analytic gradient epsilon = 0 1 norm tolerance = epsilon 5 out epsilon = +epsilon+ tolerance= +tolerance sample parameter interval = 1 num components > 0 sample parameter interval = math max 1 length num components logger info will check every +sample parameter interval+ th component check each direction perturb it measure value and make sure it agrees gradient from maxable get value gradient i = 0 i < length i++ i = 0 uncomment line to debug one parameter at a time cas length >= sample parameter interval i % sample parameter interval != 0 = i i = + epsilon logger fine print maxable set eps value = maxable get value slope = eps value value epsilon out value= +value+ eps value= +eps value+ slope +i+ = +slope+ gradient = +analytic gradient i ! na n slope logger info test maximizable checking single index +i+ gradient slope = +analytic gradient i + value+epsilon slope = +slope+ slope difference = + slope analytic gradient i no negative below because gradient points in direction maximizing function empirical gradient i = slope i = normalize matrices to have same l2 length out analytic gradient two norm = + matrix ops two norm analytic gradient out empirical gradient two norm = + matrix ops two norm empirical gradient matrix ops times equals analytic gradient 1 0 matrix ops two norm analytic gradient matrix ops times equals empirical gradient 1 0 matrix ops two norm empirical gradient out n a n a e m p i = 0 i < analytic gradient length i++ out i+ +analytic gradient i + +empirical gradient i angle between two vectors in radians dot = matrix ops dot product analytic gradient empirical gradient maths almost equals dot 1 0 logger info test maximizable angle zero 0 0 angle = math acos dot logger info test maximizable angle = +angle math abs angle > tolerance illegal state gradient value mismatch angle= + angle + tol + tolerance na n angle illegal state gradient value angle na n! angle tests that get value and get value gradient are consistent tests consistency at <tt>params = 0< tt> and at <tt> params = 0 0001 grad f < tt> #test value and gradient current test value and gradient current illegal state test fails test value and gradient optimizable gradient value maxable = maxable get num matrix ops set all 0 0 maxable set test value and gradient current maxable matrix ops set all 0 0 delta = maxable get num maxable get value gradient delta logger info gradient two norm = + matrix ops two norm delta logger info max parameter change = + matrix ops infinity norm delta 0 001 matrix ops times equals delta 0 0001 matrix ops plus equals delta maxable set test value and gradient current maxable tests that get value and get value gradient are consistent at a random parameter setting #test value and gradient current test value and gradient current illegal state test fails test value and gradient random optimizable gradient value maxable random r params = maxable get num i = 0 i < params length i++ params i = r next r next params i = params i maxable set params test value and gradient current maxable maximizable 3x^2 5x + 2 simple poly optimizable gradient value params = 1 get 0 = params 0 get num 1 get parameter n params 0 set params 0 = 0 set parameter n d params n = d get value 3 params 0 params 0 5 params 0 + 2 get value gradient buffer buffer 0 = 3 params 0 5 wrong simple poly simple poly get value gradient buffer buffer 0 = 3 params 0 w r o n g missing 5 test test value and gradient simple poly maxable = simple poly test value and gradient maxable wrong simple poly bad maxable = wrong simple poly test value and gradient bad maxable fail wrong simply poly should fail test maxmiziable! e test suite test suite test optimizable set up junit textui test runner run suite 