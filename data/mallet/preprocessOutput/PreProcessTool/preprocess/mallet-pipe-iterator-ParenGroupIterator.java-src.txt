2003 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e pipe iterator io iterator types iterator that takes a reader breaks up input into top level parenthesized expressions example in input <tt> a a b f d e < tt> there are two top level expressions a a b and d e text that not within parentheses ignored created thu feb 26 13 45 43 2004 author <a href= mailto casutton > charles sutton< a> $ paren group iterator v 1 1 2007 10 22 21 37 49 exp $ paren group iterator iterator< instance> reader reader open close next group group idx paren group iterator reader input input paren group iterator reader input open paren close paren reader = buffered reader input open = open paren close = close paren next group = get next group get next group buffer buf = buffer depth = 1 eat up nonparen characters b b = reader read != open b == 1 buf append open b = reader read != 1 ch = b buf append ch ch == open depth++ ch == close depth depth == 0 i o e runtime e buf to pipe input iterate instance next instance carrier = instance next group parengroup + group idx++ next group = get next group carrier has next next group != remove illegal state iterator< instance> does not support remove 