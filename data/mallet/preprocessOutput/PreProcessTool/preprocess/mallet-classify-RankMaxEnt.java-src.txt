2002 m a l l e t m achine languag e ~mccallum 1 0 furtherinformation ` l i e n s e classify users culotta cluster classify base classify io i o io input stream io output stream pipe pipe types alphabet types dense vector types feature selection types feature vector types feature vector sequence types instance types instance list types label alphabet types label vector types matrix ops rank maximum entropy classifier classifier chooses among a set instances binary labels expects instance data to be a feature vector sequence and target to be a representation index best feature vector sequence note that instance target may be a labels to indicate a tie best instance author aron culotta <a href= mailto culotta >culotta edu< a> rank max ent max ent feature always feature highest index rank max ent pipe data pipe feature selection feature selection feature selection per feature selection data pipe feature selection per feature selection rank max ent pipe data pipe feature selection feature selection data pipe feature selection rank max ent pipe data pipe feature selection per feature selection data pipe per feature selection rank max ent pipe data pipe data pipe unnormalized scores corresponding to score an element instance list being top instance instance instance data field a link instance list scores has length = number instances in instance data which type instance list get unnormalized classification scores instance instance scores feature vector sequence fvs = feature vector sequence instance get data scores length == fvs size num features = instance get data alphabet size +1 instance number=0 instance number < fvs size instance number++ feature vector fv = feature vector fvs get instance number make sure feature vector s feature dictionary matches what we are expecting from our data pipe and thus our notion feature probabilities fv get alphabet == instance pipe get data alphabet include feature weights according to each label xxx correct ? we only calculate dot prod feature vector positive label weights xxx include multiple labels scores instance number = 0 num features + feature index + matrix ops row dot product num features 0 fv feature index per feature selection == ? feature selection per feature selection 0 get classification scores instance instance scores feature vector sequence fvs = feature vector sequence instance get data num features = instance get data alphabet size +1 num labels = fvs size scores length == fvs size instance number=0 instance number < fvs size instance number++ feature vector fv = feature vector fvs get instance number make sure feature vector s feature dictionary matches what we are expecting from our data pipe and thus our notion feature probabilities fv get alphabet == instance pipe get data alphabet include feature weights according to each label scores instance number = 0 num features + feature index + matrix ops row dot product num features 0 fv feature index per feature selection == ? feature selection per feature selection 0 move scores to a range where exp accurate and normalize max = matrix ops max scores sum = 0 = 0 < num labels li++ sum += scores = math exp scores max = 0 < num labels li++ scores = sum xxx na n ! na n scores used rank max ent trainer to calculate value when labeling contains ties does not include scores tied elements in normalization instance scores best labels indices instances ties 1st place get classification scores ties instance instance scores best labels get classification scores instance scores set all best label probs to 0 except first and renormalize i = 1 i < best labels length i++ scores best labels i = 0 0 sum = 0 0 = 0 < scores length li++ sum += scores = 0 < scores length li++ scores = sum classification classify instance instance feature vector sequence fvs = feature vector sequence instance get data num classes = fvs size scores = num classes get classification scores instance scores create and a classification classification instance create label vector get label alphabet scores constructs a label vector which a over indices positive instance label vector create label vector label alphabet label alphabet scores label alphabet growth stopped label alphabet start growth i=0 i < scores length i++ label alphabet lookup index value i all scores = label alphabet size i=0 i < label alphabet size i++ all scores i = 0 0 i=0 i < scores length i++ index = label alphabet lookup index value i all scores index = scores i label vector label alphabet all scores print alphabet dict = get alphabet label alphabet label dict = label alphabet get label alphabet num features = dict size + 1 num labels = label dict size include feature weights according to each label = 0 < num labels li++ out f e a t u r e s f o r l a s s +label dict lookup 0 out <default> +parameters feature index i = 0 i < feature index i++ name = dict lookup i weight = i out +name+ +weight s e r i a l i z a t i o n serial u = 1 u r r e n t s e r i a l v e r s i o n = 1 write output stream out i o out write out write u r r e n t s e r i a l v e r s i o n read input stream in i o not found in read = in read 