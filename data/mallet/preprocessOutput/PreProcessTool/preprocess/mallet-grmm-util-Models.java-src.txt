2003 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e inference inferencer inference junction tree inference junction tree inferencer types gnu trove t hash set utilities that useful things factor graphs created sep 22 2005 author < a h r e f= mailto casutton edu>casutton edu< a> $ models v 1 1 2007 10 22 21 37 58 exp $ models a factor graph same a given one except that all nodes in given assignment are clamped evidence mdl old model will not be modified assn evidence to add a factor graph factor graph add evidence factor graph mdl assignment assn add evidence mdl assn factor graph add evidence factor graph mdl assignment assn map to sliced map factor graph mdl = factor graph mdl num variables add sliced potentials mdl mdl assn to sliced map mdl undirected model add evidence undirected model mdl assignment assn undirected model mdl = undirected model mdl num variables add sliced potentials mdl mdl assn mdl add sliced potentials factor graph from mdl factor graph to mdl assignment assn map to sliced map set input vars = t hash set arrays list assn get vars set remaining vars = t hash set from mdl variables set remaining vars remove all input vars iterator it = from mdl factors iterator it has next factor ptl = factor it next set these vars = t hash set ptl var set these vars retain all remaining vars factor sliced ptl = ptl slice assn to mdl add factor sliced ptl to sliced map != to sliced map put ptl sliced ptl highest score assignment in a model according to a given inferencer mdl factor graph to use inf inferencer to use no need to call <tt>compute marginals< tt> first an assignment assignment best assignment factor graph mdl inferencer inf inf compute marginals mdl outcomes = mdl num variables i = 0 i < outcomes length i++ variable var = mdl get i best = inf lookup marginal var argmax outcomes i = best assignment mdl outcomes computes exact entropy a factor graph using junction tree algorithm model intractable then won t a number anytime soon entropy factor graph mdl junction tree inferencer inf = junction tree inferencer inf compute marginals mdl junction tree jt = inf lookup junction tree jt entropy computes k l divergence <tt> k l mdl1||mdl2 < tt> junction tree used to compute entropy <p> t o d o probably won t handle when jnuction tree m d l2 contains a clique that s not present in junction tree mdl1 so a bug mdl1 mdl2 k l mdl1||mdl2 k l factor graph mdl1 factor graph mdl2 junction tree inferencer inf1 = junction tree inferencer inf1 compute marginals mdl1 junction tree jt1 = inf1 lookup junction tree junction tree inferencer inf2 = junction tree inferencer inf2 compute marginals mdl2 junction tree jt2 = inf2 lookup junction tree entropy = jt1 entropy energy = 0 iterator it = jt2 cluster potentials iterator it has next factor marg2 = factor it next factor marg1 = inf1 lookup marginal marg2 var set assignment iterator assn it = marg2 assignment iterator assn it has next energy += marg1 value assn it marg2 log value assn it assn it advance iterator it = jt2 sepset potentials iterator it has next factor marg2 = factor it next factor marg1 = inf1 lookup marginal marg2 var set assignment iterator assn it = marg2 assignment iterator assn it has next energy = marg1 value assn it marg2 log value assn it assn it advance entropy energy remove constant factors factor graph sliced list factors = list sliced factors iterator it = factors iterator it has next factor factor = factor it next factor constant factor sliced divide factor 