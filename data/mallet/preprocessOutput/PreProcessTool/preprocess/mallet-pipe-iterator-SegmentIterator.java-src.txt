2002 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e author aron culotta <a href= mailto culotta >culotta edu< a> pipe iterator list iterator net u r i io pipe noop pipe pipe types iterates over link segment s extracted a link transducer some link instance list segment iterator iterator< instance> iterator sub iterator list segments n o t e! assumes that <code>segment start tags i < code> corresponds to <code>segment tags i < code> model model to segment input sequences ilist list instances to be segmented segment start tags tags indicating start a segment segment tags tags indicating continuation a segment segment iterator transducer model instance list ilist segment start tags segment tags set sub iterator model ilist segment start tags segment tags iterates over link segment s only one link instance segment iterator transducer model instance instance segment start tags segment tags instance list ilist = instance list noop instance get data alphabet instance get target alphabet ilist add instance set sub iterator model ilist segment start tags segment tags useful when no link transduce specified a list sequences specifies output ilist instance list containing sequence segment start tags tags indicating start a segment segment tags tags indicating continuation a segment predictions list link sequence s that are predicted output some link transducer segment iterator instance list ilist start tags in tags list predictions set sub iterator ilist start tags in tags predictions iterate over segments in one instance ilist instance list containing sequence segment start tags tags indicating start a segment segment tags tags indicating continuation a segment predictions list link sequence s that are predicted output some link transducer segment iterator instance instance start tags in tags sequence prediction instance list ilist = instance list noop instance get data alphabet instance get target alphabet ilist add instance list predictions = list predictions add prediction set sub iterator ilist start tags in tags predictions iterate over segments in one labeled sequence segment iterator sequence input sequence predicted sequence truth start tags in tags segments = list input size != truth size || predicted size != truth size illegal state sequence lengths not equal input + input size + + truth size + predicted + predicted size find predicted segments n=0 n < predicted size n++ s=0 s < start tags length s++ start tags s equals predicted get n found start tag j=n+1 j < predicted size in tags s equals predicted get j find end tag j++ segments add segment input predicted truth n j 1 start tags s in tags s sub iterator = segments iterator set sub iterator instance list ilist start tags in tags list predictions segments = list stores predicted <code> segment< code>s iterator iter = ilist iterator i=0 i < ilist size i++ instance instance = instance ilist get i sequence input = sequence instance get data sequence output = sequence instance get target sequence pred output = sequence predictions get i input size != output size || pred output size != output size illegal state sequence lengths not equal input + input size + + output size + predicted + pred output size find predicted segments n=0 n < pred output size n++ s=0 s < start tags length s++ start tags s equals pred output get n found start tag j=n+1 j < pred output size in tags s equals pred output get j find end tag j++ segments add segment input pred output output n j 1 start tags s in tags s sub iterator = segments iterator set sub iterator transducer model instance list ilist segment start tags segment tags segments = list stores predicted <code> segment< code>s iterator iter = ilist iterator iter has next instance instance = instance iter next sequence input = sequence instance get data sequence output = sequence instance get target sequence pred output = max lattice model input best output sequence input size != output size || pred output size != output size illegal state sequence lengths not equal input + input size + + output size + predicted + pred output size find predicted segments i=0 i < pred output size i++ s=0 s < segment start tags length s++ segment start tags s equals pred output get i found start tag j=i+1 j < pred output size segment tags s equals pred output get j find end tag j++ segments add segment input pred output output i j 1 segment start tags s segment tags s sub iterator = segments iterator pipe input iterator instance next segment next segment = segment sub iterator next instance next segment next segment get truth segment next segment segment sub iterator next has next sub iterator has next list to list segments remove illegal state iterator< instance> does not support remove 