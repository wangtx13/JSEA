2002 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e author andrew mc callum <a href= mailto >mccallum edu< a> list hash map iterator logging logger types alphabet types multinomial types sequence logger feature transducer transducer logger logger = logger get logger feature transducer get name these next two dictionaries may be same alphabet input alphabet alphabet output alphabet list< state> states = list< state> list< state> initial states = list< state> hash map< state> name2state = hash map< state> multinomial estimator initial state counts multinomial estimator state counts trainable = feature transducer alphabet input alphabet alphabet output alphabet input alphabet = input alphabet output alphabet = output alphabet xxx when should these be frozen? feature transducer alphabet dictionary dictionary dictionary feature transducer alphabet alphabet get input alphabet input alphabet alphabet get output alphabet output alphabet add state name initial weight weight inputs outputs weights destination names name2state get name != illegal argument state name ` +name+ already state s = state name states size initial weight weight inputs outputs weights destination names states add s initial weight < i m p o s s i b l e w e i g h t initial states add s name2state put name s set trainable add state name initial weight weight inputs outputs weights destination names add state name initial weight weight input alphabet lookup indices inputs output alphabet lookup indices outputs weights destination names num states states size transducer state get state index states get index iterator< state> initial state iterator initial states iterator trainable trainable set trainable f trainable = f f wipes away any previous counts we had it also potentially allocates an esimator a size number states has increased initial state counts = multinomial laplace estimator states size state counts = multinomial laplace estimator states size initial state counts = state counts = i = 0 i < num states i++ state get state i set trainable f reset trainable initial state counts reset state counts reset i = 0 i < num states i++ state get state i reset estimate initial state counts == || state counts == illegal state transducer not currently trainable multinomial initial state = initial state counts estimate multinomial state = state counts estimate i = 0 i < states size i++ state s = states get i s initial weight = initial state log probability i s weight = state log probability i s estimate note that a non inner so we have access to all feature transducer s instance variables state transducer state name index initial weight weight transition transitions gnu trove t hash map input2transitions multinomial estimator transition counts feature transducer transducer note that you cannot add transitions to a state once it created state name index initial weight weight inputs outputs weights destination names feature transducer transducer inputs length == outputs length inputs length == weights length inputs length == destination names length transducer = transducer name = name index = index initial weight = initial weight weight = weight transitions = transition inputs length input2transitions = gnu trove t hash map transition counts = i = 0 i < inputs length i++ constructor places transtion into input2transitions transitions i = transition inputs i outputs i weights i destination names i transitions i index = i transducer get transducer transducer get initial weight initial weight get weight weight set initial weight v initial weight = v set weight v weight = v set trainable f f transition counts = multinomial laplace estimator transitions length transition counts = temporarily here debugging multinomial estimator get transition estimator transition counts reset transition counts != transition counts reset get index index transducer transition iterator transition iterator sequence input input position sequence output output position input position < 0 || output position < 0 || output != unsupported operation not yet input == transition iterator transition iterator input input position transducer transition iterator transition iterator sequence input sequence input position input index = input alphabet lookup index input sequence get input position input index == 1 illegal argument input not in dictionary transition iterator input index transducer transition iterator transition iterator o input index = input alphabet lookup index o input index == 1 illegal argument input not in dictionary transition iterator input index transducer transition iterator transition iterator input transition iterator input transducer transition iterator transition iterator transition iterator get name name increment initial count count initial state counts == illegal state transducer not currently trainable initial state counts increment index count increment count count state counts == illegal state transducer not currently trainable state counts increment index count estimate transition counts == illegal state transducer not currently trainable multinomial transition = transition counts estimate i = 0 i < transitions length i++ transitions i weight = transition log probability i serial u = 1 suppress warnings serial transition iterator transducer transition iterator index >= 1 we are going through all feature state transitions index index 2 we are following chain feature transition next same input and transition already initialized to first transition index 3 we are following chain feature transition next same input and next transition should be found following chain index transition transition state source input iterate through all transitions independent input transition iterator state source out feature transition iterator over all source = source input = 1 index = 1 transition = transition iterator state source input out symbol transition iterator over +input source = source input = input index = 2 transition = transition source input2transitions get input has next index >= 1 out has next index + index index < source transitions length 1 index == 2 ? transition != transition next same input != transducer state next state index >= 1 transition = source transitions ++index index == 2 index = 3 transition = transition next same input transition get destination state get index index get input input alphabet lookup transition input get output output alphabet lookup transition output get weight transition weight transducer state get source state source transducer state get destination state transition get destination state increment count count logger info feature transducer increment count +count source transition counts increment transition index count note has a natural ordering that inconsistent equals transition input output weight index destination name state destination = transition next same input transition input output weight state source state destination name input = input output = output weight = weight next same input = transition source state input2transitions get input source state input2transitions put input index set caller constructor destination name = destination name state get destination state destination == destination = name2state get destination name destination != destination serial u = 1 