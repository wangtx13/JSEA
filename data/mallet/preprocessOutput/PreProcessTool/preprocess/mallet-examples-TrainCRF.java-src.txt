examples io regex zip pipe pipe iterator pipe tsf types train r f train r f training filename testing filename i o list< pipe> pipes = list< pipe> conjunctions = 2 conjunctions 0 = 1 conjunctions 1 = 1 pipes add simple tagger sentence2 token sequence pipes add offset conjunctions conjunctions pipes add features in window p r e v 1 1 pipes add token text suffix c1= 1 pipes add token text suffix c2= 2 pipes add token text suffix c3= 3 pipes add regex matches a p i t a l i z e d pattern compile ^\\p lu pipes add regex matches s t a r t s n u m b e r pattern compile ^ 0 9 pipes add regex matches h y p h e n a t e d pattern compile \\ pipes add regex matches d o l l a r s i g n pattern compile \\$ pipes add token first position f i r s t t o k e n pipes add token sequence2 feature vector sequence pipe pipe = serial pipes pipes instance list training instances = instance list pipe instance list testing instances = instance list pipe training instances add thru pipe line group iterator buffered reader input stream reader g z i p input stream input stream training filename pattern compile ^\\s $ testing instances add thru pipe line group iterator buffered reader input stream reader g z i p input stream input stream testing filename pattern compile ^\\s $ r f crf = r f pipe crf add states labels connected in training instances crf add states three quarter labels connected in training instances crf add start state r f trainer label likelihood trainer = r f trainer label likelihood crf trainer set gaussian prior variance 10 0 r f trainer stochastic gradient trainer = r f trainer stochastic gradient crf 1 0 r f trainer l1 label likelihood trainer = r f trainer l1 label likelihood crf 0 75 trainer add evaluator per accuracy evaluator training instances training trainer add evaluator per accuracy evaluator testing instances testing trainer add evaluator token accuracy evaluator testing instances testing trainer train training instances train r f trainer = train r f 0 1 