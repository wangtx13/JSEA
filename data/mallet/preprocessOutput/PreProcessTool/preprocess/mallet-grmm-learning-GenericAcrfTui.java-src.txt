2003 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e created aug 23 2005 author < a h r e f= mailto casutton edu>casutton edu< a> $ generic acrf tui v 1 1 2007 10 22 21 37 43 exp $ bsh eval io buffered reader io io reader io i o list arrays iterator linked list list logging logger regex pattern inference inferencer optimize optimizer pipe pipe iterator line group iterator pipe iterator pipe input iterator types instance list types instance generic acrf tui command option model = command option generic acrf tui model f i l e n a m e text describing model structure command option train = command option generic acrf tui training f i l e n a m e containing training data command option test = command option generic acrf tui testing f i l e n a m e containing testing data command option num labels option = command option generic acrf tui num labels i n t 1 supplied number labels on each line input + otherwise token must separate labels from features command option inferencer option = command option generic acrf tui inferencer s t r i n g t r p specification inferencer command option max inferencer option = command option generic acrf tui max inferencer s t r i n g t r p create max product specification inferencer command option eval option = command option generic acrf tui eval s t r i n g l o g evaluator to use grokking performed command option use piecewise training = command option generic acrf tui piecewise true|false whether to use piecewise training command option use pwpl training = command option generic acrf tui pwpl true|false whether to use pwpl training command option use pl training = command option generic acrf tui pl true|false whether to use besag pseudolikelihood command option cache unrolled graph = command option generic acrf tui cache graphs true|false whether to use memory intensive caching command option use token text = command option generic acrf tui use token text true|false set to first feature in every list should be considered text + current token used n l p specific debugging and analysis command option random seed option = command option generic acrf tui random seed i n t e g e r 0 random seed randomly selecting a proportion instance list training bsh interpreter interpreter = setup interpreter a r f trainer create trainer use piecewise training value piecewise a r f trainer use pwpl training value pwpl a r f trainer use pl training value pseudolikelihood a r f trainer acrf trainer i o eval process options generic acrf tui timing timing = timing generic acrf data2 token sequence base pipe !num labels option was invoked base pipe = generic acrf data2 token sequence base pipe = generic acrf data2 token sequence num labels option value base pipe set features include token use token text value base pipe set include token text use token text value pipe pipe = serial pipes pipe base pipe token sequence2 feature vector sequence iterator< instance> train source = line group iterator reader train value pattern compile ^\\s $ iterator< instance> test source test was invoked test source = line group iterator reader test value pattern compile ^\\s $ test source = instance list training = instance list pipe training add thru pipe train source instance list testing = instance list pipe testing add thru pipe test source a r f template tmpls = parse model model value a r f evaluator eval = create evaluator eval option value inferencer inf = create inferencer inferencer option value inferencer max inf = create inferencer max inferencer option value a r f acrf = a r f pipe tmpls acrf set inferencer inf acrf set viterbi inferencer max inf a r f trainer trainer = create trainer err a r f trainer = +trainer trainer train acrf training testing eval 9999 timing tick training utils write gzipped acrf ser gz acrf timing tick serializing err total time ms = + timing elapsed time bsh interpreter setup interpreter bsh interpreter interpreter = command option get interpreter interpreter eval base extract interpreter eval inference interpreter eval interpreter eval templates eval e runtime e interpreter a r f evaluator create evaluator spec eval spec index >= 0 assume it s and t screw it a r f evaluator interpreter eval spec linked list toks = linked list arrays list spec split \\s+ create evaluator toks a r f evaluator create evaluator linked list toks type = toks remove first type equals ignore s e g m e n t slice = parse toks remove first toks size % 2 != 0 runtime in eval +eval option value+ every start tag must have a num tags = toks size 2 start tags = num tags tags = num tags i = 0 i < num tags i++ start tags i = toks remove first tags i = toks remove first multi segmentation evaluator a r f start tags tags slice type equals ignore l o g acrf trainer log evaluator type equals ignore s e r i a l list evals = list !toks empty evals add create evaluator toks acrf serial evaluator evals runtime in eval +eval option value+ illegal evaluator +type inferencer create inferencer spec eval cmd spec index >= 0 assume it s and t screw it cmd = spec cmd = +spec+ whatever says to inf = interpreter eval cmd inf inferencer inferencer inf runtime t know what to inferencer +inf process options child command option list options = command option list command option 0 options add child options process options log options logger get logger a r f template parse model mdl i o eval buffered reader in = buffered reader reader mdl list tmpls = list line = in read line line != tmpl = interpreter eval line ! tmpl a r f template runtime in +mdl file+ line +in to + +tmpl+ not a template tmpls add tmpl line = in read line a r f template tmpls to a r f template 0 