2002 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e classify tui io logging reflect classify classify evaluate types classify documents run trials print statistics from a vector author andrew mc callum <a href= mailto >mccallum edu< a> vectors2 classify bsh interpreter interpreter = bsh interpreter logger logger = logger get logger vectors2 classify get name logger progress logger = progress message logger get logger vectors2 classify get name + pl list< string> classifier trainer strings = list< string> data options size = 3 report options size = 6 report options = data options size report options size essentially an mapping names to enums to ints report option data options = train test validation report options = accuracy f1 confusion raw precision recall train=0 test =1 validation=2 accuracy=0 f1=1 confusion=2 raw=3 precision=4 recall=5 command option spaced strings report = command option spaced strings vectors2 classify report train|test|validation accuracy|f1 label|precision label|recall label|confusion|raw train accuracy test accuracy test confusion test precision test recall test f1 post parsing command option list list raw formatting = siw argi=0 argi<this value length argi++ convert options like report train accuracy report test f1=label a to options first split argument at semicolon out argi + + value argi = value argi fields = split = data set = fields 0 report option = fields 1 report option = fields length >=3 report option = fields 2 out report option + report option find datasource test train validation found data source = i=0 i< report option data options length i++ data set equals report option data options i found data source = !found data source illegal argument unknown argument = + data set + in report + value argi find report option accuracy f1 confusion raw precision recall found report option = j=0 j< report option report options length j++ report option equals report option report options j found report option = !found report option illegal argument unknown argument = + report option + in report + value argi mark data set reportion option pair selected report options i j = command option trainer constructor = command option vectors2 classify trainer classifier trainer constructor naive bayes trainer constructor used to create a classifier trainer + no appears then \ \ will be prepended and \ trainer \ will be appended + you may use option mutiple times to compare multiple classifiers post parsing command option list list classifier trainer strings add value command option output = command option vectors2 classify output classifier f i l e n a m e classifier filename in which to write classifier after it has been trained command option pipe = command option vectors2 classify output pipe f i l e n a m e classifier pipe filename in which to write classifier s instance pipe after it has been trained command option input = command option vectors2 classify input f i l e n a m e text vectors filename from which to read list training instances use stdin command option training = command option vectors2 classify training f i l e n a m e text vectors read training set instance list from + specified input parameter ignored command option test = command option vectors2 classify testing f i l e n a m e text vectors read test set instance list to + option specified training parameter must be specified and + input parameter ignored command option validation = command option vectors2 classify validation f i l e n a m e text vectors read validation set instance list to + option specified training parameter must be specified and + input parameter ignored command option training proportion option = command option vectors2 classify training portion d e i m a l 1 0 fraction instances that should be used training command option validation proportion option = command option vectors2 classify validation portion d e i m a l 0 0 fraction instances that should be used validation command option unlabeled proportion option = command option vectors2 classify unlabeled portion d e i m a l 0 0 fraction training instances that should have their labels hidden + note that these are taken out training portion not allocated separately command option random seed option = command option vectors2 classify random seed i n t e g e r 0 random seed randomly selecting a proportion instance list training command option num trials option = command option vectors2 classify num trials i n t e g e r 1 number random train test splits to perform command option classifier evaluator option = command option vectors2 classify classifier evaluator o n s t r u t o r constructing a classifier evaluating command option print train accuracy option = command option vectors2 classify print train accuracy true|false after training run resulting classifier on instances in training + and print accuracy command option print test accuracy option = command option vectors2 classify print test accuracy true|false after training run resulting classifier on instances not in training + and print accuracy command option verbosity option = command option vectors2 classify verbosity i n t e g e r 1 level messages to print 0 silent 8 most verbose + levels 0 8 correspond to logger predefined levels + off severe warning info config fine finer finest all + value taken from logging properties + which currently defaults to i n f o level 3 command option no overwrite progress messages option = command option vectors2 classify no overwrite progress messages true|false suppress writing in place on terminal progess messages repetitive messages + which only latest generally interest command option cross validation = command option vectors2 classify cross validation i n t 0 number folds cross validation d e f a u l t=0 bsh eval io i o process command line options command option set summary vectors2 classify a tool training saving and printing diagnostics from a classifier on vectors command option process vectors2 classify handle trainer here now argument processing doesn t work !trainer constructor was invoked classifier trainer strings add naive bayes trainer !report was invoked report post parsing force postprocessing value verbosity = verbosity option value logger root logger = logger progress logger get root logger verbosity option was invoked root logger set level logger logging levels verbosity no overwrite progress messages option value == install special formatting progress messages find console handler on root logger change formatter to one that knows about progress messages handler handlers = root logger get handlers i = 0 i < handlers length i++ handlers i console handler handlers i set formatter progress message log formatter separate ilists = test was invoked || training was invoked || validation was invoked instance list ilist=null instance list test ilist=null instance list training ilist=null instance list validation ilist=null labels !separate ilists normal input specified read in instance list from stdin input filename ilist = instance list load input value labels = ilist get alphabets 1 size k =0 k < ilist get alphabets 1 size k++ labels k = ilist get alphabets 1 to k out debug labels length + labels length + labels +k+ +labels k user specified separate files testing and training sets training ilist = instance list load training value logger info training vectors loaded from + training value test was invoked test ilist = instance list load test value logger info testing vectors loaded from + test value !test ilist get pipe alphabets match training ilist get pipe runtime training ilist get pipe get data alphabet + + test ilist get pipe get data alphabet + + training ilist get pipe get target alphabet + + test ilist get pipe get target alphabet + + training and testing alphabets t match! validation was invoked validation ilist = instance list load validation value logger info validation vectors loaded from + validation value !validation ilist get pipe alphabets match training ilist get pipe runtime training ilist get pipe get data alphabet + + validation ilist get pipe get data alphabet + + training ilist get pipe get target alphabet + + validation ilist get pipe get target alphabet + + training and validation alphabets t match! validation ilist = instance list pipe noop labels = training ilist get alphabets 1 size k =0 k < training ilist get alphabets 1 size k++ labels k = training ilist get alphabets 1 to k out debug labels length + labels length + labels +k+ +labels k cross validation was invoked training proportion option was invoked logger warning both cross validation and training portion were invoked using cross validation + cross validation value + folds cross validation was invoked validation proportion option was invoked logger warning both cross validation and validation portion were invoked using cross validation + cross validation value + folds cross validation was invoked num trials option was invoked logger warning both cross validation and num trials were invoked using cross validation + cross validation value + folds num trials cross validation was invoked num trials = cross validation value num trials = num trials option value random r = random seed option was invoked ? random random seed option value random num trainers = classifier trainer strings size num labels = labels length train accuracy = num trainers num trials test accuracy = num trainers num trials validation accuracy = num trainers num trials train confusion matrix = num trainers num trials test confusion matrix = num trainers num trials validation confusion matrix = num trainers num trials train precision = num trainers num labels num trials test precision = num trainers num labels num trials validation precision = num trainers num labels num trials train recall = num trainers num labels num trials test recall = num trainers num labels num trials validation recall = num trainers num labels num trials train f1 = num trainers num labels num trials test f1 = num trainers num labels num trials validation f1 = num trainers num labels num trials t = training proportion option value v = validation proportion option value !separate ilists cross validation was invoked logger info cross validation folds = + cross validation value logger info training portion = + t logger info unlabeled training sub portion = +unlabeled proportion option value logger info validation portion = + v logger info testing portion = + 1 v t i=0 i<data options size i++ j=0 j<report options size j++ out print + report options i j out cross validation iterator cv iter cross validation was invoked cross validation value < 2 runtime at least two folds set cross validation are required cross validation cv iter = cross validation iterator ilist cross validation value r cv iter = trainer names = num trainers trial index = 0 trial index < num trials trial index++ out trial + trial index + instance list ilists bit set unlabeled indices = !separate ilists cross validation was invoked instance list cv split = cv iter next ilists = instance list 3 ilists 0 = cv split 0 ilists 1 = cv split 1 ilists 2 = cv split 0 clone empty ilists = ilist split r t 1 t v v ilists = instance list 3 ilists 0 = training ilist ilists 1 = test ilist ilists 2 = validation ilist unlabeled proportion option value > 0 unlabeled indices = randoms r next next bit set ilists 0 size unlabeled proportion option value info gain ig = info gain ilists 0 igl = math min 10 ig num locations i = 0 i < igl i++ out info gain +ig get at rank i + = +ig get value at rank i ig print feature selection selected features = feature selection ig 8000 ilists 0 set feature selection selected features odds ratio feature inducer orfi = odds ratio feature inducer ilists 0 orfi induce features ilists 0 out training +ilists 0 size + instances time = num trainers = 0 < num trainers c++ time = current time millis classifier trainer trainer = get trainer classifier trainer strings get trainer set validation instances ilists 2 out trial + trial index + training + trainer + +ilists 0 size + instances unlabeled proportion option value > 0 ilists 0 hide some labels unlabeled indices classifier classifier = trainer train ilists 0 unlabeled proportion option value > 0 ilists 0 unhide all labels out trial + trial index + training + trainer to + finished time = current time millis time trial train trial = trial classifier ilists 0 ilists 1 size > 0 trial test trial = trial classifier ilists 1 trial validation trial = trial classifier ilists 2 gdruck only perform evaluation requested in report options report options report option train report option confusion ilists 0 size >0 train confusion matrix trial index = confusion matrix train trial to report options report option test report option confusion ilists 1 size >0 test confusion matrix trial index = confusion matrix test trial to report options report option validation report option confusion ilists 2 size >0 validation confusion matrix trial index = confusion matrix validation trial to gdruck only perform evaluation requested in report options report options report option train report option accuracy train accuracy trial index = train trial get accuracy report options report option test report option accuracy test accuracy trial index = test trial get accuracy report options report option validation report option accuracy validation accuracy trial index = validation trial get accuracy gdruck only perform evaluation requested in report options report options report option train report option precision k =0 k < labels length k++ train precision k trial index = train trial get precision labels k report options report option test report option precision k =0 k < labels length k++ test precision k trial index = test trial get precision labels k report options report option validation report option precision k =0 k < labels length k++ validation precision k trial index = validation trial get precision labels k gdruck only perform evaluation requested in report options report options report option train report option recall k =0 k < labels length k++ train recall k trial index = train trial get recall labels k report options report option test report option recall k =0 k < labels length k++ test recall k trial index = test trial get recall labels k report options report option validation report option recall k =0 k < labels length k++ validation recall k trial index = validation trial get recall labels k gdruck only perform evaluation requested in report options report options report option train report option f1 k =0 k < labels length k++ train f1 k trial index = train trial get f1 labels k report options report option test report option f1 k =0 k < labels length k++ test f1 k trial index = test trial get f1 labels k report options report option validation report option f1 k =0 k < labels length k++ validation f1 k trial index = validation trial get f1 labels k output was invoked filename = output value num trainers > 1 filename = filename+trainer to num trials > 1 filename = filename+ trial +trial index output stream oos = output stream output stream filename oos write classifier oos close e e print stack trace illegal argument couldn t write classifier to filename + filename reporting raw output report options report option train report option raw out trial + trial index + trainer + trainer to out raw training data print trial classification train trial report options report option test report option raw out trial + trial index + trainer + trainer to out raw testing data print trial classification test trial report options report option validation report option raw out trial + trial index + trainer + trainer to out raw validation data print trial classification validation trial train report options report option train report option confusion out trial + trial index + trainer + trainer to + training data confusion matrix ilists 0 size >0 out train confusion matrix trial index report options report option train report option precision k =0 k < labels length k++ out trial + trial index + trainer + trainer to + training data precision + labels k + = + train trial get precision labels k report options report option train report option recall k =0 k < labels length k++ out trial + trial index + trainer + trainer to + training data recall + labels k + = + train trial get recall labels k report options report option train report option f1 k =0 k < labels length k++ out trial + trial index + trainer + trainer to + training data f1 + labels k + = + train trial get f1 labels k report options report option train report option accuracy out trial + trial index + trainer + trainer to + training data accuracy = + train accuracy trial index validation report options report option validation report option confusion out trial + trial index + trainer + trainer to + validation data confusion matrix ilists 2 size >0 out validation confusion matrix trial index report options report option validation report option precision k =0 k < labels length k++ out trial + trial index + trainer + trainer to + validation data precision + labels k + = + validation trial get precision labels k report options report option validation report option recall k =0 k < labels length k++ out trial + trial index + trainer + trainer to + validation data recall + labels k + = + validation trial get recall labels k report options report option validation report option f1 k =0 k < labels length k++ out trial + trial index + trainer + trainer to + validation data f1 + labels k + = + validation trial get f1 labels k report options report option validation report option accuracy out trial + trial index + trainer + trainer to + validation data accuracy = + validation accuracy trial index test report options report option test report option confusion out trial + trial index + trainer + trainer to + test data confusion matrix ilists 1 size >0 out test confusion matrix trial index report options report option test report option precision k =0 k < labels length k++ out trial + trial index + trainer + trainer to + test data precision + labels k + = + test trial get precision labels k report options report option test report option recall k =0 k < labels length k++ out trial + trial index + trainer + trainer to + test data recall + labels k + = + test trial get recall labels k report options report option test report option f1 k =0 k < labels length k++ out trial + trial index + trainer + trainer to + test data f1 + labels k + = + test trial get f1 labels k report options report option test report option accuracy out trial + trial index + trainer + trainer to + test data accuracy = + test accuracy trial index trial index == 0 trainer names = trainer to end each trainer end each trial reporting train|test|validation accuracy|f1|confusion|raw|precision|recall c=0 < num trainers c++ out +trainer names to report options report option train report option accuracy out summary train accuracy mean = + matrix ops mean train accuracy + stddev = + matrix ops stddev train accuracy + stderr = + matrix ops stderr train accuracy report options report option train report option precision k =0 k < labels length k++ out summary train precision +labels k + mean = + matrix ops mean train precision k + stddev = + matrix ops stddev train precision k + stderr = + matrix ops stderr train precision k report options report option train report option recall k =0 k < labels length k++ out summary train recall +labels k + mean = + matrix ops mean train recall k + stddev = + matrix ops stddev train recall k + stderr = + matrix ops stderr train recall k report options report option train report option f1 k =0 k < labels length k++ out summary train f1 +labels k + mean = + matrix ops mean train f1 k + stddev = + matrix ops stddev train f1 k + stderr = + matrix ops stderr train f1 k report options report option validation report option accuracy out summary validation accuracy mean = + matrix ops mean validation accuracy + stddev = + matrix ops stddev validation accuracy + stderr = + matrix ops stderr validation accuracy report options report option validation report option precision k =0 k < labels length k++ out summary validation precision +labels k + mean = + matrix ops mean validation precision k + stddev = + matrix ops stddev validation precision k + stderr = + matrix ops stderr validation precision k report options report option validation report option recall k =0 k < labels length k++ out summary validation recall +labels k + mean = + matrix ops mean validation recall k + stddev = + matrix ops stddev validation recall k + stderr = + matrix ops stderr validation recall k report options report option validation report option f1 k =0 k < labels length k++ out summary validation f1 +labels k + mean = + matrix ops mean validation f1 k + stddev = + matrix ops stddev validation f1 k + stderr = + matrix ops stderr validation f1 k report options report option test report option accuracy out summary test accuracy mean = + matrix ops mean test accuracy + stddev = + matrix ops stddev test accuracy + stderr = + matrix ops stderr test accuracy report options report option test report option precision k =0 k < labels length k++ out summary test precision +labels k + mean = + matrix ops mean test precision k + stddev = + matrix ops stddev test precision k + stderr = + matrix ops stderr test precision k report options report option test report option recall k =0 k < labels length k++ out summary test recall +labels k + mean = + matrix ops mean test recall k + stddev = + matrix ops stddev test recall k + stderr = + matrix ops stderr test recall k report options report option test report option f1 k =0 k < labels length k++ out summary test f1 +labels k + mean = + matrix ops mean test f1 k + stddev = + matrix ops stddev test f1 k + stderr = + matrix ops stderr test f1 k end each trainer print trial classification trial trial classification trial instance instance = get instance out print instance get name + + instance get target + labeling labeling = get labeling j = 0 j < labeling num locations j++ out print labeling get label at rank j to + + labeling get value at rank j + out create trainer interpreter eval bsh eval e illegal argument interpreter eval +e classifier trainer get trainer parse something like maxent gaussian prior variance=10 num iterations=20 first split argument at commas fields = split massage constructor name so that max ent max ent trainer max ent trainer all call max ent trainer constructor name = fields 0 trainer constructor name index != 1 contains pass it though trainer = create trainer constructor name ends trainer trainer = create trainer + constructor name + add parens they forgot trainer = create trainer +constructor name+ trainer make trainer name from classifier name find associated we just built = trainer get get find setters corresponding to parameter names i=1 i<fields length i++ name value pair = fields i split = parameter name = name value pair 0 parameter value = name value pair 1 todo check val present! parameter value parameter value = interpreter eval parameter value bsh eval e illegal argument interpreter eval on parameter + parameter name + +e found setter = j=0 j<methods length j++ out + j + name + j get name out set + character to upper parameter name at 0 + parameter name substring 1 set + character to upper parameter name at 0 + parameter name substring 1 equals j get name j get parameter types length == 1 out matched + j get name ptypes = j get parameter types out parameter types k=0 k<ptypes length k++ out + k + = + ptypes k get name parameter list = parameter value out argument types k=0 k<parameter list length k++ out + k + = + parameter list k get get name j trainer parameter list illegal access e out illegal access + e illegal argument access calling setter +e invocation target e out illegal target + e illegal argument target calling setter +e found setter = !found setter out parameter + parameter name + not found on trainer + constructor name out available + constructor name j=0 j<methods length j++ j get name starts set j get parameter types length == 1 out character to lower j get name at data options size + j get name substring report options size illegal argument no setter found parameter + parameter name trainer classifier trainer classifier trainer trainer 