2006 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e types randoms a factor over a continuous variable theta and binary variables <tt>var< tt> such that <tt>phi x|theta <tt> potts that fixed theta <tt>phi x < tt> = 1 all x are equal and <tt>exp^ theta < tt> otherwise $ binary unary factor v 1 1 2007 10 22 21 37 44 exp $ binary unary factor factor parameterized factor variable theta1 variable theta2 variable var binary variable binary unary factor variable var variable theta1 variable theta2 binary unary factor combine variables theta1 theta2 var theta1 = theta1 theta2 = theta2 var = var var get num outcomes != 2 illegal argument discrete variable +var+ in boltzmann unary must be binary !theta1 continuous illegal argument parameter +theta1+ in binary unary must be continuous !theta2 continuous illegal argument parameter +theta2+ in binary unary must be continuous var set combine variables variable theta1 variable theta2 variable var var set ret = hash var set ret add theta1 ret add theta2 ret add var ret factor extract max internal var set var set unsupported operation lookup value internal i unsupported operation factor marginalize internal var set vars to keep unsupported operation inefficient but will seldom be called value assignment iterator it assignment assn = it assignment factor tbl = slice alpha assn tbl value assn factor slice alpha assignment assn th1 = assn get theta1 th2 = assn get theta2 vals = th1 th2 table factor var vals factor normalize unsupported operation assignment sample randoms r unsupported operation log value assignment iterator it math log value it factor slice assignment assn factor alph slice = slice alpha assn recursively slice in assn includes some xs alph slice slice assn dump to buffer buf = buffer buf append binary unary var= buf append var buf append theta1= buf append theta1 buf append theta2= buf append theta2 buf append buf to sum grad log factor q variable assignment assn factor q xs = q marginalize var assignment assn == theta1 assn = assignment var 0 == theta2 assn = assignment var 1 illegal argument attempt to take gradient +this+ wrt +param+ but factor does not depend on that variable q xs value assn factor duplicate binary unary factor var theta1 theta2 almost equals factor p epsilon equals p na n equals o == o o == || get != o get binary unary factor that = binary unary factor o theta1 != ? !theta1 equals that theta1 that theta1 != theta2 != ? !theta2 equals that theta2 that theta2 != var != ? !var equals that var that var != hash result result = theta1 != ? theta1 hash 0 result = 29 result + theta2 != ? theta2 hash 0 result = 29 result + var != ? var hash 0 result 