2002 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e author andrew mc callum <a href= mailto >mccallum edu< a> types logging list arrays regex io types logger feature conjunction serializable logger logger = logger get logger feature conjunction get name conjunction = negation = ! pattern conjunction pattern = pattern compile conjunction name alphabet dictionary features negations here means feature must be present index = 1 1 conjunction isn t yet alphabet negations i insist that feature has non zero value insist that it has zero value note does not check to make sure that it hasn t already been added negations then assume all negations i are feature conjunction name alphabet dictionary features negations check sorted copy features copy negations negations == || features length == negations length dictionary = dictionary copy features features = features length arraycopy features 0 features 0 features length features = features copy negations negations != negations = negations length arraycopy negations 0 negations 0 negations length negations = negations check sorted i = features length 1 i >= 0 i swapped = j = 0 j < i j++ features i 1 > features i tmpf = features i features i = features i 1 features i 1 = tmpf negations != tmpb = negations i negations i = negations i 1 negations i 1 = tmpb swapped = features i 1 == features i illegal argument same feature cannot occur twice !swapped name != name = name buffer sb = buffer i = 0 i < features length i++ negations != negations i == sb append negation i > 0 sb append conjunction sb append dictionary lookup features i to shouldn t sb to be saved in name here? akm 1 08 feature conjunction name alphabet dictionary features negations check sorted name dictionary features negations check sorted feature conjunction name alphabet dictionary features negations name dictionary features negations valid conjunction features i = 1 i < features length i++ features i 1 >= features i always in alphabet index order xxx one doesn t check duplicates among sub constituents in conjunction next does get name alphabet dictionary features negations negations != i = 0 i < negations length i++ negations i unsupported operation doesn t yet check sub duplicates negations get name dictionary features split apart any feature i that itself a conjunction feature feature indices = get feature indices dictionary dictionary lookup xxx add here to sorting make sure features area sorted i = 1 i < features length i++ features i 1 >= features i illegal argument feature index not sorted or contains duplicate buffer sb = buffer i = 0 i < features length i++ i > 0 sb append conjunction negations != negations i sb append negation sb append dictionary lookup features i to sb to always in alphabet index order get name alphabet dictionary features split apart any feature i that itself a conjunction feature i = 0 i < features length i++ feature indices = get feature indices dictionary dictionary lookup features i feature indices length > 1 length = features length 1+feature indices length features = length n = 0 j = 0 j < i j++ features n++ = features j j = 0 j < feature indices length j++ features n++ = feature indices j j = i+1 j < features length j++ features n++ = features j arrays sort features get name dictionary features xxx add here to sorting make sure features area sorted and remove any duplicates i = 1 i < features length i++ features i 1 == features i remove duplicate and again features = features length 1 n = 0 j = 0 j < i j++ features n++ = features j j = i+1 j < features length j++ features n++ = features j get name dictionary features features i 1 > features i illegal argument feature indices not sorted buffer sb = buffer i = 0 i < features length i++ i > 0 sb append conjunction sb append dictionary lookup features i to sb to features overlap alphabet dictionary feature1 feature2 feature1 == feature2 fis1 = get feature indices dictionary dictionary lookup feature1 fis2 = get feature indices dictionary dictionary lookup feature2 i = 0 j = 0 i < fis1 length i++ i >= fis1 length 2 || fis1 i < fis1 i+1 j >= fis2 length 2 || fis2 j < fis2 j+1 fis2 j < fis1 i j < fis2 length 1 j++ fis1 i == fis2 j always in alphabet index order get name alphabet dictionary feature1 feature2 feature1 < feature2 get name dictionary feature1 feature2 get name dictionary feature2 feature1 feature1 != feature2 string1 = dictionary lookup feature1 to string2 = dictionary lookup feature2 to feature1 < feature2 string1 + conjunction + string2 string2 + conjunction + string1 get feature indices alphabet dictionary feature conjunction name feature names = conjunction pattern split feature conjunction name ret = feature names length i = 0 i < feature names length i++ !feature names i starts negation ret i = dictionary lookup index feature names i logger fine i + th feature +feature names i + in +feature conjunction name ret i != 1 couldn t find index + i + th feature +feature names i + in +feature conjunction name arrays sort ret ret feature conjunction alphabet dictionary features negations get name dictionary features negations dictionary features negations length ret = length i = 0 i < length i++ ret i = ret feature conjunction alphabet dictionary features get name dictionary features dictionary features satisfied feature vector fv fv get alphabet != dictionary illegal argument vocabularies not match fvsize = fv num locations fvl = 0 fcl = 0 fcl < features length fcl++ fcli = features fcl fvl < fvsize fv index at location fvl < fcli fvl++ fvl < fvsize fv index at location fvl == fcli fv value at location fvl != 0 fcli th feature feature conjunction present in feature vector negations != negations fcl == but feature was negated in feature conjunction so not satisfied negations == || negations fcl == fcli th feature feature conjunction not present in feature vector and feature was unnegated in feature conjunction so not satisfied get index index add to augmentable feature vector fv value feature selection fs xxx could be simplified special a feature conjunction only one conjunct satisfied fv index = fv get alphabet lookup index name make sure that feature selected fs != fs add index index >= 0 fv value index > 0 t add features that are already there index != 1 fv add index value add to augmentable feature vector fv value add to fv value add to augmentable feature vector fv add to fv 1 0 serialization serial u = 1 u r r e n t s e r i a l v e r s i o n = 0 n u l l i n t e g e r = 1 write output stream out i o out write u r r e n t s e r i a l v e r s i o n out write name out write dictionary features == out write n u l l i n t e g e r out write features length i = 0 i < features length i++ out write features i negations == out write n u l l i n t e g e r out write negations length i = 0 i < negations length i++ out write negations i out write index read input stream in i o not found = in read name = in read dictionary = alphabet in read size = in read size == n u l l i n t e g e r features = features = size i = 0 i < size i++ features i = in read size = in read size == n u l l i n t e g e r negations = negations = size i = 0 i < size i++ negations i = in read index = in read list serializable list conjunctions list conjunctions = list size conjunctions size feature conjunction get i feature conjunction conjunctions get i add feature conjunction fc conjunctions size > 0 fc dictionary != feature conjunction conjunctions get 0 dictionary illegal argument alphabet does not match conjunctions add fc add to augmentable feature vector fv value feature selection fs xxx make more efficient i = 0 i < conjunctions size i++ feature conjunction conjunctions get i add to fv value fs add to augmentable feature vector fv value add to fv value serial u = 1 u r r e n t s e r i a l v e r s i o n = 0 n u l l i n t e g e r = 1 write output stream out i o out write u r r e n t s e r i a l v e r s i o n conjunctions == out write n u l l i n t e g e r out write conjunctions size i = 0 i < conjunctions size i++ out write conjunctions get i read input stream in i o not found = in read size = in read size == n u l l i n t e g e r conjunctions = conjunctions = list i = 0 i < size i++ conjunctions add feature conjunction in read 