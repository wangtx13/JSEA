2003 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e io list zip g z i p input stream zip g z i p output stream contains utilities manipulating files created thu nov 20 15 14 16 2003 author <a href= mailto casutton > charles sutton< a> $ utils v 1 1 2007 10 22 21 37 40 exp $ utils utils all serializes an to a masking out annoying exceptions any i o exceptions are caught and printed to standard consider using link #write gzipped io io serializable instead that will compress serialized and it ll still be reaoable link #read f to write to obj to serialize #write gzipped io io serializable write f serializable obj output stream oos = output stream output stream f oos write obj oos close i o e err writing + f + + e reads a serialized which may or may not be zipped guesses from name whether to decompress or not f to read data from a deserialized read f fname = f get name fname ends gz read gzipped f read unzipped f reads a serialized from a you probably want to use link #read instead because that will automatically guess from extension whether compressed and call necessary f to read from #read read unzipped f input stream ois = input stream input stream f obj = ois read ois close obj i o e runtime e not found e runtime e reads every line from a given text f input containing each line in <code>f< code> read f i o buffered reader in = buffered reader reader f list list = list line line = in read line != list add line list to 0 creates a making sure that its name unique will be created <tt>new dir prefix+i+extension < tt> where i an chosen such that does not dir directory to use prefix prefix name before uniquifying extension suffix name after uniquifying unique dir prefix extension i o f = i = 0 was created = !was created dir != f = dir prefix+i+extension f = prefix+i+extension was created = f create i++ f writes a serialized obj to a given compressing it using gzip f to write to obj to serialize write gzipped f serializable obj output stream oos = output stream buffered output stream g z i p output stream output stream f oos write obj oos close i o e err writing + f + + e reads a serialized from a that has been compressed using gzip you probably want to use link #read instead because it will automatically guess from extension whether compressed and call necessary f compressed to read from #read read gzipped f input stream ois = input stream buffered input stream g z i p input stream input stream f obj = ois read ois close obj i o e runtime e not found e runtime e utils 