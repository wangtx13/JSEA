2002 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e takes a list directory names arguments each directory should contain all text files each performs a random train test split trains a classifier and outputs accuracy on testing and training sets author andrew mc callum <a href= mailto >mccallum edu< a> classify examples io classify pipe pipe iterator types document classifier create each arguments directories = length i = 0 i < length i++ directories i = i create pipeline that will take input data = target = classname and turn them into data = feature vector target = label pipe instance pipe = serial pipes pipe target2 label target > label input2 sequence data > containing contents subsequence subsequence s k i p h e a d e r remove use net or email header sequence2 token sequence data > token sequence token sequence lowercase token sequence words lowercased token sequence remove stopwords remove stopwords from sequence token sequence2 feature sequence replace each token a feature index feature sequence2 feature vector collapse word order into a feature vector print input and target create an empty list training instances instance list ilist = instance list instance pipe add all files in directories to list instances instance that goes into beginning instance pipe will have a in data slot and a from in target slot ilist add thru pipe iterator directories iterator s t a r t i n g d i r e t o r i e s make a test train split ilists 0 will be training ilists 1 will be testing instance list ilists = ilist split 5 5 create a classifier trainer and use it to create a classifier classifier trainer naive bayes trainer = naive bayes trainer classifier classifier = naive bayes trainer train ilists 0 out training accuracy + classifier get accuracy ilists 0 out testing accuracy + classifier get accuracy ilists 1 