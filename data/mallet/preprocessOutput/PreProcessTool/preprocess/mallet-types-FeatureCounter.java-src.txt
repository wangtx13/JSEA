types efficient compact incremental counting features in an alphabet feature counter alphabet alphabet gnu trove t hash map feature counts feature counter alphabet alphabet alphabet = alphabet feature counts = gnu trove t hash map increment entry feature counts adjust or put value alphabet lookup index entry 1 1 increment entry incr feature counts adjust or put value alphabet lookup index entry incr incr increment feature index feature index < 0 || feature index > alphabet size illegal argument feature index +feature index+ out range feature counts adjust or put value feature index 1 1 increment feature index incr feature index < 0 || feature index > alphabet size illegal argument feature index +feature index+ out range feature counts adjust or put value feature index incr incr get feature index feature index < 0 || feature index > alphabet size illegal argument feature index +feature index+ out range feature counts get feature index unlike increment does not add entry to alphabet it not there already get entry fi = alphabet lookup index entry fi == 1 0 feature counts get fi put feature index value feature index < 0 || feature index > alphabet size illegal argument feature index +feature index+ out range feature counts put feature index value put entry value feature counts put alphabet lookup index entry value feature vector to feature vector indices = feature counts keys values = indices length i = 0 i < indices length i++ values i = feature counts get indices i feature vector alphabet indices values ranked feature vector to ranked feature vector indices = feature counts keys values = indices length i = 0 i < indices length i++ values i = feature counts get indices i ranked feature vector alphabet indices values 