2003 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e extract created aug 23 2005 author < a h r e f= mailto casutton edu>casutton edu< a> $ acrf extractor tui v 1 1 2007 10 22 21 38 02 exp $ bsh eval io buffered reader io io reader io i o list arrays iterator linked list list logging logger regex pattern extract extraction extract extraction evaluator inference inferencer pipe pipe iterator list iterator pipe iterator line group iterator pipe iterator pipe input iterator types instance types instance list acrf extractor tui logger logger = logger get logger acrf extractor tui get name command option output prefix = command option acrf extractor tui output prefix f i l e n a m e directory to write saved model to command option model = command option acrf extractor tui model f i l e n a m e text describing model structure command option train = command option acrf extractor tui training f i l e n a m e containing training data command option test = command option acrf extractor tui testing f i l e n a m e containing testing data command option num labels option = command option acrf extractor tui num labels i n t 1 supplied number labels on each line input + otherwise token must separate labels from features command option trainer option = command option acrf extractor tui trainer s t r i n g a r f extractor trainer specification trainer type command option inferencer option = command option acrf extractor tui inferencer s t r i n g loopy b p specification inferencer command option max inferencer option = command option acrf extractor tui max inferencer s t r i n g loopy b p create max product specification inferencer command option eval option = command option acrf extractor tui eval s t r i n g l o g evaluator to use grokking performed command option extraction eval option = command option acrf extractor tui extraction eval s t r i n g per document f1 evaluator to use grokking performed command option checkpoint iterations = command option acrf extractor tui checkpoint i n t 1 save a copy after every iterations command option cache unrolled graph = command option acrf extractor tui cache graphs true|false whether to use memory intensive caching command option per template train = command option acrf extractor tui per template train true|false whether to pretrain templates before joint training command option ptt iterations = command option acrf extractor tui per template iterations i n t e g e r 100 how many training iterations each step per template training command option random seed option = command option acrf extractor tui random seed i n t e g e r 0 random seed randomly selecting a proportion instance list training command option use token text = command option acrf extractor tui use token text true|false first feature in list assumed to be token identity and treated specially command option labels at end = command option acrf extractor tui labels at end i n t then label at end each line rather than beginning command option training list = command option acrf extractor tui training list true|false training option gives list files to read training command option data dir = command option acrf extractor tui data dir f i l e n a m e training list base directory in which training files located bsh interpreter interpreter = setup interpreter i o eval process options acrf extractor tui timing timing = timing generic acrf data2 token sequence base pipe !num labels option was invoked base pipe = generic acrf data2 token sequence base pipe = generic acrf data2 token sequence num labels option value !use token text value base pipe set features include token base pipe set include token text base pipe set labels at end labels at end value pipe tok pipe = serial pipes pipe training list value ? input2 sequence pipe noop base pipe iterator< instance> train source = construct iterator train value data dir value training list value iterator< instance> test source test was invoked test source = construct iterator test value data dir value training list value test source = a r f template tmpls = parse model model value a r f extractor trainer trainer = create trainer trainer option value a r f evaluator eval = create evaluator eval option value extraction evaluator extraction eval = create extraction evaluator extraction eval option value inferencer inf = create inferencer inferencer option value inferencer max inf = create inferencer max inferencer option value trainer set pipes tok pipe token sequence2 feature vector sequence set data source train source test source set evaluator eval set templates tmpls set inferencer inf set viterbi inferencer max inf set checkpoint directory output prefix value set num checkpoint iterations checkpoint iterations value set cache unrolled graphs cache unrolled graph value set use per template train per template train value set per template iterations ptt iterations value logger info starting training a r f extractor extor = trainer train extractor timing tick training utils write gzipped output prefix value extor ser gz extor timing tick serializing instance list testing = trainer get testing data testing != eval test extor get acrf testing results extraction eval != testing != extraction extraction = extor extract testing extraction eval evaluate extraction timing tick evaluting out total time ms = + timing elapsed time bsh interpreter setup interpreter bsh interpreter interpreter = command option get interpreter interpreter eval base extract interpreter eval inference interpreter eval interpreter eval templates interpreter eval extract eval e runtime e interpreter iterator< instance> construct iterator train data dir list i o list list iterator train data dir line group iterator reader train pattern compile ^\\s $ a r f evaluator create evaluator spec eval spec index >= 0 assume it s and t screw it a r f evaluator interpreter eval spec linked list toks = linked list arrays list spec split \\s+ create evaluator toks extraction evaluator create extraction evaluator spec eval spec index >= 0 assume it s and t screw it extraction evaluator interpreter eval spec spec = +spec+ evaluator extraction evaluator interpreter eval spec a r f evaluator create evaluator linked list toks type = toks remove first type equals ignore s e g m e n t slice = parse toks remove first toks size % 2 != 0 runtime in eval +eval option value+ every start tag must have a num tags = toks size 2 start tags = num tags tags = num tags i = 0 i < num tags i++ start tags i = toks remove first tags i = toks remove first multi segmentation evaluator a r f start tags tags slice type equals ignore l o g acrf trainer log evaluator type equals ignore s e r i a l list evals = list !toks empty evals add create evaluator toks acrf serial evaluator evals runtime in eval +eval option value+ illegal evaluator +type a r f extractor trainer create trainer spec eval cmd spec index >= 0 assume it s and t screw it cmd = spec spec ends trainer cmd = +spec+ cmd = +spec+ trainer whatever says to trainer = interpreter eval cmd trainer a r f extractor trainer a r f extractor trainer trainer trainer acrf trainer a r f extractor trainer set training a r f trainer trainer runtime t know what to trainer +trainer inferencer create inferencer spec eval cmd spec index >= 0 assume it s and t screw it cmd = spec cmd = +spec+ whatever says to inf = interpreter eval cmd inf inferencer inferencer inf runtime t know what to inferencer +inf process options child command option list options = command option list command option 0 options add child options process options log options logger get logger a r f template parse model mdl i o eval buffered reader in = buffered reader reader mdl list tmpls = list line = in read line line != tmpl = interpreter eval line ! tmpl a r f template runtime in +mdl file+ line +in to + +tmpl+ not a template tmpls add tmpl line = in read line a r f template tmpls to a r f template 0 