2002 m a l l e t m achine languag e ~mccallum 1 0 further ` l i e n s e confidence vector collections comparator types confidence evaluator d e f a u l t n u m b i n s = 20 vector confidences n bins num correct confidence evaluator vector confidences n bins confidences = confidences n bins = n bins num correct = get num correct entities sort confidences score collections sort confidences confidence comparator confidence evaluator vector confidences confidences d e f a u l t n u m b i n s confidence evaluator segment segments sorted confidences = vector i=0 i < segments length i++ confidences add entity confidence segments i get confidence segments i correct segments i get input segments i get start segments i get end !sorted collections sort confidences confidence comparator n bins = d e f a u l t n u m b i n s num correct = get num correct entities confidence evaluator instance confidence instances sorted confidences = vector i=0 i < instances length i++ sequence input = sequence instances i get instance get data confidences add entity confidence instances i get confidence instances i correct input 0 input size 1 !sorted collections sort confidences confidence comparator n bins = d e f a u l t n u m b i n s num correct = get num correct entities confidence evaluator piped instance confidence instances sorted confidences = vector i=0 i < instances length i++ confidences add entity confidence instances i get confidence instances i correct 0 1 !sorted collections sort confidences confidence comparator n bins = d e f a u l t n u m b i n s num correct = get num correct entities correlation when one variable x binary r = bar x1 bar x0 sqrt p 1 p sx where bar x1 = mean x when y 1 bar x0 = mean x when y 0 sx = standard deviation x p = proportion values where y=1 point biserial correlation here y = incorrect = 0 correct = 1 x = confidence x0bar = get average incorrect confidence x1bar = get average correct confidence p = num correct size sx = get confidence standard deviation x1bar x0bar math sqrt p 1 p sx i r average precision measure analogous to ranking correct documents confidence score get average precision nc = 0 ni = 0 total precision = 0 0 i=confidences size 1 i >= 0 i entity confidence = entity confidence confidences get i correct nc++ total precision += nc nc + ni ni++ total precision nc comparison rank segments badly possible all incorrect before correct get worst average precision ni = confidences size num correct total precision = 0 0 nc=1 nc <= num correct nc++ total precision += nc nc + ni total precision num correct get confidence sum sum = 0 0 i = 0 i < size i++ sum += entity confidence confidences get i confidence sum get confidence mean get confidence sum size standard deviation confidence scores get confidence standard deviation mean = get confidence mean sum squared difference = 0 0 i = 0 i < size i++ conf = entity confidence confidences get i confidence sum squared difference += conf mean conf mean math sqrt sum squared difference size calculate pearson s r corellation between confidence and correct where 1 = correct and 1 = incorrect correlation x sum = 0 x sum squares = 0 y sum = 0 y sum squares = 0 xy sum = 0 product x and y i = 0 i < size i++ value = entity confidence confidences get i correct ? 1 0 1 0 x sum += value x sum squares += value value conf = entity confidence confidences get i confidence y sum += conf y sum squares += conf conf xy sum += value conf x variance = x sum squares x sum x sum size y variance = y sum squares y sum y sum size cross variance = xy sum x sum y sum size cross variance math sqrt x variance y variance get accuracy at coverage each bin values get accuracy coverage values values = n bins step = 100 n bins i = 0 i < values length i++ values i = accuracy at coverage step i+1 100 0 values accuracy coverage values to buf = vals = get accuracy coverage values step = 100 n bins i=0 i < vals length i++ buf += step i+1 100 0 + + vals i + buf get accuracy at recall each bin values total total number segments 2 d where values i 0 coverage and values i 1 accuracy at position i get accuracy recall values total values = n bins 2 step = 100 n bins i = 0 i < n bins i++ values i = 2 coverage = step i+1 100 0 values i 1 = accuracy at coverage coverage num correct = num correct at coverage coverage values i 0 = num correct total values accuracy recall values to total buf = vals = get accuracy recall values total i=0 i < n bins i++ buf += vals i 0 + + vals i 1 + buf accuracy at coverage cov cov <= 1 cov > 0 num points = math round size cov num correct at coverage cov num points num correct at coverage cov cov <= 1 cov > 0 num accuracies to sum value cov num points = math round size cov num correct = 0 i = 0 i < num points i++ entity confidence confidences get size i 1 correct num correct++ num correct get average accuracy num correct = 0 total area= 0 0 i=confidences size 1 i>=0 i entity confidence confidences get i correct num correct++ total area += num correct confidences size i total area confidences size num correct num correct number entities correctly extracted get num correct entities sum = 0 i = 0 i < confidences size i++ entity confidence ec = entity confidence confidences get i ec correct sum++ sum average confidence score incorrect entities get average incorrect confidence sum = 0 0 i = 0 i < confidences size i++ entity confidence ec = entity confidence confidences get i !ec correct sum += ec confidence sum size num correct average confidence score incorrect entities get average correct confidence sum = 0 0 i = 0 i < confidences size i++ entity confidence ec = entity confidence confidences get i ec correct sum += ec confidence sum num correct size confidences size to buffer to = buffer i = 0 i < size i++ to append entity confidence confidences get i to + to to a simple to store a confidence score and whether or not labeling correct entity confidence confidence correct entity entity confidence conf corr text confidence = conf correct = corr entity = text entity confidence conf corr sequence input start end confidence = conf correct = corr buffer buff = buffer input != j = start j <= end j++ feature vector fv = feature vector input get j k = 0 k < fv num locations k++ feature name = fv get alphabet lookup fv index at location k to feature name starts w= feature name index == 1 buff append feature name substring feature name index = +1 + entity = buff to confidence confidence correct correct to buffer to = buffer to append entity + + confidence + + correct ? correct incorrect + to to confidence comparator comparator compare a b x = entity confidence a confidence y = entity confidence b confidence difference = x y to = 0 difference > 0 to = 1 difference < 0 to = 1 to 