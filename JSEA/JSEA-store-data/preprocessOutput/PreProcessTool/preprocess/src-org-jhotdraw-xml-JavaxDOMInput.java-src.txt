# dom input 2 1 2006 07 08 copyright c 1996 2006 by the original author of jhotdraw and all it contributor jhotdraw org all right reserve software is the confidential and proprietary information of jhotdraw org confidential information you shall not disclose such confidential information and shall use it only in accordance with the term of the license agreement you enter into with jhotdraw org org jhotdraw xml xml parser xml transform xml transform dom xml transform stream org w3c dom io dom input author wern randelshof 2 1 2006 07 08 support which t have an 2 0 2006 06 10 support and add 1 0 february 17 2004 create dom input dom input map is use to unmarshall reference to to the xml dom a key in map is a represent a marshal reference a value in map is an unmarshall hash map idobject hash map the document use input document document the current node use input node current the factory use to create from xml tag name dom factory factory dom input dom factory factory input stream in i o factory factory transformer t transformer factory instance transformer dom result result dom result t transform stream source in result document document result get node current document transformer e i o i o e get message init cause e dom input dom factory factory reader in i o factory factory transformer t transformer factory instance transformer dom result result dom result t transform stream source in result document document result get node current document transformer e i o i o e get message init cause e the tag name of the current element get tag name element current get tag name get an attribute of the current element of the dom document get attribute name value value element current get attribute name value length 0 ? value value get the text of the current element of the dom document get text get text get the text of the current element of the dom document get text value current get child node get length 0 value builder buf builder get text current buf buf to get text node n builder buf n get node value buf append n get node value node list child n get child node i 0 i child get length i++ get text child item i buf get an attribute of the current element of the dom document and of all parent dom element list get inherit attribute name link list value link list node node current node value element node get attribute name value add first value node node get parent node value get an attribute of the current element of the dom document get attribute name value value element current get attribute name value length 0 ? value decode value value get an attribute of the current element of the dom document get attribute name value value element current get attribute name value length 0 ? value parse value get an attribute of the current element of the dom document get attribute name value value element current get attribute name value length 0 ? value value of value value the number of child element of the current element get element count count 0 node list list current get child node i 0 i list get length i++ node node list item i node element count++ count the number of child element with the specify tag name of the current element get element count tag name count 0 node list list current get child node i 0 i list get length i++ node node list item i node element element node get tag name equal tag name count++ count open the element with the specify index and make it the current node open element index count 0 node list list current get child node len list get length i 0 i len i++ node node list item i node element count++ index current node open the last element with the specify name and make it the current node open element tag name count 0 node list list current get child node len list get length i 0 i len i++ node node list item i node element element node get tag name equal tag name current node illegal argument element not found +tag name open the element with the specify name and index and make it the current node open element tag name index count 0 node list list current get child node len list get length i 0 i len i++ node node list item i node element element node get tag name equal tag name count++ index current node illegal argument no such child +tag name+ +index+ close the current element of the dom document the parent of the current element become the current element illegal argument the provide tag name doe not match the tag name of the element close element element current get tag name equal tag name illegal argument attempt to close wrong element +tag name + + element current get tag name current current get parent node read an from the current element read i o read 0 read an from the current element read index i o open element index o tag name get tag name tag name equal o tag name equal o get text tag name equal o decode get text tag name equal o decode get text tag name equal o parse get text tag name equal o parse get text tag name equal o value of get text tag name equal color o color get attribute rgba 0xff tag name equal a get element count i 0 i a length i++ a i read i value o a tag name equal a get element count i 0 i a length i++ a i read i value o a tag name equal a get element count i 0 i a length i++ a i read i value o a tag name equal font o font get attribute name dialog get attribute style 0 get attribute size 0 tag name equal o factory create get attribute type get text ref get attribute ref get attribute ref keep track of which have an o factory create get tag name idobject contain key o idobject get o factory create get tag name idobject put o ref o dom storable dom storable o read close element o 