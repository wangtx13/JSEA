std xml parser nano xml $ revision 1 5 $ $ date 2002 03 24 11 37 00 $ $ name r e l e a s e 2 2 1 $ is part of nano xml 2 copyright c 2000 2002 marc de scheemaeck all right reserve software is provide a is without any express or imply warranty in no event will the author be hold liable any damage arise from the use of software permission is grant to anyone to use software any purpose include commercial application and to alter it and redistribute it freely subject to the following restriction 1 the origin of software must not be misrepresent you must not claim that you write the original software you use software in a product an acknowledgment in the product documentation would be appreciate but is not require 2 alter source version must be plainly mark a such and must not be misrepresent a being the original software 3 notice may not be remove or alter from any source distribution net n3 nanoxml io i o io reader io reader enumeration property vector std xml parser is the core parser of nano xml author marc de scheemaeck $ name r e l e a s e 2 2 1 $ $ revision 1 5 $ std xml parser i xml parser the builder which create the logical structure of the xml data i xml builder builder the reader from which the parser retrieve it data i xml reader reader the entity resolv i xml entity resolv entity resolv the validator that will process entity reference and validate the xml data i xml validator validator create a parser std xml parser builder validator reader entity resolv xml entity resolv clean up the when it s destroy finalize throwable builder reader entity resolv validator finalize set the builder which create the logical structure of the xml data builder the non builder set builder i xml builder builder builder builder the builder which create the logical structure of the xml data the builder i xml builder get builder builder set the validator that validate the xml data validator the non validator set validator i xml validator validator validator validator the validator that validate the xml data the validator i xml validator get validator validator set the entity resolv resolv the non resolv set resolv i xml entity resolv resolv entity resolv resolv the entity resolv the non resolv i xml entity resolv get resolv entity resolv set the reader from which the parser retrieve it data reader the reader set reader i xml reader reader reader reader the reader from which the parser retrieve it data the reader i xml reader get reader reader pars the data and let the builder create the logical data structure the logical structure build by the builder net n3 nanoxml xml an occur reading or parse the data parse xml builder start building reader get reader get line nr scan data builder get result xml e e e xml xml e init cause e xml e scan the xml data element someth go wrong scan data reader at e o f builder get result str xml read reader ch str at 0 ch xml process entity str reader entity resolv ch scan some tag t allow c d a t a no namespace property \r skip whitespace xml invalid input reader get reader get line nr ` + ch + 0x + to hex ch + scan an xml tag allow c d a t a c d a t a section are allow at point namespace the namespace u r i or namespace list of define namespace someth go wrong scan some tag allow c d a t a namespace property namespace str xml read reader ch str at 0 ch xml unexpect entity reader get reader get line nr str ch ? process p i process special tag allow c d a t a reader unread ch process element namespace namespace process a processing instruction someth go wrong process p i xml skip whitespace reader target xml scan identifier reader xml skip whitespace reader reader reader p i reader reader target equal ignore xml builder processing instruction target reader reader close process a tag that start with a bang lt allow c d a t a c d a t a section are allow at point someth go wrong process special tag allow c d a t a str xml read reader ch str at 0 ch xml unexpect entity reader get reader get line nr str ch allow c d a t a process c d a t a xml unexpect c d a t a reader get reader get line nr d process doc type xml skip comment reader process a c d a t a section someth go wrong process c d a t a xml check literal reader c d a t a xml expect input reader get reader get line nr c d a t a validator p c data add reader get reader get line nr reader reader c d a t a reader reader builder add p c data reader reader get reader get line nr reader close process a document type declaration an occur reading or parse the data process doc type xml check literal reader o c t y p e xml expect input reader get reader get line nr d o c t y p e xml skip whitespace reader buffer buffer root element xml scan identifier reader xml skip whitespace reader ch reader read ch p xml scan reader xml skip whitespace reader ch reader read ch s xml scan reader xml skip whitespace reader ch reader read ch validator parse d t d to reader entity resolv xml skip whitespace reader ch reader read ch xml expect input reader get reader get line nr ` b e g i n p a t c h w randelshof t read d t d reader reader reader open stream to reader start stream reader reader set reader set to validator parse d t d to reader entity resolv e n d p a t c h w randelshof t read d t d process a regular element namespace the namespace u r i or namespace list of define namespace someth go wrong process element namespace property namespace full name xml scan identifier reader name full name xml skip whitespace reader prefix colon index name index of colon index 0 prefix name substring 0 colon index name name substring colon index + 1 vector attr name vector vector attr value vector vector attr type vector validator element start full name reader get reader get line nr ch ch reader read ch || ch reader unread ch process attribute attr name attr value attr type xml skip whitespace reader property extra attribute property validator element attribute process full name extra attribute reader get reader get line nr enumeration enm extra attribute key enm ha more element key enm next element value extra attribute get property key attr name add element key attr value add element value attr type add element c d a t a i 0 i attr name size i++ key attr name element at i value attr value element at i type attr type element at i key equal xmln namespace value key start with xmln namespace put key substring 6 value prefix builder start element name prefix namespace reader get reader get line nr builder start element name prefix namespace get property prefix reader get reader get line nr i 0 i attr name size i++ key attr name element at i key start with xmln value attr value element at i type attr type element at i colon index key index of colon index 0 att prefix key substring 0 colon index key key substring colon index + 1 builder add attribute key att prefix namespace get property att prefix value type builder add attribute key value type prefix builder element attribute process name prefix namespace builder element attribute process name prefix namespace get property prefix ch reader read xml expect input reader get reader get line nr ` validator element end name reader get reader get line nr prefix builder end element name prefix namespace builder end element name prefix namespace get property prefix buffer buffer buffer 16 buffer set length 0 str xml skip whitespace reader buffer str xml read reader str at 0 str at 1 # xml process entity str reader entity resolv str at 0 str xml read reader \0 str at 0 xml skip whitespace reader str xml scan identifier reader str equal full name xml wrong closing tag reader get reader get line nr name str xml skip whitespace reader reader read xml closing tag not empty reader get reader get line nr validator element end full name reader get reader get line nr prefix builder end element name prefix namespace builder end element name prefix namespace get property prefix ^ reader unread str at 0 scan some tag c d a t a allow namespace property namespace clone ^ str at 0 ch xml process literal str buffer append ch reader unread str at 0 validator p c data add reader get reader get line nr reader r content reader reader entity resolv buffer to builder add p c data r reader get reader get line nr r close process an attribute of an element attr name contain the name of the attribute attr value contain the value of the attribute attr type contain the type of the attribute someth go wrong process attribute vector attr name vector attr value vector attr type key xml scan identifier reader xml skip whitespace reader xml read reader equal xml expect input reader get reader get line nr ` xml skip whitespace reader value xml scan reader entity resolv attr name add element key attr value add element value attr type add element c d a t a validator attribute add key value reader get reader get line nr 