non validator nano xml $ revision 1 4 $ $ date 2002 02 03 21 19 38 $ $ name r e l e a s e 2 2 1 $ is part of nano xml 2 copyright c 2000 2002 marc de scheemaeck all right reserve software is provide a is without any express or imply warranty in no event will the author be hold liable any damage arise from the use of software permission is grant to anyone to use software any purpose include commercial application and to alter it and redistribute it freely subject to the following restriction 1 the origin of software must not be misrepresent you must not claim that you write the original software you use software in a product an acknowledgment in the product documentation would be appreciate but is not require 2 alter source version must be plainly mark a such and must not be misrepresent a being the original software 3 notice may not be remove or alter from any source distribution net n3 nanoxml io reader io i o io reader enumeration hashtable property stack non validator is a concrete of i xml validator which process the d t d and handle entity definition it doe not any validation itself author marc de scheemaeck $ name r e l e a s e 2 2 1 $ $ revision 1 4 $ non validator i xml validator the parameter entity resolv i xml entity resolv parameter entity resolv contain the value attribute the different element type hashtable attribute value the stack of element to be process stack current element create the validator non validator attribute value hashtable current element stack parameter entity resolv xml entity resolv clean up the when it s destroy finalize throwable parameter entity resolv attribute value clear attribute value current element clear current element finalize set the parameter entity resolv resolv the entity resolv set parameter entity resolv i xml entity resolv resolv parameter entity resolv resolv the parameter entity resolv the entity resolv i xml entity resolv get parameter entity resolv parameter entity resolv pars the d t d the validator is responsible reading the full d t d the which may be reader the reader to read the d t d from entity resolv the entity resolv external the d t d is external someth go wrong parse d t d i xml reader reader i xml entity resolv entity resolv external xml skip whitespace reader orig level reader get stream level str xml read reader % ch str at 0 ch % xml process entity str reader parameter entity resolv ch process element reader entity resolv ch end internal d t d xml invalid input reader get reader get line nr str ch reader read external reader get stream level orig level reader unread ch end external d t d ch || ch || ch || ch \r reader unread ch process an element in the d t d reader the reader to read data from entity resolv the entity resolv someth go wrong process element i xml reader reader i xml entity resolv entity resolv str xml read reader % ch str at 0 ch xml skip tag reader str xml read reader % ch str at 0 ch xml skip comment reader process conditional section reader entity resolv e process entity reader entity resolv a process att list reader entity resolv xml skip tag reader process a conditional section reader the reader to read data from entity resolv the entity resolv someth go wrong process conditional section i xml reader reader i xml entity resolv entity resolv xml skip whitespace reader str xml read reader % ch str at 0 ch i xml skip tag reader str xml read reader % ch str at 0 ch g process ignore section reader entity resolv n xml skip tag reader xml check literal reader c l u d e xml skip tag reader xml skip whitespace reader str xml read reader % ch str at 0 ch xml skip tag reader reader subread c d a t a reader reader buffer buf buffer 1024 ch2 subread read ch2 0 buf append ch2 subread close reader start stream reader buf to process an ignore section reader the reader to read data from entity resolv the entity resolv someth go wrong process ignore section i xml reader reader i xml entity resolv entity resolv xml check literal reader n o r e xml skip tag reader xml skip whitespace reader str xml read reader % ch str at 0 ch xml skip tag reader reader subread c d a t a reader reader subread close process an a t t l i s t element reader the reader to read data from entity resolv the entity resolv someth go wrong process att list i xml reader reader i xml entity resolv entity resolv xml check literal reader t t l i s t xml skip tag reader xml skip whitespace reader str xml read reader % ch str at 0 ch % xml process entity str reader parameter entity resolv str xml read reader % ch str at 0 reader unread ch element name xml scan identifier reader xml skip whitespace reader str xml read reader % ch str at 0 ch % xml process entity str reader parameter entity resolv str xml read reader % ch str at 0 property prop property ch reader unread ch att name xml scan identifier reader xml skip whitespace reader str xml read reader % ch str at 0 ch % xml process entity str reader parameter entity resolv str xml read reader % ch str at 0 ch ch str xml read reader % ch str at 0 ch % xml process entity str reader parameter entity resolv str xml read reader % ch str at 0 reader unread ch xml scan identifier reader xml skip whitespace reader str xml read reader % ch str at 0 ch % xml process entity str reader parameter entity resolv str xml read reader % ch str at 0 ch # str xml scan identifier reader xml skip whitespace reader str equal f i x e d xml skip whitespace reader str xml read reader % ch str at 0 ch % xml process entity str reader parameter entity resolv str xml read reader % ch str at 0 reader unread ch value xml scan reader % parameter entity resolv prop put att name value xml skip whitespace reader str xml read reader % ch str at 0 ch % xml process entity str reader parameter entity resolv str xml read reader % ch str at 0 prop is empty attribute value put element name prop process an e n t i t y element reader the reader to read data from entity resolv the entity resolv someth go wrong process entity i xml reader reader i xml entity resolv entity resolv xml check literal reader n t i t y xml skip tag reader xml skip whitespace reader ch xml read reader \0 ch % xml skip whitespace reader entity resolv parameter entity resolv reader unread ch key xml scan identifier reader xml skip whitespace reader ch xml read reader % ch p xml check literal reader u b l i c xml skip tag reader xml skip whitespace reader xml scan reader % parameter entity resolv xml skip whitespace reader xml scan reader % parameter entity resolv xml skip whitespace reader xml read reader % s xml check literal reader y s t e m xml skip tag reader xml skip whitespace reader xml scan reader % parameter entity resolv xml skip whitespace reader xml read reader % \ reader unread ch value xml scan reader % parameter entity resolv entity resolv add internal entity key value xml skip whitespace reader xml read reader % xml skip tag reader entity resolv add external entity key indicate that an element ha be start name the name of the element the of the xml data of the element line nr the line number in the xml data of the element element start name line nr property attrib property attribute value get name attrib attrib property attrib property attrib clone current element push attrib indicate that the current element ha end name the name of the element the of the xml data of the element line nr the line number in the xml data of the element element end name line nr nothing to is call when the attribute of an xml element have be process there are attribute with a value which have not be specify yet they have to be put into i extra attribute i name the name of the element extra attribute where to put extra attribute the of the xml data of the element line nr the line number in the xml data of the element element attribute process name property extra attribute line nr property prop property current element pop enumeration enm prop key enm ha more element key enm next element extra attribute put key prop get key indicate that an attribute ha be add to the current element key the name of the attribute value the value of the attribute the of the xml data of the element line nr the line number in the xml data of the element attribute add key value line nr property prop property current element peek prop contain key key prop remove key indicate that a # p c d a t a element ha be encounter the of the xml data of the element line nr the line number in the xml data of the element p c data add line nr nothing to 