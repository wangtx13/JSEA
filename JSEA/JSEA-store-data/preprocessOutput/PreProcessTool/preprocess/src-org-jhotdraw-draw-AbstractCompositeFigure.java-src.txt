# composite figure 2 2 2006 07 08 copyright c 1996 2006 by the original author of jhotdraw and all it contributor jhotdraw org all right reserve software is the confidential and proprietary information of jhotdraw org confidential information you shall not disclose such confidential information and shall use it only in accordance with the term of the license agreement you enter into with jhotdraw org org jhotdraw draw io i o org jhotdraw org jhotdraw geom event undo org jhotdraw geom org jhotdraw xml dom input org jhotdraw xml dom output a figure that is compose of several child a composite figure doesn t define any layout behavior it is up to subclasser to arrange the contain child author wern randelshof 2 2 2006 07 08 minor change 2 1 2006 03 15 fire undoable edit on attribute change 2 0 1 2006 02 06 fix concurrent modification in remove notify 2 0 2006 01 14 change to support precision coordinate 1 0 2003 12 01 derive from jhotdraw 5 4b1 composite figure figure composite figure the child that figure is compose of see #add see #remove child link list figure child link list figure cache draw bound rectangle2 d draw bound cache layout bound rectangle2 d bound a layout determine how the composite figure should be lay out graphically layout layout handle figure change in the child child handler child handler child handler child handler figure listener undoable edit listener composite figure owner child handler composite figure owner owner owner figure request remove figure event e owner remove e get figure figure remove figure event evt owner remove evt get figure figure change figure event e owner is change owner will change owner fire figure change e owner change figure add figure event e figure attribute change figure event e figure area invalidate figure event e owner is change owner fire area invalidate e get invalidate area undoable edit happen undoable edit event e owner fire undoable edit happen e get edit create a instance composite figure collection handle create handle detail level detail level 0 create handle 0 link list handle handle link list handle figure child child handle add all child create handle detail level 1 handle link list handle handle link list handle handle add figure figure add get child count figure add index figure figure will change basic add index figure get drawing figure add notify get drawing change add all collection figure figure will change figure f figure basic add get child count f get drawing f add notify get drawing change basic add figure figure basic add get child count figure basic add index figure figure child add index figure figure add figure listener child handler figure add undoable edit listener child handler basic add all collection figure figure figure f figure basic add get child count f add notify drawing drawing add notify drawing figure child child child add notify drawing remove notify drawing drawing copy child collection to avoid concurrent modification figure child link list figure child child remove notify drawing remove notify drawing remove figure figure index child index of figure index 1 will change basic remove child index get drawing figure remove notify get drawing change figure remove child index will change figure remove basic remove child index get drawing remove remove notify get drawing change remove basic remove figure figure index child index of figure index 1 basic remove child index figure basic remove child index figure figure child remove index figure remove figure listener child handler figure remove undoable edit listener child handler figure remove all child see #add remove all child will change child size 0 figure f basic remove child child size 1 get drawing f add notify get drawing change basic remove all child child size 0 figure f basic remove child child size 1 send a figure to the back of the composite figure figure that is part of composite figure send to back figure figure child remove figure child add 0 figure figure invalidate send a figure to the front of the drawing figure that is part of the drawing send to front figure figure child remove figure child add figure figure invalidate transform the figure basic transform affine transform tx figure f child f basic transform tx invalidate bound basic set bound point2 d anchor point2 d rectangle2 d old bound get bound rectangle2 d bound rectangle2 d math min anchor x x math min anchor y y math ab anchor x x math ab anchor y y sx bound width old bound width sy bound height old bound height affine transform tx affine transform tx translate old bound x old bound y is na n sx is na n sy sx 1d || sy 1d sx 0 0001 sy 0 0001 basic transform tx tx set to identity tx scale sx sy basic transform tx tx set to identity tx translate bound x bound y basic transform tx undoable edit happen undoable edit event e fire undoable edit happen e get edit list figure get child collection unmodifiable list child get child count child size figure get child index child get index an iterator to iterate in z order front to back over the child list figure get child front to back child ? link list figure reverse list figure child set attribute attribute key name value will change figure child child child set attribute name value change basic set attribute attribute key name value figure child child child basic set attribute name value get attribute attribute key name contain point2 d p get draw bound contain p figure child get child front to back child is visible child contain p figure find figure inside point2 d p get draw bound contain p figure found figure child get child front to back child is visible found child find figure inside p found found figure find child point2 d p get bound contain p figure found figure child get child front to back child is visible child contain p child find child index point2 d p figure child find child p child ? 1 child index of child get a layout which encapsulate a layout algorithm figure typically a layout access the child component of figure and arrange their graphical presentation layout strategy use by figure layout get layout layout a layout algorithm is use to define how the child component should be lay out in relation to each other the task layout the child component presentation is delegate to a layout which can be plug in at runtime layout get layout rectangle2 d bound get bound point2 d p point2 d bound x bound y rectangle2 d r get layout layout p p basic set bound point2 d r x r y point2 d r x + r width r y + r height invalidate bound set a layout which encapsulate a layout algorithm figure typically a layout access the child component of figure and arrange their graphical presentation it is a good idea to set the layout in the initialize so it can be recreate a graphical composite figure is read and restore from a storable input stream layout encapsulation of a layout algorithm set layout layout layout layout layout dimension2 d get prefer size layout rectangle2 d r layout calculate layout get start point get end point dimension2 d r width r height get prefer size rectangle2 d get figure draw bound draw bound figure child get child front to back child is visible rectangle2 d child bound child get draw bound child bound is empty draw bound draw bound child bound draw bound add child bound draw bound ? rectangle2 d 0 0 1 1 rectangle2 d draw bound clone rectangle2 d get bound bound figure child get child front to back child is visible bound bound child get bound bound add child get bound bound ? rectangle2 d 0 0 1 1 rectangle2 d bound clone draw figure graphics2 d g figure child child child is visible child draw g is connector visible draw connector g draw connector graphics2 d g composite figure clone composite figure that composite figure clone that child handler child handler that that child link list figure figure child child figure that child figure child clone that child add that child that child add figure listener that child handler that child add undoable edit listener that child handler that invalidate bound bound draw bound collection figure get decomposition link list figure list link list figure list add list add all get child list read dom input in i o in open element child i 0 i in get element count i++ add figure in read i in close element write dom output out i o out open element child figure child get child out write child out close element map attribute key get attribute hash map attribute key restore to geometry link list list link list geometry index 0 geom list get child index restore to geom index++ invalidate bound get restore data link list list link list figure child child list add child get restore data list will change will change get change depth 1 figure child child child will change change get change depth 1 figure child child child change change invalidate invalidate invalidate bound validate validate layout invalidate bound remove attribute attribute key key nothing ha attribute attribute key key 