# dom output 2 1 2006 08 26 copyright c 1996 2006 by the original author of jhotdraw and all it contributor jhotdraw org all right reserve software is the confidential and proprietary information of jhotdraw org confidential information you shall not disclose such confidential information and shall use it only in accordance with the term of the license agreement you enter into with jhotdraw org org jhotdraw xml xml parser xml transform xml transform dom xml transform stream org w3c dom io dom output author wern randelshof 2 1 2006 08 26 set doctype add 2 0 2006 06 10 support prototype add support and add 1 2 2006 03 20 add support value 1 1 2006 01 18 remove 0 at the end of and number 1 0 february 17 2004 create dom output dom output the doctype of the xml document doctype map is use to marshall reference to to the xml dom a key in map is a a value in map is represent a marshal reference to that hash map objectid map is use to cache prototype hash map prototype the document use output document document the current node use output node current the factory use to create dom factory factory create a instance dom output dom factory factory i o factory factory objectid hash map document document builder factory instance document builder document current document parser configuration e i o i o e get message init cause e write the content of the dom output into the specify output stream save output stream out i o doctype output stream writer w output stream writer out u t f8 w write d o c t y p e w write doctype w write w flush transformer t transformer factory instance transformer t transform dom source document stream result out transformer e i o i o e get message init cause e write the content of the dom output into the specify output stream save writer out i o doctype out write d o c t y p e out write doctype out write transformer t transformer factory instance transformer t transform dom source document stream result out transformer e i o i o e get message init cause e put a element into the dom document the element is add a a child to the current element in the dom document then it become the current element the element must be close using close element open element tag name element element document create element tag name current append child element current element close the current element of the dom document the parent of the current element become the current element illegal argument the provide tag name doe not match the tag name of the element close element element current get name equal tag name illegal argument attempt to close wrong element +tag name + + element current get name current current get parent node add a comment to the current element of the dom document add comment comment current append child document create comment comment add a text to current element of the dom document note multiple consecutive text will be merge add text text current append child document create text node text add an attribute to current element of the dom document add attribute name value value element current set attribute name value add an attribute to current element of the dom document add attribute name value element current set attribute name to value add an attribute to current element of the dom document add attribute name value element current set attribute name to value add an attribute to current element of the dom document add attribute name value remove the awkard 0 at the end of each number str to value str end with 0 str str substring 0 str length 2 element current set attribute name str add an attribute to current element of the dom document add attribute name value remove the awkard 0 at the end of each number str to value str end with 0 str str substring 0 str length 2 element current set attribute name str write o i o o open element close element o dom storable write storable dom storable o o open element add text o close element o open element add text o to close element o open element add text o to close element o open element add text o to close element o open element add text o to close element o open element add text o to close element o color color c color o open element color add attribute rgba # + to hex c get r g b close element o open element a o i 0 i a length i++ write a i close element o open element a o i 0 i a length i++ write a i close element o open element a o i 0 i a length i++ write a i close element o font font f font o open element font add attribute name f get name add attribute style f get style add attribute size f get size close element o open element e o add attribute type factory get name e add text factory get value e close element illegal argument unable to store +o+ +o get write storable dom storable o i o tag name factory get name o tag name illegal argument no tag name +o open element tag name objectid contain key o add attribute ref objectid get o to objectid size 16 objectid put o add attribute o write close element add attribute name value value value value add attribute name value add attribute name value value value value add attribute name value add attribute name value value value value add attribute name value add attribute name value value value value add attribute name value add attribute name value value value equal value add attribute name value get prototype prototype prototype hash map prototype contain key current get node name prototype put current get node name factory create current get node name prototype get current get node name set doctype doctype doctype doctype 