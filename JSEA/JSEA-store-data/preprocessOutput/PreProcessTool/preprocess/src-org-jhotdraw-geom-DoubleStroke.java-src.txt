# stroke 1 0 2006 06 18 1996 2006 it contributor disclose accordance geom geom font draw stroke outline outline inner width stroke define distance between two outline draw outline width stroke define thickness outline author 1 0 2006 06 18 bug 1 0 21 march 2006 create stroke stroke basic stroke outline stroke inner width outline width miter limit dash dash phase stroke inner width outline width inner width outline width basic stroke p s q u r e basic stroke j o i n b e v e l 10f 0f stroke inner width outline width cap join miter limit dash dash phase inner width inner width outline width outline width miter limit miter limit outline stroke basic stroke outline width cap join miter limit dash dash phase outline stroke basic stroke outline width cap basic stroke j o i n b e v e l miter limit dash dash phase shape create stroke shape shape s bezi path bp bezi path general path left general path general path right general path coord 6 f i x m e we flatten path path iterator i s get path iterator 0 1d i do i next type i current segment coord type path iterator s e g m o v e t o bp size 0 trace stroke bp left right bp clear bp set close bp move coord 0 coord 1 path iterator s e g l i n e t o coord 0 bp get bp size 1 x 0 || coord 1 bp get bp size 1 y 0 bp line coord 0 coord 1 path iterator s e g q u d t o bp quad coord 0 coord 1 coord 2 coord 3 path iterator s e g u b i t o bp curve coord 0 coord 1 coord 2 coord 3 coord 4 coord 5 path iterator s e g l o s e bp set close bp size 0 trace stroke bp left right note could extend different stroke inner outh path right append left outline stroke create stroke shape right trace stroke bezi path bp general path left general path right x x x we support straight line segment here corner current previou thick line current corner 8 prev corner 8 point2 d intersect remove duplicate node bezi path bp close bezi path node prev bp get bp size 1 i 0 i bp size i++ bezi path node node bp get i prev x 0 node x 0 prev y 0 node y 0 bp remove i prev node bezi path node prev bp get 0 i 1 i bp size i++ bezi path node node bp get i prev x 0 node x 0 prev y 0 node y 0 bp remove i prev node handle first point bezi path bp close bp size 1 prev corner compute thick line bp get bp size 1 x 0 bp get bp size 1 y 0 bp get 0 x 0 bp get 0 y 0 inner width prev corner current corner compute thick line bp get 0 x 0 bp get 0 y 0 bp get 1 x 0 bp get 1 y 0 inner width current corner intersect geom intersect prev corner 0 prev corner 1 prev corner 4 prev corner 5 current corner 0 current corner 1 current corner 4 current corner 5 miter limit intersect right move intersect x intersect y right move prev corner 4 prev corner 5 right line current corner 0 current corner 1 intersect geom intersect prev corner 2 prev corner 3 prev corner 6 prev corner 7 current corner 2 current corner 3 current corner 6 current corner 7 miter limit intersect left move intersect x intersect y left move prev corner 6 prev corner 7 left line current corner 2 current corner 3 bp size 1 current corner compute thick line bp get 0 x 0 bp get 0 y 0 bp get 1 x 0 bp get 1 y 0 inner width current corner right move current corner 0 current corner 1 left move current corner 2 current corner 3 handle point middle bezi path i 1 n bp size 1 i n i++ tmp prev corner prev corner current corner current corner compute thick line bp get i x 0 bp get i y 0 bp get i+1 x 0 bp get i+1 y 0 inner width tmp intersect geom intersect prev corner 0 prev corner 1 prev corner 4 prev corner 5 current corner 0 current corner 1 current corner 4 current corner 5 miter limit intersect right line intersect x intersect y right line prev corner 4 prev corner 5 right line current corner 0 current corner 1 intersect geom intersect prev corner 2 prev corner 3 prev corner 6 prev corner 7 current corner 2 current corner 3 current corner 6 current corner 7 miter limit intersect left line intersect x intersect y left line prev corner 6 prev corner 7 left line current corner 2 current corner 3 handle last point bezi path bp close tmp prev corner prev corner current corner current corner compute thick line bp get bp size 1 x 0 bp get bp size 1 y 0 bp get 0 x 0 bp get 0 y 0 bp get 1 x 0 bp get 1 y 0 inner width tmp intersect geom intersect prev corner 0 prev corner 1 prev corner 4 prev corner 5 current corner 0 current corner 1 current corner 4 current corner 5 miter limit intersect right line intersect x intersect y right line prev corner 4 prev corner 5 right line current corner 0 current corner 1 intersect geom intersect prev corner 2 prev corner 3 prev corner 6 prev corner 7 current corner 2 current corner 3 current corner 6 current corner 7 miter limit intersect left line intersect x intersect y left line prev corner 6 prev corner 7 left line current corner 2 current corner 3 right close path left close path right line current corner 4 current corner 5 left line current corner 6 current corner 7 compute thick line seg offset corner compute thick line seg 0+offset seg 1+offset seg 2+offset seg 3+offset inner width corner compute thick line x1 y1 x2 y2 thickness corner dx x2 x1 dy y2 y1 line length line length math sqrt dx dx + dy dy scale thickness 2d line length x y increment endpoint need create rectangle ddx scale dy ddy scale dx ddx + ddx 0 ? 0 5 0 5 ddy + ddy 0 ? 0 5 0 5 now we compute corner point corner 0 x1 + ddx corner 1 y1 + ddy corner 2 x1 ddx corner 3 y1 ddy corner 4 x2 + ddx corner 5 y2 + ddy corner 6 x2 ddx corner 7 y2 ddy corner 