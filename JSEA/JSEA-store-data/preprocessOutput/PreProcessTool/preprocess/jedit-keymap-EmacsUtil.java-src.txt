org jedit keymap org gjt sp jedit buffer org gjt sp jedit edit action org gjt sp jedit registers org gjt sp jedit gui history model org gjt sp jedit gui input handler org gjt sp jedit j edit org gjt sp jedit textarea selection org gjt sp jedit textarea text area emacs macro utility functions these functions are based on emacs bsh from the emacs macros by brian m clapper rewritten in by alan ezust in 2013 emacs buffer buffer text area text area emacs buffer j edit get active view get buffer text area j edit get active view get text area emacs kill line last action was repeating same macro emacs emacs kill line caret text area get caret position caret line text area get caret line line end text area get line end offset caret line we re at the end of line ignoring any trailing white space then kill the newline too caret2 caret + 1 caret2 line end ch at caret2 ! character is whitespace ch caret2++ deleted text selection selection caret2 line end we re at the end of the line join line and the next line but it with a delete not with text area join lines to emulate emacs better caret line ! text area get last physical line selection selection range caret caret2 simple delete to end of line selection selection range caret line end 1 text area delete to end of line selection ! text area set selection selection deleted text text area get selected text text area replace selection text area remove from selection selection last action was clipboard get clipboard clipboard clipboard set clipboard clipboard + deleted text set clipboard deleted text repeating same macro macro name input handler ih j edit get active view get input handler edit action last action ih get last action last action count ih get last action count when called from within a macro the last action will be that macro but the last action count is greater than 1 then it s a repeat repeat last action get name equals macro name last action count 1 repeat repeat line at i builder sb builder ! at end of buffer i c at i sb append c c sb to at i i buffer get length 0 buffer get text i 1 at 0 at caret caret text area get caret position at end of buffer ? \0 buffer get text caret 1 at 0 at end of buffer text area text area j edit get active view get text area at end of buffer text area get caret position at end of buffer caret caret buffer get length eat non alphanums eat eat ch at caret ch text area go to next line text area go to start of line character is letter or digit ch eat text area go to next character text area get caret position eat whitespace eat eat ch at caret ch text area go to next line text area go to start of line character is whitespace ch text area go to next character eat text area get caret position get cardinal property name value result j edit get property name value result 0 result value result make buffer property name prefix make buffer property name buffer prefix make buffer property name buffer the buffer prefix builder prop name builder prefix convert any windows style separators to unix ones since backslashes are special characters in properties files sep get property separator buf name ! sep equals backslash is also special in regular expressions since in theory the separator could be anything we check explicitly backslash here sep equals \\ sep builder sep append \\ to buf name the buffer get path replace all sep buf name the buffer get path prop name append buf name prop name to get wrap get cardinal property buffer max line len 79 get mark buffer buffer prop name make buffer property name emacs mark mark get cardinal property prop name 1 mark ! 1 mark buffer get length mark buffer get length 1 mark set mark buffer buffer pos prop name make buffer property name buffer emacs mark j edit set temporary property prop name value of pos beep u i manager get look and feel provide feedback selection get kill region there s a selection use it instead caret text area get caret position selection selection text area get selection at offset caret selection mark get mark buffer mark 1 beep selection selection range math min caret mark math max caret mark text area set selection selection selection get clipboard value of registers get register $ set clipboard registers set register $ set clipboard selection selection text area text area j edit get active view get text area set clipboard text area get selected text selection add to clipboard and history the special register $ is the clipboard set clipboard save the text in the history too history model get model clipboard add item add to clipboard and history selection selection add to clipboard and history text area get selected text selection find end of sentence caret text area get caret position at end of buffer caret ch at caret ch character is whitespace at caret + 1 caret++ caret++ caret find beginning of sentence caret text area get caret position 1 at caret caret caret 0 ch at caret ch character is whitespace at caret + 1 caret++ character is upper ch caret caret 0 character is whitespace at caret caret caret 