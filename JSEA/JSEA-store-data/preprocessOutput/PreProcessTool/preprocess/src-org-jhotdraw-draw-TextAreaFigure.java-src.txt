# text area figure 2 0 1 2006 02 27 copyright c 1996 2006 by the original author of jhotdraw and all it contributor jhotdraw org all right reserve software is the confidential and proprietary information of jhotdraw org confidential information you shall not disclose such confidential information and shall use it only in accordance with the term of the license agreement you enter into with jhotdraw org ??? org jhotdraw draw org jhotdraw font geom text io org jhotdraw draw attribute key org jhotdraw geom org jhotdraw xml dom input org jhotdraw xml dom output a text area figure contain format text it automatically rearrange the text to fit it allocate display area breaking the line at word boundary whenev possible the text can contain eith l f or c r l f sequence to separate paragraph a well a tab character table like formatting and alignment currently the tab are distribute at regular interval a determine by the tab size property tab align correctly with eith fix or variable font when resize the vertical size of the display box is not enough to display all the text text area figure display a dash red line at the bottom of the figure to indicate there is hide text text are figure us all standard attribute the area rectangle2 d ie fill color pen color the border font size font style and font name a well a four additional attribute left margin right margin top margin and tab size p x x x text area figure should not draw a rectangle on it own but rath rely on a decorator we probably need a decorator connector and we need a way to specify the inner bound of the decorator we also need a way to center the text of the text area figure verticaly and horizontaly author eduardo franco in context original wern randelshof derive 2 0 1 2006 02 27 draw u n d e r l i n e l o w o n e p i x e l instead of u n d e r l i n e o n 2 0 2006 01 14 change to support coordinate 1 0 5 m???rz 2004 create text area figure attribute figure text holder rectangle2 d bound rectangle2 d editable basic stroke dash basic stroke 1f basic stroke c a p b u t t basic stroke j o i n b e v e l 0f 4f 4f 0f cache of the text figure s layout text layout text layout create a instance text area figure text text area figure text set text text get the text show by the text figure get text get attribute t e x t set the text show by the text figure set text text set attribute t e x t text basic set bound point2 d anchor point2 d bound x math min anchor x x bound y math min anchor y y bound width math max 1 math ab x anchor x bound height math max 1 math ab y anchor y text layout basic transform affine transform tx point2 d anchor get start point point2 d get end point basic set bound point2 d tx transform anchor anchor point2 d tx transform contain point2 d p bound contain p the inset use to draw text insets2 d get inset sw math ceil s t r o k e w t h get 2 insets2 d inset insets2 d 4 4 4 4 insets2 d inset top+sw inset left+sw inset bottom+sw inset right+sw get tab size 8 draw text graphics2 d g get text || is editable font font get font is underline f o n t u n d e r l i n e d get insets2 d inset get inset rectangle2 d text rect rectangle2 d bound x + inset left bound y + inset top bound width inset left inset right bound height inset top inset bottom left margin text rect x right margin math max left margin + 1 text rect x + text rect width vertical po text rect y left margin right margin tab width get tab size g get font metric font width m tab stop text rect width tab width i 0 i tab stop length i++ tab stop i text rect x + tab width i + 1 get text shape save clip area g get clip g clip text rect paragraph get text split string split get text i 0 i paragraph length i++ paragraph i length 0 paragraph i attribute a attribute paragraph i a add attribute text attribute f o n t font is underline a add attribute text attribute u n d e r l i n e text attribute u n d e r l i n e l o w o n e p i x e l tab count tokeniz paragraph i count token 1 vertical po draw paragraph g a get iterator vertical po left margin right margin tab stop tab count vertical po text rect y + text rect height g set clip save clip area left margin right margin || vertical po text rect y + text rect height g set color color red g set stroke dash g draw line2 d text rect x text rect y + text rect height 1 text rect x + text rect width 1 text rect y + text rect height 1 draw a paragraph of text at the specify y location and the y position the next paragraph draw paragraph graphics2 d g attribute character iterator style text vertical po left margin right margin tab stop tab count assume style text is an attribute character iterator and the number of tab in style text is tab count tab location tab count+1 i 0 c style text first c style text d o n e c style text next c tab location i++ style text get index tab location tab count style text get end index 1 now tab location ha an entry every tab s offset in the text convenience the last entry is tab location is the offset of the last character in the text line measurer measurer line measurer style text get font render context current tab 0 measurer get position style text get end index lay out and draw each line all segment on a line must be compute before any drawing can occur since we must know the large ascent on the line text layout are compute and store in a list their horizontal position are store in a parallel list line contain text is after first segment is draw line contain text line complete max ascent 0 max descent 0 horizontal po left margin link list text layout layout link list text layout link list pen position link list line complete wrapping width right margin horizontal po text layout layout layout measurer next layout wrapping width tab location current tab +1 line contain text layout can be line contain text is layout layout add layout pen position add horizontal po horizontal po + layout get advance max ascent math max max ascent layout get ascent max descent math max max descent layout get descent + layout get leading line complete line contain text measurer get position tab location current tab +1 current tab++ measurer get position style text get end index line complete tab stop length 0 || horizontal po tab stop tab stop length 1 line complete line complete move to next tab stop j j 0 horizontal po tab stop j j++ horizontal po tab stop j vertical po + max ascent iterator text layout layout layout iterator iterator position pen position iterator now iterate through layout and draw them layout ha next text layout next layout layout next next position position next next layout draw g next position vertical po vertical po + max descent vertical po draw fill graphics2 d g g fill bound draw stroke graphics2 d g g draw bound rectangle2 d get bound rectangle2 d bound get bounds2 d collection handle create handle detail level link list handle handle link list handle create handle detail level detail level 0 handle add font size handle handle validate validate text layout is editable editable set editable b editable b get text column get text ? 4 math max get text length 4 a specialize tool the given coordinate p no specialize tool is available tool get tool point2 d p is editable contain p ? text area tool read bound dom input in i o bound x in get attribute x 0d bound y in get attribute y 0d bound width in get attribute w 0d bound height in get attribute h 0d write bound dom output out i o out add attribute x bound x out add attribute y bound y out add attribute w bound width out add attribute h bound height read dom input in i o read bound in read attribute in text layout write dom output out i o write bound out write attribute out text area figure clone text area figure that text area figure clone that bound rectangle2 d bound clone that text holder get label restore to geometry rectangle2 d r rectangle2 d geometry bound x r x bound y r y bound width r width bound height r height get restore data bound clone font get font attribute key get font color get text color t e x t c o l o r get color get fill color f i l l c o l o r get set font size size f o n t s i z e set size get font size f o n t s i z e get value 