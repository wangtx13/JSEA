# text area figure 2 0 1 2006 02 27 1996 2006 it contributor disclose accordance ??? draw font geom text io draw attribute key geom xml dom input xml dom output text area figure contain format text automatically rearrange text fit it allocate display area breaking line at word boundary whenev possible text contain eith l f r l f sequence separate paragraph well tab table like formatting alignment currently tab are distribute at regular interval determine tab size property tab align correctly eith variable font when resize vertical size display box enough display text text area figure display dash red line at bottom figure indicate there hide text text are figure us standard attribute area rectangle2 d ie fill color pen color border font size font style font well four additional attribute left margin right margin top margin tab size p x x x text area figure should draw rectangle on it own rath rely on decorator we probably need decorator connector we need way specify inner bound decorator we also need way center text text area figure verticaly horizontaly author eduardo franco context derive 2 0 1 2006 02 27 draw u n d e r l i n e l o o n e p i x e l instead u n d e r l i n e o n 2 0 2006 01 14 support coordinate 1 0 5 m???rz 2004 create text area figure attribute figure text holder rectangle2 d bound rectangle2 d editable basic stroke dash basic stroke 1f basic stroke p b u t t basic stroke j o i n b e v e l 0f 4f 4f 0f cache text figure s layout text layout text layout create instance text area figure text text area figure text set text text get text show text figure get text get attribute t e x t set text show text figure set text text set attribute t e x t text basic set bound point2 d anchor point2 d bound x math anchor x x bound y math anchor y y bound width math 1 math ab x anchor x bound height math 1 math ab y anchor y text layout basic transform affine transform tx point2 d anchor get start point point2 d get end point basic set bound point2 d tx transform anchor anchor point2 d tx transform contain point2 d p bound contain p inset use draw text insets2 d get inset sw math ceil s t r o k e t h get 2 insets2 d inset insets2 d 4 4 4 4 insets2 d inset top+sw inset left+sw inset bottom+sw inset right+sw get tab size 8 draw text graphics2 d g get text || editable font font get font underline f o n t u n d e r l i n e d get insets2 d inset get inset rectangle2 d text rect rectangle2 d bound x + inset left bound y + inset top bound width inset left inset right bound height inset top inset bottom left margin text rect x right margin math left margin + 1 text rect x + text rect width vertical po text rect y left margin right margin tab width get tab size g get font metric font width m tab stop text rect width tab width i 0 i tab stop length i++ tab stop i text rect x + tab width i + 1 get text shape save clip area g get clip g clip text rect paragraph get text split string split get text i 0 i paragraph length i++ paragraph i length 0 paragraph i attribute attribute paragraph i add attribute text attribute f o n t font underline add attribute text attribute u n d e r l i n e text attribute u n d e r l i n e l o o n e p i x e l tab count tokeniz paragraph i count token 1 vertical po draw paragraph g get iterator vertical po left margin right margin tab stop tab count vertical po text rect y + text rect height g set clip save clip area left margin right margin || vertical po text rect y + text rect height g set color color red g set stroke dash g draw line2 d text rect x text rect y + text rect height 1 text rect x + text rect width 1 text rect y + text rect height 1 draw paragraph text at specify y location y position next paragraph draw paragraph graphics2 d g attribute character iterator style text vertical po left margin right margin tab stop tab count assume style text attribute character iterator number tab style text tab count tab location tab count+1 i 0 style text first style text d o n e style text next tab location i++ style text get index tab location tab count style text get end index 1 now tab location ha entry every tab s offset text convenience last entry tab location offset last character text line measurer measurer line measurer style text get font render context current tab 0 measurer get position style text get end index lay out draw each line segment on line compute before occur since we know large ascent on line text layout are compute store list their horizontal position are store parallel list line contain text after first segment draw line contain text line complete ascent 0 descent 0 horizontal po left margin link list text layout layout link list text layout link list pen position link list line complete wrapping width right margin horizontal po text layout layout layout measurer next layout wrapping width tab location current tab +1 line contain text layout line contain text layout layout add layout pen position add horizontal po horizontal po + layout get advance ascent math ascent layout get ascent descent math descent layout get descent + layout get leading line complete line contain text measurer get position tab location current tab +1 current tab++ measurer get position style text get end index line complete tab stop length 0 || horizontal po tab stop tab stop length 1 line complete line complete move next tab stop j j 0 horizontal po tab stop j j++ horizontal po tab stop j vertical po + ascent iterator text layout layout layout iterator iterator position pen position iterator now iterate through layout draw them layout ha next text layout next layout layout next next position position next next layout draw g next position vertical po vertical po + descent vertical po draw fill graphics2 d g g fill bound draw stroke graphics2 d g g draw bound rectangle2 d get bound rectangle2 d bound get bounds2 d collection handle create handle detail level link list handle handle link list handle create handle detail level detail level 0 handle add font size handle handle validate validate text layout editable editable set editable b editable b get text column get text ? 4 math get text length 4 specialize tool given coordinate p specialize tool available tool get tool point2 d p editable contain p ? text area tool read bound dom input i o bound x get attribute x 0d bound y get attribute y 0d bound width get attribute 0d bound height get attribute h 0d write bound dom output out i o out add attribute x bound x out add attribute y bound y out add attribute bound width out add attribute h bound height read dom input i o read bound read attribute text layout write dom output out i o write bound out write attribute out text area figure clone text area figure text area figure clone bound rectangle2 d bound clone text holder get label restore geometry rectangle2 d r rectangle2 d geometry bound x r x bound y r y bound width r width bound height r height get restore data bound clone font get font attribute key get font color get text color t e x t o l o r get color get fill color f i l l o l o r get set font size size f o n t s i z e set size get font size f o n t s i z e get value 