# image bevel border 3 0 2003 08 31 copyright c 1996 2006 by the original author of jhotdraw and all it contributor jhotdraw org all right reserve software is the confidential and proprietary information of jhotdraw org confidential information you shall not disclose such confidential information and shall use it only in accordance with the term of the license agreement you enter into with jhotdraw org org jhotdraw quaqua org jhotdraw draw action border image plaf basic draw a fill bevel border using an image and inset the image must consist of a bevel and a fill area p the inset and the size of the image are use determine which part of the image shall be use to draw the corner and edge of the bevel a well the fill area p example you provide an image of size 10 10 and a inset of size 2 2 4 4 then the corner of the border are make up of top left 2 2 top right 2 4 bottom left 2 4 bottom right 4 4 rectangle of the image the inner area of the image is use to fill the inner area author wern randelshof 3 0 x 2003 09 05 copy into org jhotdraw quaqua the quaqua look and feel 3 0 2003 08 31 move from org jhotdraw gui plaf to org jhotdraw gui border rename from bevel border to image bevel border to avoid name conflict with border bevel border constructor option fill content area add 2 0 2003 07 19 redesign 1 1 1 2003 07 12 cast when filling a rectangle using a texture 1 1 2002 05 29 refactor 1 0 2001 10 16 image bevel border border v e r b o s e the image to be use drawing buffer image image the border inset inset border inset the inset of the image inset image inset attribute is set to when the image is use to fill the content area too fill content area create a instance with the given image and inset the image ha the same inset a the border image bevel border image img inset border inset img border inset border inset create a instance with the given image and inset the image ha different inset than the border image bevel border image img inset image inset inset border inset img image inset border inset create a instance with the given image and inset the image ha different inset than the border image bevel border image img inset image inset inset border inset fill content area img buffer image image buffer image img frame f frame f pack medium tracker t medium tracker f t add image img 0 t wait all interrupt e image buffer image img get width f img get height f buffer image t y p e i n t a r g b graphics2 d img graphic image create graphic img graphic draw image img 0 0 f img graphic dispose f dispose image inset image inset border inset border inset fill content area fill content area the border is opaque alway is border opaque the inset of the border c the component which border inset value applie inset get border inset component c inset border inset clone paint the bevel image the specify component with the specify position and size c the component which border is being paint gr the paint graphic x the x position of the paint border y the y position of the paint border width the width of the paint border height the height of the paint border paint border component c graphic gr x y width height image cast graphic to graphics2 d graphics2 d g graphics2 d gr set some variable easy access of inset and image size top image inset top left image inset left bottom image inset bottom right image inset right img width image get width img height image get height optimisation draw image directly it fit into the component fill content area width img width height img height g draw image image x y c optimisation remove inset image width or image height fit width img width left img width right 0 height img height top img height bottom 0 adjust inset component is too small width left + right left math min left width 2 math max 0 left + width left right 2 right width left height top + bottom top math min top height 2 math max 0 top + height top bottom 2 bottom height top draw the lead top 0 left 0 g draw image image x y x + left y + top 0 0 left top c top 0 right 0 g fill rect x+width right y x+width y+top g draw image image x + width right y x + width y + top img width right 0 img width top c bottom 0 left 0 g draw image image x y + height bottom x + left y + height 0 img height bottom left img height c bottom 0 right 0 g draw image image x + width right y + height bottom x + width y + height img width right img height bottom img width img height c draw the edge buffer image sub img texture paint paint north top 0 left + right width sub img image get subimage left 0 img width right left top paint texture paint sub img rectangle x+left y img width left right top g set paint paint g fill rect x+left y width left right top south bottom 0 left + right width sub img image get subimage left img height bottom img width right left bottom paint texture paint sub img rectangle x+left y + height bottom img width left right bottom g set paint paint g fill rect x+left y + height bottom width left right bottom west left 0 top + bottom height sub img image get subimage 0 top left img height top bottom paint texture paint sub img rectangle x y+top left img height top bottom g set paint paint g fill rect x y+top left height top bottom east right 0 top + bottom height sub img image get subimage img width right top right img height top bottom paint texture paint sub img rectangle x+width right y + top right img height top bottom g set paint paint g fill rect x+width right y + top right height top bottom fill the center fill content area g set color color yellow left + right width top + bottom height sub img image get subimage left top img width right left img height top bottom paint texture paint sub img rectangle x + left y + top img width right left img height top bottom g set paint paint g fill rect x+left y + top width right left height top bottom 