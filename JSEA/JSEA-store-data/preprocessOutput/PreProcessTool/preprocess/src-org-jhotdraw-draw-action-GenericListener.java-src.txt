# generic listener 1 1 2003 11 03 1996 2006 contributor right reserve thi disclose accordance term enter draw action reflect generic listener create anonymou listener at runtime p usage pre demo j panel root j panel border layout j label label j label my button action action e label set text button action my mouse enter mouse e label set text mouse enter +e demo j button button j button button dynamic listener thi listener generate at run time i e at run time action listener generate then load one these actually create even many call generic listener create action listener are make action listener action listener action listener generic listener create action listener action perform thi my button action button add action listener action listener here s another dynamically generate listener thi one little different because listener argument actually specifie one many listener previou example action perform one action listener mouse listener mouse listener mouse listener generic listener create mouse listener mouse enter thi my mouse enter button add mouse listener mouse listener pre wern randelshof 1 1 2003 11 03 support parameterles target add 1 0 2003 11 02 create generic listener convenient create listener target target thi look up listener target so t have create listener listener target target listener get listener listener listener search target same parameter type listener target get target target target listener get parameter type nothing found? search target parameter target target get target target target 0 still nothing found? we give up target runtime +target name+ +target get create listener target target instance implement contain declaration listener thi listener apply target target incoming create listener target target create us dynamic proxy p i introduce j d k 1 3 create instance invok override handle target on target invocation handler handler invok proxy throwable send except target superclass handling listener equal target get parameter type length 0 special treatment parameterles target target target 0 regular treatment target have same argument list listener target target proxy cl listener get declare loader cl cl get loader proxy proxy instance cl cl handler invocation handler which handle basic invok implement invocation handler proxy throwable get declare get equal hash proxy hash proxy equal equal proxy equal proxy 0 equal proxy proxy although listener are suppose we allow type here produce 0 appropriate value get type protect proxy hash proxy identity hash proxy protect proxy equal proxy other proxy other ? t r u e f l s e protect proxy proxy proxy get get + + hex proxy hash character 0 character 0 0 0 value rt rt primitive rt rt f l s e rt 0 thi convert other kind number 0 helper e z create get listener listener listener given argument create find out which listener desire m listener get result i 0 i m length i++ listener equal m i get result runtime ambiguou +m i + v +result result m i result runtime +listen name+ +listen result get target target target parameter type m target get get result each i 0 i m length i++ target equal m i get each p m i get parameter type p length parameter type length each j 0 j p length j++ p j assignable parameter type j each result runtime ambiguou +m i + v +result result m i result runtime +target name+ +target get result result raise result result result result result raise m m get declare modifier m get modifier modifier get modifier m yes search which m override sc get superclass sc sm raise m sc sm sm get i 0 i length i++ im raise m i im im m here raise m sm get m get m get parameter type raise sm ee generic listener 