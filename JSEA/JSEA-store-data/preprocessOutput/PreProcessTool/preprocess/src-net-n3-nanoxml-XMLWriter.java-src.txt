xml writer nano xml $ revision 1 4 $ $ date 2002 03 24 11 37 51 $ $ name r e l e a s e 2 2 1 $ is part of nano xml 2 copyright c 2000 2002 marc de scheemaeck all right reserve software is provide a is without any express or imply warranty in no event will the author be hold liable any damage arise from the use of software permission is grant to anyone to use software any purpose include commercial application and to alter it and redistribute it freely subject to the following restriction 1 the origin of software must not be misrepresent you must not claim that you write the original software you use software in a product an acknowledgment in the product documentation would be appreciate but is not require 2 alter source version must be plainly mark a such and must not be misrepresent a being the original software 3 notice may not be remove or alter from any source distribution net n3 nanoxml io i o io output stream io print writer io writer iterator vector an xml writer write xml data to a stream see net n3 nanoxml i xml element see io writer author marc de scheemaeck $ name r e l e a s e 2 2 1 $ $ revision 1 4 $ xml writer where to write the output to print writer writer create a xml writer writer where to write the output to xml writer writer writer writer print writer writer print writer writer writer print writer writer create a xml writer stream where to write the output to xml writer output stream stream writer print writer stream clean up the when it s destroy finalize throwable writer finalize write an xml element xml the non xml element to write write i xml element xml i o write xml 0 write an xml element xml the non xml element to write pretty print space need to be insert to make the output more readable write i xml element xml pretty print i o write xml pretty print 0 write an xml element xml the non xml element to write pretty print space need to be insert to make the output more readable indent how many space to indent the element write i xml element xml pretty print indent i o write xml pretty print indent write an xml element xml the non xml element to write pretty print space need to be insert to make the output more readable indent how many space to indent the element write i xml element xml pretty print indent collapse empty element i o pretty print i 0 i indent i++ writer print xml get name xml get content pretty print write encode xml get content trim writer write encode xml get content writer print writer print xml get full name vector nsprefix vector xml get namespace xml get name equal xml get full name writer print xmln \ + xml get namespace + prefix xml get full name prefix prefix substring 0 prefix index of nsprefix add element prefix writer print xmln + prefix writer print \ + xml get namespace + \ iterator enm xml iterate attribute name enm ha next key enm next index key index of index 0 namespace xml get attribute namespace key namespace prefix key substring 0 index nsprefix contain prefix writer print xmln + prefix writer print \ + namespace + nsprefix add element prefix enm xml iterate attribute name enm ha next key enm next value xml get attribute key writer print + key + \ write encode value writer print xml get content xml get content length 0 writer print write encode xml get content writer print + xml get full name + pretty print writer xml ha child || collapse empty element writer print pretty print writer enm xml iterate child enm ha next i xml element child i xml element enm next write child pretty print indent + 4 collapse empty element pretty print i 0 i indent i++ writer print writer print + xml get full name + pretty print writer writer print pretty print writer writer flush write a encoding reserve character str the to write write encode str i 0 i str length i++ c str at i c 0x0 a writer print c writer print lt writer print writer print amp \ writer print apo writer print c || c 0x7 e writer print #x writer print to c 16 writer print writer print c 