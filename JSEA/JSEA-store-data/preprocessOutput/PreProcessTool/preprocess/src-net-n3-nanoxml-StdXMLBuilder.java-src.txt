std xml builder nano xml $ revision 1 3 $ $ date 2002 01 04 21 03 28 $ $ name r e l e a s e 2 2 1 $ is part of nano xml 2 copyright c 2000 2002 marc de scheemaeck all right reserve software is provide a is without any express or imply warranty in no event will the author be hold liable any damage arise from the use of software permission is grant to anyone to use software any purpose include commercial application and to alter it and redistribute it freely subject to the following restriction 1 the origin of software must not be misrepresent you must not claim that you write the original software you use software in a product an acknowledgment in the product documentation would be appreciate but is not require 2 alter source version must be plainly mark a such and must not be misrepresent a being the original software 3 notice may not be remove or alter from any source distribution net n3 nanoxml io i o io reader stack std xml builder is a concrete of i xml builder which create a tree of i xml element from an xml data source see net n3 nanoxml xml element author marc de scheemaeck $ name r e l e a s e 2 2 1 $ $ revision 1 3 $ std xml builder i xml builder stack contain the current element and it parent stack stack the root element of the parse xml tree i xml element root prototype element create the tree i xml element prototype create the builder std xml builder xml element create the builder prototype the prototype to use when building the tree std xml builder i xml element prototype stack root prototype prototype clean up the when it s destroy finalize throwable prototype root stack clear stack finalize is call before the parser start processing it input the of the xml data source line nr the line on which the parse start start building line nr stack stack root is call when a processing instruction is encounter p is with target xml are handle by the parser target the p i target reader to read the data from the p i processing instruction target reader reader nothing to is call when a xml element is encounter see #end element name the name of the element n prefix the prefix use to identify the namespace no namespace ha be specify parameter is n u r i the u r i associate with the namespace no namespace ha be specify or no u r i is associate with n prefix parameter is the of the xml data source line nr the line in the source where the element start start element name n prefix n u r i line nr full name name n prefix full name n prefix + + name i xml element elt prototype create element full name n u r i line nr stack empty root elt i xml element top i xml element stack peek top add child elt stack push elt is call when the attribute of an xml element have be process see #start element see #add attribute name the name of the element n prefix the prefix use to identify the namespace no namespace ha be specify parameter is n u r i the u r i associate with the namespace no namespace ha be specify or no u r i is associate with n prefix parameter is element attribute process name n prefix n u r i nothing to is call when the end of an xml elemnt is encounter see #start element name the name of the element n prefix the prefix use to identify the namespace no namespace ha be specify parameter is n u r i the u r i associate with the namespace no namespace ha be specify or no u r i is associate with n prefix parameter is end element name n prefix n u r i i xml element elt i xml element stack pop elt get child count 1 i xml element child elt get child at index 0 child get name elt set content child get content elt remove child at index 0 is call when a attribute of an xml element is encounter key the key name of the attribute n prefix the prefix use to identify the namespace no namespace ha be specify parameter is n u r i the u r i associate with the namespace no namespace ha be specify or no u r i is associate with n prefix parameter is value the value of the attribute type the type of the attribute no type is know c d a t a is an occur processing the event add attribute key n prefix n u r i value type full name key n prefix full name n prefix + + key i xml element top i xml element stack peek top ha attribute full name xml parse top get top get line nr duplicate attribute + key n prefix top set attribute full name n u r i value top set attribute full name value is call when a p c d a t a element is encounter a reader is supply from which you can read the data the reader will only read the data of the element you t need to check boundary you t read the full element the rest of the data is skip you also t have to care about entity they are resolve by the parser reader the reader from which you can retrieve the data the of the xml data source line nr the line in the source where the element start add p c data reader reader line nr buf size 2048 size read 0 buffer str buffer buf size buf buf size size read buf size buf size 2 str ensure capacity buf size size size reader read buf i o e size 0 str append buf 0 size size read + size i xml element elt prototype create element line nr elt set content str to stack empty i xml element top i xml element stack peek top add child elt the result of the building process is call just before the i parse i of i xml parser see net n3 nanoxml i xml parser#parse the result of the building process get result root 