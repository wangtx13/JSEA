std xml builder nano xml $ revision 1 3 $ $ date 2002 01 04 21 03 28 $ $ r e l e s e 2 2 1 $ nano xml 2 2000 2002 purpose 1 2 3 net n3 io i o io reader stack std xml builder concrete i xml builder which create tree i xml element xml data see net n3 xml element author $ r e l e s e 2 2 1 $ $ revision 1 3 $ std xml builder i xml builder stack contain current element it parent stack stack root element parse xml tree i xml element root prototype element create tree i xml element prototype create builder std xml builder xml element create builder prototype prototype when building tree std xml builder i xml element prototype stack root prototype prototype clean up when s destroy finalize throwable prototype root stack clear stack finalize call before parser start processing it input xml data line nr line on which parse start start building line nr stack stack root call when processing instruction encounter p target xml are handle parser target p i target reader read data p i processing instruction target reader reader nothing call when xml element encounter see #end element element n prefix prefix use identify namespace namespace ha be specify parameter n u r i u r i associate namespace namespace ha be specify u r i associate n prefix parameter xml data line nr line where element start start element n prefix n u r i line nr full n prefix full n prefix + + i xml element elt prototype create element full n u r i line nr stack empty root elt i xml element top i xml element stack peek top add child elt stack push elt call when attribute xml element have be process see #start element see #add attribute element n prefix prefix use identify namespace namespace ha be specify parameter n u r i u r i associate namespace namespace ha be specify u r i associate n prefix parameter element attribute process n prefix n u r i nothing call when end xml elemnt encounter see #start element element n prefix prefix use identify namespace namespace ha be specify parameter n u r i u r i associate namespace namespace ha be specify u r i associate n prefix parameter end element n prefix n u r i i xml element elt i xml element stack pop elt get child count 1 i xml element child elt get child at index 0 child get elt set content child get content elt remove child at index 0 call when attribute xml element encounter key key attribute n prefix prefix use identify namespace namespace ha be specify parameter n u r i u r i associate namespace namespace ha be specify u r i associate n prefix parameter value value attribute type type attribute type know d t occur processing add attribute key n prefix n u r i value type full key n prefix full n prefix + + key i xml element top i xml element stack peek top ha attribute full xml parse top get top get line nr duplicate attribute + key n prefix top set attribute full n u r i value top set attribute full value call when p d t element encounter reader supply which read data reader read data element t need check boundary t read full element rest data skip also t have care about entity they are resolve parser reader reader which retrieve data xml data line nr line where element start add p data reader reader line nr buf size 2048 size read 0 buffer str buffer buf size buf buf size size read buf size buf size 2 str ensure capacity buf size size size reader read buf i o e size 0 str append buf 0 size size read + size i xml element elt prototype create element line nr elt set content str stack empty i xml element top i xml element stack peek top add child elt result building process call just before i parse i i xml parser see net n3 i xml parser#parse result building process get result root 